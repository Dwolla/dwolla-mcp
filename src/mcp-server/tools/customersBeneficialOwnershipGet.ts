/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersBeneficialOwnershipGet } from "../../funcs/customersBeneficialOwnershipGet.js";
import { GetBeneficialOwnershipStatusForCustomerRequest$zodSchema } from "../../models/getbeneficialownershipstatusforcustomerop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetBeneficialOwnershipStatusForCustomerRequest$zodSchema,
};

export const tool$customersBeneficialOwnershipGet: ToolDefinition<typeof args> =
  {
    name: "customers-beneficial-ownership-get",
    description: `Retrieve beneficial ownership status

Returns the certification status of beneficial ownership for a business verified customer. Status indicates whether beneficial owner information has been certified and affects the customer's ability to send funds. Possible values include uncertified, certified, and recertify.`,
    scopes: ["read"],
    annotations: {
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false,
      "readOnlyHint": false,
    },
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await customersBeneficialOwnershipGet(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
