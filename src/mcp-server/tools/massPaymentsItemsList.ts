/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { massPaymentsItemsList } from "../../funcs/massPaymentsItemsList.js";
import { ListMassPaymentItemsRequest$zodSchema } from "../../models/listmasspaymentitemsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ListMassPaymentItemsRequest$zodSchema,
};

export const tool$massPaymentsItemsList: ToolDefinition<typeof args> = {
  name: "mass-payments-items-list",
  description: `List items for a mass payment

Retrieve individual payment items within a mass payment with optional status filtering and pagination support. Each item represents a distinct payment with status indicators (failed, pending, success) showing whether a transfer was successfully created. Returns paginated item details including amount, destination, metadata, and error information for failed items. Supports filtering by status and standard pagination.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await massPaymentsItemsList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
