/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { fundingSourcesBalanceGet } from "../../funcs/fundingSourcesBalanceGet.js";
import { GetFundingSourceBalanceRequest$zodSchema } from "../../models/getfundingsourcebalanceop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetFundingSourceBalanceRequest$zodSchema,
};

export const tool$fundingSourcesBalanceGet: ToolDefinition<typeof args> = {
  name: "funding-sources-balance-get",
  description: `Retrieve funding source balance

Returns the current balance for a specific funding source. For bank accounts, includes available and closing balances; for Dwolla balance, includes balance and total amounts. All responses include currency and last updated timestamp. Supports bank accounts (via Open Banking) and Dwolla balance (verified customers only).`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await fundingSourcesBalanceGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
