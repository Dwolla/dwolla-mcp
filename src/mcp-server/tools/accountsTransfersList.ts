/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountsTransfersList } from "../../funcs/accountsTransfersList.js";
import { ListAndSearchTransfersRequest$zodSchema } from "../../models/listandsearchtransfersop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ListAndSearchTransfersRequest$zodSchema,
};

export const tool$accountsTransfersList: ToolDefinition<typeof args> = {
  name: "accounts-transfers-list",
  description: `List and search account transfers

Returns a paginated, searchable list of transfers associated with the specified Main Dwolla account. Supports advanced filtering by amount range, date range, transfer status, and correlation ID. Results are limited to 10,000 transfers per query; use date range filters for historical data beyond this limit.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await accountsTransfersList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
