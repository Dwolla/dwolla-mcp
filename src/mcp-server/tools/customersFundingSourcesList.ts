/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersFundingSourcesList } from "../../funcs/customersFundingSourcesList.js";
import { ListCustomerFundingSourcesRequest$zodSchema } from "../../models/listcustomerfundingsourcesop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ListCustomerFundingSourcesRequest$zodSchema,
};

export const tool$customersFundingSourcesList: ToolDefinition<typeof args> = {
  name: "customers-funding-sources-list",
  description: `List customer funding sources

Returns all funding sources for a customer, including bank accounts and Dwolla balance (verified customers only). Shows verification status, limited account details, and creation dates. Supports filtering to exclude removed funding sources using the removed parameter.`,
  scopes: ["read"],
  annotations: {
    "destructiveHint": false,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": false,
  },
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await customersFundingSourcesList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
