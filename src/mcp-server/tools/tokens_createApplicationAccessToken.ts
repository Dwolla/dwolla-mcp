/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tokens_createApplicationAccessToken } from "../../funcs/tokens_createApplicationAccessToken.js";
import { CreateApplicationAccessTokenRequest$zodSchema } from "../../models/operations/createapplicationaccesstoken.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: CreateApplicationAccessTokenRequest$zodSchema,
};

export const tool$tokens_createApplicationAccessToken: ToolDefinition<
  typeof args
> = {
  name: "tokens-create-application-access-token",
  description: `Create an application access token

Generates an access token that contains permissions scoped to the application owner's Dwolla Client Account.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await tokens_createApplicationAccessToken(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
