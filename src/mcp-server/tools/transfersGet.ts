/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { transfersGet } from "../../funcs/transfersGet.js";
import { GetTransferRequest$zodSchema } from "../../models/gettransferop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetTransferRequest$zodSchema,
};

export const tool$transfersGet: ToolDefinition<typeof args> = {
  name: "transfers-get",
  description: `Retrieve a transfer

Retrieve detailed information for a specific transfer by its unique identifier belonging to an Account or Customer. Returns transfer status, amount, creation date, clearing details, and links to source and destination funding sources for complete transaction tracking. Includes cancellation links when applicable and references to related funding transfers. Essential for monitoring transfer lifecycle and transaction reconciliation.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await transfersGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
