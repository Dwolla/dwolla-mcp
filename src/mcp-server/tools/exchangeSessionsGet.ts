/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { exchangeSessionsGet } from "../../funcs/exchangeSessionsGet.js";
import { RetrieveCustomerExchangeSessionRequest$zodSchema } from "../../models/retrievecustomerexchangesessionop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: RetrieveCustomerExchangeSessionRequest$zodSchema,
};

export const tool$exchangeSessionsGet: ToolDefinition<typeof args> = {
  name: "exchange-sessions-get",
  description: `Retrieve exchange session

Returns details of a previously created exchange session, including URLs and tokens needed to continue the instant account verification flow. Response varies by partner - Visa/MX provide redirect URLs while Plaid provides session tokens for Link initialization.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await exchangeSessionsGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
