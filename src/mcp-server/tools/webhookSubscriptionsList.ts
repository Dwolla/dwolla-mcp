/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { webhookSubscriptionsList } from "../../funcs/webhookSubscriptionsList.js";
import { formatResult, ToolDefinition } from "../tools.js";

export const tool$webhookSubscriptionsList: ToolDefinition = {
  name: "webhook-subscriptions-list",
  description: `List webhook subscriptions

Retrieve all webhook subscriptions that belong to an application including their configuration details and status. Returns subscription details including webhook endpoints, status, creation dates, and links to associated webhooks with total count. Essential for webhook management and monitoring subscription health.`,
  scopes: ["read"],
  annotations: {
    "destructiveHint": false,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": false,
  },
  tool: async (client, ctx) => {
    const [result, apiCall] = await webhookSubscriptionsList(
      client,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
