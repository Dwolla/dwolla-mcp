/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersListAvailableConnections } from "../../funcs/customersListAvailableConnections.js";
import { ListAvailableExchangeConnectionsRequest$zodSchema } from "../../models/listavailableexchangeconnectionsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ListAvailableExchangeConnectionsRequest$zodSchema,
};

export const tool$customersListAvailableConnections: ToolDefinition<
  typeof args
> = {
  name: "customers-list-available-connections",
  description: `List available exchange connections

Returns available exchange connections for a customer's bank accounts authorized through MX Connect. Each connection includes an account name and availableConnectionToken required to create exchanges and funding sources for transfers.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await customersListAvailableConnections(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
