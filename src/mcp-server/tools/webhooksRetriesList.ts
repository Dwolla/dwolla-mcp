/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { webhooksRetriesList } from "../../funcs/webhooksRetriesList.js";
import { ListWebhookRetriesRequest$zodSchema } from "../../models/listwebhookretriesop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ListWebhookRetriesRequest$zodSchema,
};

export const tool$webhooksRetriesList: ToolDefinition<typeof args> = {
  name: "webhooks-retries-list",
  description: `List retries for a webhook

Retrieve all retry attempts for a specific webhook including timestamps and delivery details. Returns a list of retry attempts with unique identifiers, timestamps, and links to the parent webhook with total count. Essential for tracking webhook delivery failures, analyzing retry patterns, and debugging webhook notification issues to ensure reliable event processing.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await webhooksRetriesList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
