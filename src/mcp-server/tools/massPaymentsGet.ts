/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { massPaymentsGet } from "../../funcs/massPaymentsGet.js";
import { GetMassPaymentRequest$zodSchema } from "../../models/getmasspaymentop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetMassPaymentRequest$zodSchema,
};

export const tool$massPaymentsGet: ToolDefinition<typeof args> = {
  name: "mass-payments-get",
  description: `Retrieve a mass payment

Retrieve detailed information for a mass payment by its unique identifier. Returns the current processing status (pending, processing, or complete), creation date, metadata, and links to the source funding source and payment items. Use this endpoint to monitor mass payment processing progress and determine when to check individual item results.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await massPaymentsGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
