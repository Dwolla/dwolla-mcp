/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { labelsReallocationsGet } from "../../funcs/labelsReallocationsGet.js";
import { RetrieveLabelReallocationRequest$zodSchema } from "../../models/retrievelabelreallocationop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: RetrieveLabelReallocationRequest$zodSchema,
};

export const tool$labelsReallocationsGet: ToolDefinition<typeof args> = {
  name: "labels-reallocations-get",
  description: `Retrieve a label reallocation

Retrieve details for a specific label reallocation that transfers funds between Labels. Returns reallocation information including source and destination Labels, amount transferred, status, and creation timestamp. Use this to track and audit fund movements between different Labels.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await labelsReallocationsGet(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
