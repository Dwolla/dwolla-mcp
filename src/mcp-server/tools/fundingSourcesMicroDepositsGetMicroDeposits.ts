/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { fundingSourcesMicroDepositsGetMicroDeposits } from "../../funcs/fundingSourcesMicroDepositsGetMicroDeposits.js";
import { GetMicroDepositsRequest$zodSchema } from "../../models/getmicrodepositsop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetMicroDepositsRequest$zodSchema,
};

export const tool$fundingSourcesMicroDepositsGetMicroDeposits: ToolDefinition<
  typeof args
> = {
  name: "funding-sources-micro-deposits-get-micro-deposits",
  description: `Retrieve micro-deposits details

Returns the status and details of micro-deposits for a funding source to check verification eligibility. Includes deposit status (pending, processed, failed), creation timestamp, and failure details with ACH return codes if deposits failed. Use this endpoint to determine when micro-deposits are ready for verification.`,
  scopes: ["read"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await fundingSourcesMicroDepositsGetMicroDeposits(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
