/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Exchanges, Exchanges$zodSchema } from "./exchanges.js";

export type ListCustomerExchangesRequest = { id: string };

export const ListCustomerExchangesRequest$zodSchema: z.ZodType<
  ListCustomerExchangesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("The ID of the Customer to list exchanges for"),
});

/**
 * Not Found
 */
export type ListCustomerExchangesResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const ListCustomerExchangesResponseBody$zodSchema: z.ZodType<
  ListCustomerExchangesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("Not Found");

export type ListCustomerExchangesResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  Exchanges?: Exchanges | undefined;
  object?: ListCustomerExchangesResponseBody | undefined;
};

export const ListCustomerExchangesResponse$zodSchema: z.ZodType<
  ListCustomerExchangesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Exchanges: Exchanges$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => ListCustomerExchangesResponseBody$zodSchema).optional(),
});
