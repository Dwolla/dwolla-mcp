/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ForbiddenError, ForbiddenError$zodSchema } from "./forbiddenerror.js";
import { NotFoundError, NotFoundError$zodSchema } from "./notfounderror.js";
import {
  WebhookSubscription,
  WebhookSubscription$zodSchema,
} from "./webhooksubscription.js";

export type ListWebhookSubscriptionsSelf = { href?: string | undefined };

export const ListWebhookSubscriptionsSelf$zodSchema: z.ZodType<
  ListWebhookSubscriptionsSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

export type ListWebhookSubscriptionsLinks = {
  self?: ListWebhookSubscriptionsSelf | undefined;
};

export const ListWebhookSubscriptionsLinks$zodSchema: z.ZodType<
  ListWebhookSubscriptionsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => ListWebhookSubscriptionsSelf$zodSchema).optional(),
});

export type ListWebhookSubscriptionsEmbedded = {
  webhookSubscriptions?: Array<WebhookSubscription> | undefined;
};

export const ListWebhookSubscriptionsEmbedded$zodSchema: z.ZodType<
  ListWebhookSubscriptionsEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  webhookSubscriptions: z.array(WebhookSubscription$zodSchema).optional(),
});

/**
 * successful operation
 */
export type ListWebhookSubscriptionsResponseBody = {
  _links?: ListWebhookSubscriptionsLinks | undefined;
  _embedded?: ListWebhookSubscriptionsEmbedded | undefined;
  total?: number | undefined;
};

export const ListWebhookSubscriptionsResponseBody$zodSchema: z.ZodType<
  ListWebhookSubscriptionsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => ListWebhookSubscriptionsEmbedded$zodSchema)
    .optional(),
  _links: z.lazy(() => ListWebhookSubscriptionsLinks$zodSchema).optional(),
  total: z.number().int().optional(),
}).describe("successful operation");

export type ListWebhookSubscriptionsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: ListWebhookSubscriptionsResponseBody | undefined;
  ForbiddenError?: ForbiddenError | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const ListWebhookSubscriptionsResponse$zodSchema: z.ZodType<
  ListWebhookSubscriptionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ForbiddenError: ForbiddenError$zodSchema.optional(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => ListWebhookSubscriptionsResponseBody$zodSchema)
    .optional(),
});
