/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { FundingSource, FundingSource$zodSchema } from "./fundingsource.js";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type FundingSourcesEmbedded = {
  fundingSources?: Array<FundingSource> | undefined;
};

export const FundingSourcesEmbedded$zodSchema: z.ZodType<
  FundingSourcesEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  fundingSources: z.array(FundingSource$zodSchema).optional(),
});

export type FundingSources = {
  _links?: { [k: string]: HalLink } | undefined;
  _embedded?: FundingSourcesEmbedded | undefined;
  total?: number | undefined;
};

export const FundingSources$zodSchema: z.ZodType<
  FundingSources,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => FundingSourcesEmbedded$zodSchema).optional(),
  _links: z.record(HalLink$zodSchema).optional(),
  total: z.number().int().optional(),
});
