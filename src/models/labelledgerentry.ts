/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type LabelLedgerEntryAmount = {
  value?: string | undefined;
  currency?: string | undefined;
};

export const LabelLedgerEntryAmount$zodSchema: z.ZodType<
  LabelLedgerEntryAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string().optional(),
  value: z.string().optional(),
});

export type LabelLedgerEntry = {
  _links?: { [k: string]: HalLink } | undefined;
  id?: string | undefined;
  amount?: LabelLedgerEntryAmount | undefined;
  created?: string | undefined;
};

export const LabelLedgerEntry$zodSchema: z.ZodType<
  LabelLedgerEntry,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.record(HalLink$zodSchema).optional(),
  amount: z.lazy(() => LabelLedgerEntryAmount$zodSchema).optional(),
  created: z.string().datetime({ offset: true }).optional(),
  id: z.string().optional(),
});
