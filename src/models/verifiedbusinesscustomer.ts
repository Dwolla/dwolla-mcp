/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type VerifiedBusinessCustomerAddress = {
  address1?: string | undefined;
  address2?: string | undefined;
  address3?: string | undefined;
  city?: string | undefined;
  postalCode?: string | undefined;
  country?: string | undefined;
  stateProvinceRegion?: string | undefined;
};

export const VerifiedBusinessCustomerAddress$zodSchema: z.ZodType<
  VerifiedBusinessCustomerAddress,
  z.ZodTypeDef,
  unknown
> = z.object({
  address1: z.string().optional(),
  address2: z.string().optional(),
  address3: z.string().optional(),
  city: z.string().optional(),
  country: z.string().optional(),
  postalCode: z.string().optional(),
  stateProvinceRegion: z.string().optional(),
});

export type Controller = {
  firstName?: string | undefined;
  lastName?: string | undefined;
  title?: string | undefined;
  address?: VerifiedBusinessCustomerAddress | undefined;
};

export const Controller$zodSchema: z.ZodType<
  Controller,
  z.ZodTypeDef,
  unknown
> = z.object({
  address: z.lazy(() => VerifiedBusinessCustomerAddress$zodSchema).optional(),
  firstName: z.string().optional(),
  lastName: z.string().optional(),
  title: z.string().optional(),
});

/**
 * Shared models between all Customer types
 */
export type VerifiedBusinessCustomer = {
  _links?: { [k: string]: HalLink } | undefined;
  id?: string | undefined;
  type?: string | undefined;
  status?: string | undefined;
  correlationId?: string | undefined;
  created?: string | undefined;
  address1?: string | undefined;
  address2?: string | undefined;
  city?: string | undefined;
  state?: string | undefined;
  postalCode?: string | undefined;
  phone?: string | undefined;
  website?: string | undefined;
  businessName?: string | undefined;
  doingBusinessAs?: string | undefined;
  businessType?: string | undefined;
  businessClassification?: string | undefined;
  controller?: Controller | undefined;
};

export const VerifiedBusinessCustomer$zodSchema: z.ZodType<
  VerifiedBusinessCustomer,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.record(HalLink$zodSchema).optional(),
  address1: z.string().optional(),
  address2: z.string().optional(),
  businessClassification: z.string().optional(),
  businessName: z.string().optional(),
  businessType: z.string().optional(),
  city: z.string().optional(),
  controller: z.lazy(() => Controller$zodSchema).optional(),
  correlationId: z.string().optional(),
  created: z.string().datetime({ offset: true }).optional(),
  doingBusinessAs: z.string().optional(),
  id: z.string().optional(),
  phone: z.string().optional(),
  postalCode: z.string().optional(),
  state: z.string().optional(),
  status: z.string().optional(),
  type: z.string().optional(),
  website: z.string().optional(),
}).describe("Shared models between all Customer types");
