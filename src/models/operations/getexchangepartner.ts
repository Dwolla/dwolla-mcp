/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ExchangePartner,
  ExchangePartner$zodSchema,
} from "../components/exchangepartner.js";
import {
  NotFoundError,
  NotFoundError$zodSchema,
} from "../components/notfounderror.js";

export type GetExchangePartnerRequest = { id: string };

export const GetExchangePartnerRequest$zodSchema: z.ZodType<
  GetExchangePartnerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Exchange Partner resource unique identifier."),
});

export type GetExchangePartnerResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  ExchangePartner?: ExchangePartner | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const GetExchangePartnerResponse$zodSchema: z.ZodType<
  GetExchangePartnerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ExchangePartner: ExchangePartner$zodSchema.optional(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
