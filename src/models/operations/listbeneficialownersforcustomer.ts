/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BeneficialOwners,
  BeneficialOwners$zodSchema,
} from "../components/beneficialowners.js";

export type ListBeneficialOwnersForCustomerRequest = { id: string };

export const ListBeneficialOwnersForCustomerRequest$zodSchema: z.ZodType<
  ListBeneficialOwnersForCustomerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Customer unique identifier"),
});

/**
 * not found
 */
export type ListBeneficialOwnersForCustomerResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const ListBeneficialOwnersForCustomerResponseBody$zodSchema: z.ZodType<
  ListBeneficialOwnersForCustomerResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("not found");

export type ListBeneficialOwnersForCustomerResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  BeneficialOwners?: BeneficialOwners | undefined;
  object?: ListBeneficialOwnersForCustomerResponseBody | undefined;
};

export const ListBeneficialOwnersForCustomerResponse$zodSchema: z.ZodType<
  ListBeneficialOwnersForCustomerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  BeneficialOwners: BeneficialOwners$zodSchema.optional(),
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => ListBeneficialOwnersForCustomerResponseBody$zodSchema)
    .optional(),
});
