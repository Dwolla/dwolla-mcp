/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  FundingSource,
  FundingSource$zodSchema,
} from "../components/fundingsource.js";

export type GetFundingSourceRequest = { id: string };

export const GetFundingSourceRequest$zodSchema: z.ZodType<
  GetFundingSourceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Funding source unique identifier"),
});

/**
 * not found
 */
export type GetFundingSourceResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const GetFundingSourceResponseBody$zodSchema: z.ZodType<
  GetFundingSourceResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("not found");

export type GetFundingSourceResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  FundingSource?: FundingSource | undefined;
  object?: GetFundingSourceResponseBody | undefined;
};

export const GetFundingSourceResponse$zodSchema: z.ZodType<
  GetFundingSourceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  FundingSource: FundingSource$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => GetFundingSourceResponseBody$zodSchema).optional(),
});
