/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BadRequestError,
  BadRequestError$zodSchema,
} from "../components/badrequesterror.js";
import {
  NotFoundError,
  NotFoundError$zodSchema,
} from "../components/notfounderror.js";
import {
  WebhookSubscription,
  WebhookSubscription$zodSchema,
} from "../components/webhooksubscription.js";

/**
 * Parameters to update a webhook subscription
 */
export type UpdateWebhookSubscriptionRequestBody = { paused: boolean };

export const UpdateWebhookSubscriptionRequestBody$zodSchema: z.ZodType<
  UpdateWebhookSubscriptionRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  paused: z.boolean(),
}).describe("Parameters to update a webhook subscription");

export type UpdateWebhookSubscriptionRequest = {
  id: string;
  RequestBody: UpdateWebhookSubscriptionRequestBody;
};

export const UpdateWebhookSubscriptionRequest$zodSchema: z.ZodType<
  UpdateWebhookSubscriptionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => UpdateWebhookSubscriptionRequestBody$zodSchema),
  id: z.string().describe("Webhook unique identifier"),
});

export type UpdateWebhookSubscriptionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  WebhookSubscription?: WebhookSubscription | undefined;
  BadRequestError?: BadRequestError | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const UpdateWebhookSubscriptionResponse$zodSchema: z.ZodType<
  UpdateWebhookSubscriptionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  BadRequestError: BadRequestError$zodSchema.optional(),
  ContentType: z.string(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  WebhookSubscription: WebhookSubscription$zodSchema.optional(),
});
