/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AvailableExchangeConnections,
  AvailableExchangeConnections$zodSchema,
} from "../components/availableexchangeconnections.js";

export type ListAvailableExchangeConnectionsRequest = { id: string };

export const ListAvailableExchangeConnectionsRequest$zodSchema: z.ZodType<
  ListAvailableExchangeConnectionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Customer's unique identifier"),
});

/**
 * not found
 */
export type ListAvailableExchangeConnectionsResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const ListAvailableExchangeConnectionsResponseBody$zodSchema: z.ZodType<
  ListAvailableExchangeConnectionsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("not found");

export type ListAvailableExchangeConnectionsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  AvailableExchangeConnections?: AvailableExchangeConnections | undefined;
  object?: ListAvailableExchangeConnectionsResponseBody | undefined;
};

export const ListAvailableExchangeConnectionsResponse$zodSchema: z.ZodType<
  ListAvailableExchangeConnectionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  AvailableExchangeConnections: AvailableExchangeConnections$zodSchema
    .optional(),
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => ListAvailableExchangeConnectionsResponseBody$zodSchema)
    .optional(),
});
