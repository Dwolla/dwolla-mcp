/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  VerifyMicroDeposits,
  VerifyMicroDeposits$zodSchema,
} from "../components/verifymicrodeposits.js";

/**
 * No request body is required for initiating micro-deposits.
 */
export type InitiateMicroDeposits = {};

export const InitiateMicroDeposits$zodSchema: z.ZodType<
  InitiateMicroDeposits,
  z.ZodTypeDef,
  unknown
> = z.object({}).describe(
  "No request body is required for initiating micro-deposits.",
);

/**
 * Optional request body for verifying micro-deposits.
 *
 * @remarks
 * - If omitted: Endpoint will initiate micro-deposits
 * - If provided: Must contain micro-deposit amounts for verification
 */
export type InitiateOrVerifyMicroDepositsRequestBody =
  | InitiateMicroDeposits
  | VerifyMicroDeposits;

export const InitiateOrVerifyMicroDepositsRequestBody$zodSchema: z.ZodType<
  InitiateOrVerifyMicroDepositsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => InitiateMicroDeposits$zodSchema),
  VerifyMicroDeposits$zodSchema,
]).describe(
  "Optional request body for verifying micro-deposits.\n"
    + "- If omitted: Endpoint will initiate micro-deposits\n"
    + "- If provided: Must contain micro-deposit amounts for verification\n"
    + "",
);

export type InitiateOrVerifyMicroDepositsRequest = {
  id: string;
  RequestBody?: InitiateMicroDeposits | VerifyMicroDeposits | null | undefined;
};

export const InitiateOrVerifyMicroDepositsRequest$zodSchema: z.ZodType<
  InitiateOrVerifyMicroDepositsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.union([
    z.lazy(() => InitiateMicroDeposits$zodSchema),
    VerifyMicroDeposits$zodSchema,
  ]).nullable().optional(),
  id: z.string().describe(
    "The ID of the FS to initiate or verify micro-deposit",
  ),
});

/**
 * not found
 */
export type InitiateOrVerifyMicroDepositsResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const InitiateOrVerifyMicroDepositsResponseBody$zodSchema: z.ZodType<
  InitiateOrVerifyMicroDepositsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("not found");

export type InitiateOrVerifyMicroDepositsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: InitiateOrVerifyMicroDepositsResponseBody | undefined;
  Headers: { [k: string]: Array<string> };
};

export const InitiateOrVerifyMicroDepositsResponse$zodSchema: z.ZodType<
  InitiateOrVerifyMicroDepositsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Headers: z.record(z.array(z.string())),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => InitiateOrVerifyMicroDepositsResponseBody$zodSchema)
    .optional(),
});
