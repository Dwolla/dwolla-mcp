/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BeneficialOwner,
  BeneficialOwner$zodSchema,
} from "../components/beneficialowner.js";
import {
  BeneficialOwnerWithPassport,
  BeneficialOwnerWithPassport$zodSchema,
} from "../components/beneficialownerwithpassport.js";
import {
  BeneficialOwnerWithSsn,
  BeneficialOwnerWithSsn$zodSchema,
} from "../components/beneficialownerwithssn.js";
import {
  ValidationErrorSchema,
  ValidationErrorSchema$zodSchema,
} from "../components/validationerrorschema.js";

/**
 * Parameters for updating a beneficial owner
 */
export type UpdateBeneficialOwnerRequestBody =
  | BeneficialOwnerWithSsn
  | BeneficialOwnerWithPassport;

export const UpdateBeneficialOwnerRequestBody$zodSchema: z.ZodType<
  UpdateBeneficialOwnerRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  BeneficialOwnerWithSsn$zodSchema,
  BeneficialOwnerWithPassport$zodSchema,
]).describe("Parameters for updating a beneficial owner");

export type UpdateBeneficialOwnerRequest = {
  id: string;
  RequestBody: BeneficialOwnerWithSsn | BeneficialOwnerWithPassport;
};

export const UpdateBeneficialOwnerRequest$zodSchema: z.ZodType<
  UpdateBeneficialOwnerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.union([
    BeneficialOwnerWithSsn$zodSchema,
    BeneficialOwnerWithPassport$zodSchema,
  ]),
  id: z.string().describe("Beneficial owner unique identifier"),
});

/**
 * not found
 */
export type UpdateBeneficialOwnerNotFoundResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const UpdateBeneficialOwnerNotFoundResponseBody$zodSchema: z.ZodType<
  UpdateBeneficialOwnerNotFoundResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("not found");

/**
 * forbidden
 */
export type UpdateBeneficialOwnerForbiddenResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const UpdateBeneficialOwnerForbiddenResponseBody$zodSchema: z.ZodType<
  UpdateBeneficialOwnerForbiddenResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("forbidden");

export type UpdateBeneficialOwnerResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  BeneficialOwner?: BeneficialOwner | undefined;
  ValidationErrorSchema?: ValidationErrorSchema | undefined;
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject?:
    | UpdateBeneficialOwnerForbiddenResponseBody
    | undefined;
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject?:
    | UpdateBeneficialOwnerNotFoundResponseBody
    | undefined;
};

export const UpdateBeneficialOwnerResponse$zodSchema: z.ZodType<
  UpdateBeneficialOwnerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  BeneficialOwner: BeneficialOwner$zodSchema.optional(),
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  ValidationErrorSchema: ValidationErrorSchema$zodSchema.optional(),
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    UpdateBeneficialOwnerNotFoundResponseBody$zodSchema
  ).optional(),
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    UpdateBeneficialOwnerForbiddenResponseBody$zodSchema
  ).optional(),
});
