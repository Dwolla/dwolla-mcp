/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ForbiddenError,
  ForbiddenError$zodSchema,
} from "../components/forbiddenerror.js";
import {
  OnDemandAuthorization,
  OnDemandAuthorization$zodSchema,
} from "../components/ondemandauthorization.js";

export type CreateOnDemandTransferAuthorizationResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  OnDemandAuthorization?: OnDemandAuthorization | undefined;
  ForbiddenError?: ForbiddenError | undefined;
};

export const CreateOnDemandTransferAuthorizationResponse$zodSchema: z.ZodType<
  CreateOnDemandTransferAuthorizationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ForbiddenError: ForbiddenError$zodSchema.optional(),
  OnDemandAuthorization: OnDemandAuthorization$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
