/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  NotFoundError,
  NotFoundError$zodSchema,
} from "../components/notfounderror.js";
import {
  WebhookSubscription,
  WebhookSubscription$zodSchema,
} from "../components/webhooksubscription.js";

export type DeleteRequest = { id: string };

export const DeleteRequest$zodSchema: z.ZodType<
  DeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Webhook unique identifier"),
});

export type DeleteResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  WebhookSubscription?: WebhookSubscription | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const DeleteResponse$zodSchema: z.ZodType<
  DeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  WebhookSubscription: WebhookSubscription$zodSchema.optional(),
});
