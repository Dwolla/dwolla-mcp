/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ExchangeSession,
  ExchangeSession$zodSchema,
} from "../components/exchangesession.js";

export type RetrieveCustomerExchangeSessionRequest = { id: string };

export const RetrieveCustomerExchangeSessionRequest$zodSchema: z.ZodType<
  RetrieveCustomerExchangeSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Exchange session's unique identifier"),
});

/**
 * not found
 */
export type RetrieveCustomerExchangeSessionNotFoundResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const RetrieveCustomerExchangeSessionNotFoundResponseBody$zodSchema:
  z.ZodType<
    RetrieveCustomerExchangeSessionNotFoundResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("not found");

/**
 * forbidden
 */
export type RetrieveCustomerExchangeSessionForbiddenResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const RetrieveCustomerExchangeSessionForbiddenResponseBody$zodSchema:
  z.ZodType<
    RetrieveCustomerExchangeSessionForbiddenResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("forbidden");

export type RetrieveCustomerExchangeSessionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  ExchangeSession?: ExchangeSession | undefined;
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject?:
    | RetrieveCustomerExchangeSessionForbiddenResponseBody
    | undefined;
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject?:
    | RetrieveCustomerExchangeSessionNotFoundResponseBody
    | undefined;
};

export const RetrieveCustomerExchangeSessionResponse$zodSchema: z.ZodType<
  RetrieveCustomerExchangeSessionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ExchangeSession: ExchangeSession$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    RetrieveCustomerExchangeSessionNotFoundResponseBody$zodSchema
  ).optional(),
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    RetrieveCustomerExchangeSessionForbiddenResponseBody$zodSchema
  ).optional(),
});
