/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BadRequestError,
  BadRequestError$zodSchema,
} from "../components/badrequesterror.js";

export type CreateCustomerLabelAmount = {
  currency?: string | undefined;
  value?: string | undefined;
};

export const CreateCustomerLabelAmount$zodSchema: z.ZodType<
  CreateCustomerLabelAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string().optional(),
  value: z.string().optional(),
});

/**
 * Parameters to create a customer label
 */
export type CreateCustomerLabelRequestBody = {
  amount: CreateCustomerLabelAmount;
};

export const CreateCustomerLabelRequestBody$zodSchema: z.ZodType<
  CreateCustomerLabelRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.lazy(() => CreateCustomerLabelAmount$zodSchema),
}).describe("Parameters to create a customer label");

export type CreateCustomerLabelRequest = {
  id: string;
  RequestBody: CreateCustomerLabelRequestBody;
};

export const CreateCustomerLabelRequest$zodSchema: z.ZodType<
  CreateCustomerLabelRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => CreateCustomerLabelRequestBody$zodSchema),
  id: z.string().describe("ID of customer to create a label for"),
});

/**
 * Not Found
 */
export type CreateCustomerLabelNotFoundResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const CreateCustomerLabelNotFoundResponseBody$zodSchema: z.ZodType<
  CreateCustomerLabelNotFoundResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("Not Found");

/**
 * Forbidden
 */
export type CreateCustomerLabelForbiddenResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const CreateCustomerLabelForbiddenResponseBody$zodSchema: z.ZodType<
  CreateCustomerLabelForbiddenResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("Forbidden");

export type CreateCustomerLabelResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  BadRequestError?: BadRequestError | undefined;
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject?:
    | CreateCustomerLabelForbiddenResponseBody
    | undefined;
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject?:
    | CreateCustomerLabelNotFoundResponseBody
    | undefined;
  Headers: { [k: string]: Array<string> };
};

export const CreateCustomerLabelResponse$zodSchema: z.ZodType<
  CreateCustomerLabelResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  BadRequestError: BadRequestError$zodSchema.optional(),
  ContentType: z.string(),
  Headers: z.record(z.array(z.string())),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    CreateCustomerLabelNotFoundResponseBody$zodSchema
  ).optional(),
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    CreateCustomerLabelForbiddenResponseBody$zodSchema
  ).optional(),
});
