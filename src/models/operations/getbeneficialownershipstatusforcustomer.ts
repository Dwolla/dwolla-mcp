/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BeneficialOwnership,
  BeneficialOwnership$zodSchema,
} from "../components/beneficialownership.js";

export type GetBeneficialOwnershipStatusForCustomerRequest = { id: string };

export const GetBeneficialOwnershipStatusForCustomerRequest$zodSchema:
  z.ZodType<
    GetBeneficialOwnershipStatusForCustomerRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().describe("Customer unique identifier"),
  });

/**
 * not found
 */
export type GetBeneficialOwnershipStatusForCustomerNotFoundResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const GetBeneficialOwnershipStatusForCustomerNotFoundResponseBody$zodSchema:
  z.ZodType<
    GetBeneficialOwnershipStatusForCustomerNotFoundResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("not found");

/**
 * forbidden
 */
export type GetBeneficialOwnershipStatusForCustomerForbiddenResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const GetBeneficialOwnershipStatusForCustomerForbiddenResponseBody$zodSchema:
  z.ZodType<
    GetBeneficialOwnershipStatusForCustomerForbiddenResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("forbidden");

export type GetBeneficialOwnershipStatusForCustomerResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  BeneficialOwnership?: BeneficialOwnership | undefined;
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject?:
    | GetBeneficialOwnershipStatusForCustomerForbiddenResponseBody
    | undefined;
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject?:
    | GetBeneficialOwnershipStatusForCustomerNotFoundResponseBody
    | undefined;
};

export const GetBeneficialOwnershipStatusForCustomerResponse$zodSchema:
  z.ZodType<
    GetBeneficialOwnershipStatusForCustomerResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    BeneficialOwnership: BeneficialOwnership$zodSchema.optional(),
    ContentType: z.string(),
    RawResponse: z.instanceof(Response),
    StatusCode: z.number().int(),
    fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
      GetBeneficialOwnershipStatusForCustomerNotFoundResponseBody$zodSchema
    ).optional(),
    fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
      GetBeneficialOwnershipStatusForCustomerForbiddenResponseBody$zodSchema
    ).optional(),
  });
