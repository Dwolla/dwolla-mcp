/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CreateReAuthExchangeSessionUnion,
  CreateReAuthExchangeSessionUnion$zodSchema,
} from "../components/createreauthexchangesessionunion.js";

export type CreateReAuthExchangeSessionRequest = {
  id: string;
  CreateReAuthExchangeSession?: CreateReAuthExchangeSessionUnion | undefined;
};

export const CreateReAuthExchangeSessionRequest$zodSchema: z.ZodType<
  CreateReAuthExchangeSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  CreateReAuthExchangeSession: CreateReAuthExchangeSessionUnion$zodSchema
    .optional(),
  id: z.string().describe("Exchange's unique identifier"),
});

/**
 * forbidden
 */
export type CreateReAuthExchangeSessionForbiddenResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const CreateReAuthExchangeSessionForbiddenResponseBody$zodSchema:
  z.ZodType<
    CreateReAuthExchangeSessionForbiddenResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("forbidden");

/**
 * validation error
 */
export type CreateReAuthExchangeSessionBadRequestResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const CreateReAuthExchangeSessionBadRequestResponseBody$zodSchema:
  z.ZodType<
    CreateReAuthExchangeSessionBadRequestResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("validation error");

export type CreateReAuthExchangeSessionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  fourHundredApplicationVndDwollaV1HalPlusJsonObject?:
    | CreateReAuthExchangeSessionBadRequestResponseBody
    | undefined;
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject?:
    | CreateReAuthExchangeSessionForbiddenResponseBody
    | undefined;
  Headers: { [k: string]: Array<string> };
};

export const CreateReAuthExchangeSessionResponse$zodSchema: z.ZodType<
  CreateReAuthExchangeSessionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Headers: z.record(z.array(z.string())),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    CreateReAuthExchangeSessionForbiddenResponseBody$zodSchema
  ).optional(),
  fourHundredApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    CreateReAuthExchangeSessionBadRequestResponseBody$zodSchema
  ).optional(),
});
