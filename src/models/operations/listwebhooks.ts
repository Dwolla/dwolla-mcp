/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ForbiddenError,
  ForbiddenError$zodSchema,
} from "../components/forbiddenerror.js";
import {
  NotFoundError,
  NotFoundError$zodSchema,
} from "../components/notfounderror.js";
import { Webhook, Webhook$zodSchema } from "../components/webhook.js";

export type ListWebhooksRequest = {
  id: string;
  limit?: string | undefined;
  offset?: string | undefined;
  startDate?: string | undefined;
  endDate?: string | undefined;
};

export const ListWebhooksRequest$zodSchema: z.ZodType<
  ListWebhooksRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  endDate: z.string().describe(
    "Only include webhooks created before this date. ISO-8601 format `YYYY-MM-DD`",
  ).optional(),
  id: z.string().describe("Webhook subscription unique identifier"),
  limit: z.string().describe("How many results to return").optional(),
  offset: z.string().describe("How many results to skip").optional(),
  startDate: z.string().describe(
    "Only include webhooks created after this date. ISO-8601 format `YYYY-MM-DD`",
  ).optional(),
});

export type ListWebhooksSelf = { href?: string | undefined };

export const ListWebhooksSelf$zodSchema: z.ZodType<
  ListWebhooksSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

export type ListWebhooksFirst = { href?: string | undefined };

export const ListWebhooksFirst$zodSchema: z.ZodType<
  ListWebhooksFirst,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

export type ListWebhooksLast = { href?: string | undefined };

export const ListWebhooksLast$zodSchema: z.ZodType<
  ListWebhooksLast,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

export type Next = { href?: string | undefined };

export const Next$zodSchema: z.ZodType<Next, z.ZodTypeDef, unknown> = z.object({
  href: z.string().optional(),
});

export type ListWebhooksLinks = {
  self?: ListWebhooksSelf | undefined;
  first?: ListWebhooksFirst | undefined;
  last?: ListWebhooksLast | undefined;
  next?: Next | undefined;
};

export const ListWebhooksLinks$zodSchema: z.ZodType<
  ListWebhooksLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  first: z.lazy(() => ListWebhooksFirst$zodSchema).optional(),
  last: z.lazy(() => ListWebhooksLast$zodSchema).optional(),
  next: z.lazy(() => Next$zodSchema).optional(),
  self: z.lazy(() => ListWebhooksSelf$zodSchema).optional(),
});

export type ListWebhooksEmbedded = { webhooks?: Array<Webhook> | undefined };

export const ListWebhooksEmbedded$zodSchema: z.ZodType<
  ListWebhooksEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  webhooks: z.array(Webhook$zodSchema).optional(),
});

/**
 * successful operation
 */
export type ListWebhooksResponseBody = {
  _links?: ListWebhooksLinks | undefined;
  _embedded?: ListWebhooksEmbedded | undefined;
  total?: number | undefined;
};

export const ListWebhooksResponseBody$zodSchema: z.ZodType<
  ListWebhooksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => ListWebhooksEmbedded$zodSchema).optional(),
  _links: z.lazy(() => ListWebhooksLinks$zodSchema).optional(),
  total: z.number().int().optional(),
}).describe("successful operation");

export type ListWebhooksResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: ListWebhooksResponseBody | undefined;
  ForbiddenError?: ForbiddenError | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const ListWebhooksResponse$zodSchema: z.ZodType<
  ListWebhooksResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ForbiddenError: ForbiddenError$zodSchema.optional(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => ListWebhooksResponseBody$zodSchema).optional(),
});
