/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  NotFoundError,
  NotFoundError$zodSchema,
} from "../components/notfounderror.js";

export type RetryWebhookRequest = { id: string };

export const RetryWebhookRequest$zodSchema: z.ZodType<
  RetryWebhookRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Webhook unique identifier"),
});

export type RetryWebhookResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  NotFoundError?: NotFoundError | undefined;
  Headers: { [k: string]: Array<string> };
};

export const RetryWebhookResponse$zodSchema: z.ZodType<
  RetryWebhookResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Headers: z.record(z.array(z.string())),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
