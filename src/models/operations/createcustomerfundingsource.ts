/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CreateCustomerFundingSourceUnion,
  CreateCustomerFundingSourceUnion$zodSchema,
} from "../components/createcustomerfundingsourceunion.js";

export type CreateCustomerFundingSourceRequest = {
  id: string;
  CreateCustomerFundingSource: CreateCustomerFundingSourceUnion;
};

export const CreateCustomerFundingSourceRequest$zodSchema: z.ZodType<
  CreateCustomerFundingSourceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  CreateCustomerFundingSource: CreateCustomerFundingSourceUnion$zodSchema,
  id: z.string().describe("Customer's unique identifier"),
});

/**
 * not found
 */
export type CreateCustomerFundingSourceNotFoundResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const CreateCustomerFundingSourceNotFoundResponseBody$zodSchema:
  z.ZodType<
    CreateCustomerFundingSourceNotFoundResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("not found");

/**
 * forbidden
 */
export type CreateCustomerFundingSourceForbiddenResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const CreateCustomerFundingSourceForbiddenResponseBody$zodSchema:
  z.ZodType<
    CreateCustomerFundingSourceForbiddenResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  }).describe("forbidden");

export type CreateCustomerFundingSourceResponseBody3 = {
  code: string;
  message: string;
};

export const CreateCustomerFundingSourceResponseBody3$zodSchema: z.ZodType<
  CreateCustomerFundingSourceResponseBody3,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  message: z.string(),
});

export type CreateCustomerFundingSourceResponseBody2 = {
  code: string;
  message: string;
};

export const CreateCustomerFundingSourceResponseBody2$zodSchema: z.ZodType<
  CreateCustomerFundingSourceResponseBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  message: z.string(),
});

export type CreateCustomerFundingSourceResponseBody1 = {
  code: string;
  message: string;
};

export const CreateCustomerFundingSourceResponseBody1$zodSchema: z.ZodType<
  CreateCustomerFundingSourceResponseBody1,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  message: z.string(),
});

/**
 * validation error
 */
export type CreateCustomerFundingSourceResponseBody =
  | CreateCustomerFundingSourceResponseBody1
  | CreateCustomerFundingSourceResponseBody2
  | CreateCustomerFundingSourceResponseBody3;

export const CreateCustomerFundingSourceResponseBody$zodSchema: z.ZodType<
  CreateCustomerFundingSourceResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateCustomerFundingSourceResponseBody1$zodSchema),
  z.lazy(() => CreateCustomerFundingSourceResponseBody2$zodSchema),
  z.lazy(() => CreateCustomerFundingSourceResponseBody3$zodSchema),
]).describe("validation error");

export type CreateCustomerFundingSourceResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  fourHundredApplicationVndDwollaV1HalPlusJsonOneOf?:
    | CreateCustomerFundingSourceResponseBody1
    | CreateCustomerFundingSourceResponseBody2
    | CreateCustomerFundingSourceResponseBody3
    | undefined;
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject?:
    | CreateCustomerFundingSourceForbiddenResponseBody
    | undefined;
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject?:
    | CreateCustomerFundingSourceNotFoundResponseBody
    | undefined;
  Headers: { [k: string]: Array<string> };
};

export const CreateCustomerFundingSourceResponse$zodSchema: z.ZodType<
  CreateCustomerFundingSourceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Headers: z.record(z.array(z.string())),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    CreateCustomerFundingSourceNotFoundResponseBody$zodSchema
  ).optional(),
  fourHundredAndThreeApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    CreateCustomerFundingSourceForbiddenResponseBody$zodSchema
  ).optional(),
  fourHundredApplicationVndDwollaV1HalPlusJsonOneOf: z.union([
    z.lazy(() => CreateCustomerFundingSourceResponseBody1$zodSchema),
    z.lazy(() => CreateCustomerFundingSourceResponseBody2$zodSchema),
    z.lazy(() => CreateCustomerFundingSourceResponseBody3$zodSchema),
  ]).optional(),
});
