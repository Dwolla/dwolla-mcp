/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";
import { Label, Label$zodSchema } from "./label.js";

export type LabelsEmbedded = { labels?: Array<Label> | undefined };

export const LabelsEmbedded$zodSchema: z.ZodType<
  LabelsEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  labels: z.array(Label$zodSchema).optional(),
});

export type Labels = {
  _links?: { [k: string]: HalLink } | undefined;
  _embedded?: LabelsEmbedded | undefined;
  total?: number | undefined;
};

export const Labels$zodSchema: z.ZodType<Labels, z.ZodTypeDef, unknown> = z
  .object({
    _embedded: z.lazy(() => LabelsEmbedded$zodSchema).optional(),
    _links: z.record(HalLink$zodSchema).optional(),
    total: z.number().int().optional(),
  });
