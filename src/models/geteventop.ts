/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Event, Event$zodSchema } from "./event.js";
import { NotFoundError, NotFoundError$zodSchema } from "./notfounderror.js";

export type GetEventRequest = { id: string };

export const GetEventRequest$zodSchema: z.ZodType<
  GetEventRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("ID of application event to get"),
});

export type GetEventResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  Event?: Event | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const GetEventResponse$zodSchema: z.ZodType<
  GetEventResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Event: Event$zodSchema.optional(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
