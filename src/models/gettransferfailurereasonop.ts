/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ForbiddenError, ForbiddenError$zodSchema } from "./forbiddenerror.js";
import { HalLink, HalLink$zodSchema } from "./hallink.js";
import { NotFoundError, NotFoundError$zodSchema } from "./notfounderror.js";

export type GetTransferFailureReasonRequest = { id: string };

export const GetTransferFailureReasonRequest$zodSchema: z.ZodType<
  GetTransferFailureReasonRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Transfer unique identifier"),
});

/**
 * successful operation
 */
export type GetTransferFailureReasonResponseBody = {
  _links?: { [k: string]: HalLink } | undefined;
  code?: string | undefined;
  description?: string | undefined;
  explanation?: string | undefined;
};

export const GetTransferFailureReasonResponseBody$zodSchema: z.ZodType<
  GetTransferFailureReasonResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.record(HalLink$zodSchema).optional(),
  code: z.string().optional(),
  description: z.string().optional(),
  explanation: z.string().optional(),
}).describe("successful operation");

export type GetTransferFailureReasonResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: GetTransferFailureReasonResponseBody | undefined;
  ForbiddenError?: ForbiddenError | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const GetTransferFailureReasonResponse$zodSchema: z.ZodType<
  GetTransferFailureReasonResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  ForbiddenError: ForbiddenError$zodSchema.optional(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => GetTransferFailureReasonResponseBody$zodSchema)
    .optional(),
});
