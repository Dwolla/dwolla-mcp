/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type AvailableExchangeConnectionsSelf = {
  href: string;
  type: string;
  resourceType: string;
};

export const AvailableExchangeConnectionsSelf$zodSchema: z.ZodType<
  AvailableExchangeConnectionsSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  resourceType: z.string(),
  type: z.string(),
});

export type AvailableExchangeConnectionsCustomers = {
  href: string;
  type: string;
  resourceType: string;
};

export const AvailableExchangeConnectionsCustomers$zodSchema: z.ZodType<
  AvailableExchangeConnectionsCustomers,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  resourceType: z.string(),
  type: z.string(),
});

export type AvailableExchangeConnectionsLinks = {
  self: AvailableExchangeConnectionsSelf;
  customers: AvailableExchangeConnectionsCustomers;
};

export const AvailableExchangeConnectionsLinks$zodSchema: z.ZodType<
  AvailableExchangeConnectionsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  customers: z.lazy(() => AvailableExchangeConnectionsCustomers$zodSchema),
  self: z.lazy(() => AvailableExchangeConnectionsSelf$zodSchema),
});

export type AvailableExchangeConnection = {
  availableConnectionToken: string;
  name: string;
};

export const AvailableExchangeConnection$zodSchema: z.ZodType<
  AvailableExchangeConnection,
  z.ZodTypeDef,
  unknown
> = z.object({
  availableConnectionToken: z.string(),
  name: z.string(),
});

export type AvailableExchangeConnectionsEmbedded = {
  availableExchangeConnections: Array<AvailableExchangeConnection>;
};

export const AvailableExchangeConnectionsEmbedded$zodSchema: z.ZodType<
  AvailableExchangeConnectionsEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  availableExchangeConnections: z.array(
    z.lazy(() => AvailableExchangeConnection$zodSchema),
  ),
});

export type AvailableExchangeConnections = {
  _links: AvailableExchangeConnectionsLinks;
  _embedded: AvailableExchangeConnectionsEmbedded;
};

export const AvailableExchangeConnections$zodSchema: z.ZodType<
  AvailableExchangeConnections,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => AvailableExchangeConnectionsEmbedded$zodSchema),
  _links: z.lazy(() => AvailableExchangeConnectionsLinks$zodSchema),
});
