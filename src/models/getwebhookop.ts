/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { NotFoundError, NotFoundError$zodSchema } from "./notfounderror.js";
import { Webhook, Webhook$zodSchema } from "./webhook.js";

export type GetWebhookRequest = { id: string };

export const GetWebhookRequest$zodSchema: z.ZodType<
  GetWebhookRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Webhook unique identifier"),
});

export type GetWebhookResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  Webhook?: Webhook | undefined;
  NotFoundError?: NotFoundError | undefined;
};

export const GetWebhookResponse$zodSchema: z.ZodType<
  GetWebhookResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  NotFoundError: NotFoundError$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  Webhook: Webhook$zodSchema.optional(),
});
