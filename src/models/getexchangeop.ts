/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Exchange, Exchange$zodSchema } from "./exchange.js";

export type GetExchangeRequest = { id: string };

export const GetExchangeRequest$zodSchema: z.ZodType<
  GetExchangeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().describe("Exchange resource unique identifier."),
});

/**
 * Not Found
 */
export type GetExchangeNotFoundResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const GetExchangeNotFoundResponseBody$zodSchema: z.ZodType<
  GetExchangeNotFoundResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("Not Found");

/**
 * Invalid Scope
 */
export type GetExchangeUnauthorizedResponseBody = {
  code?: string | undefined;
  message?: string | undefined;
};

export const GetExchangeUnauthorizedResponseBody$zodSchema: z.ZodType<
  GetExchangeUnauthorizedResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
}).describe("Invalid Scope");

export type GetExchangeResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  Exchange?: Exchange | undefined;
  fourHundredAndOneApplicationVndDwollaV1HalPlusJsonObject?:
    | GetExchangeUnauthorizedResponseBody
    | undefined;
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject?:
    | GetExchangeNotFoundResponseBody
    | undefined;
};

export const GetExchangeResponse$zodSchema: z.ZodType<
  GetExchangeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Exchange: Exchange$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  fourHundredAndFourApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    GetExchangeNotFoundResponseBody$zodSchema
  ).optional(),
  fourHundredAndOneApplicationVndDwollaV1HalPlusJsonObject: z.lazy(() =>
    GetExchangeUnauthorizedResponseBody$zodSchema
  ).optional(),
});
