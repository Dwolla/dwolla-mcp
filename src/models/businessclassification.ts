/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type BusinessClassificationLinks = { self?: HalLink | undefined };

export const BusinessClassificationLinks$zodSchema: z.ZodType<
  BusinessClassificationLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: HalLink$zodSchema.optional(),
});

export type IndustryClassification = {
  id?: string | undefined;
  name?: string | undefined;
};

export const IndustryClassification$zodSchema: z.ZodType<
  IndustryClassification,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

export type BusinessClassificationEmbedded = {
  industryClassifications?: Array<IndustryClassification> | undefined;
};

export const BusinessClassificationEmbedded$zodSchema: z.ZodType<
  BusinessClassificationEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  industryClassifications: z.array(
    z.lazy(() => IndustryClassification$zodSchema),
  ).optional(),
});

export type BusinessClassification = {
  _links?: BusinessClassificationLinks | undefined;
  _embedded?: BusinessClassificationEmbedded | undefined;
  id?: string | undefined;
  name?: string | undefined;
};

export const BusinessClassification$zodSchema: z.ZodType<
  BusinessClassification,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => BusinessClassificationEmbedded$zodSchema).optional(),
  _links: z.lazy(() => BusinessClassificationLinks$zodSchema).optional(),
  id: z.string().optional(),
  name: z.string().optional(),
});
