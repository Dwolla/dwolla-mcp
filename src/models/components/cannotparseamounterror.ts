/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CannotParseAmountErrorLinks = {};

export const CannotParseAmountErrorLinks$zodSchema: z.ZodType<
  CannotParseAmountErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type CannotParseAmountErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: CannotParseAmountErrorLinks | undefined;
};

export const CannotParseAmountErrorError$zodSchema: z.ZodType<
  CannotParseAmountErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => CannotParseAmountErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type CannotParseAmountErrorEmbedded = {
  errors?: Array<CannotParseAmountErrorError> | undefined;
};

export const CannotParseAmountErrorEmbedded$zodSchema: z.ZodType<
  CannotParseAmountErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => CannotParseAmountErrorError$zodSchema))
    .optional(),
});

export type CannotParseAmountError = {
  code: string;
  message: string;
  _embedded?: CannotParseAmountErrorEmbedded | undefined;
};

export const CannotParseAmountError$zodSchema: z.ZodType<
  CannotParseAmountError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => CannotParseAmountErrorEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
