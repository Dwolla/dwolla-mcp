/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  UnverifiedBusinessCustomer,
  UnverifiedBusinessCustomer$zodSchema,
} from "./unverifiedbusinesscustomer.js";
import {
  UnverifiedCustomer,
  UnverifiedCustomer$zodSchema,
} from "./unverifiedcustomer.js";
import {
  VerifiedBusinessCustomer,
  VerifiedBusinessCustomer$zodSchema,
} from "./verifiedbusinesscustomer.js";
import {
  VerifiedPersonalCustomer,
  VerifiedPersonalCustomer$zodSchema,
} from "./verifiedpersonalcustomer.js";
import {
  VerifiedSolePropCustomer,
  VerifiedSolePropCustomer$zodSchema,
} from "./verifiedsolepropcustomer.js";

export type Customer =
  | UnverifiedCustomer
  | UnverifiedBusinessCustomer
  | VerifiedPersonalCustomer
  | VerifiedSolePropCustomer
  | VerifiedBusinessCustomer;

export const Customer$zodSchema: z.ZodType<Customer, z.ZodTypeDef, unknown> = z
  .union([
    UnverifiedCustomer$zodSchema,
    UnverifiedBusinessCustomer$zodSchema,
    VerifiedPersonalCustomer$zodSchema,
    VerifiedSolePropCustomer$zodSchema,
    VerifiedBusinessCustomer$zodSchema,
  ]);
