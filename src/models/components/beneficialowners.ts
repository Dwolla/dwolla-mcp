/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  BeneficialOwner,
  BeneficialOwner$zodSchema,
} from "./beneficialowner.js";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type BeneficialOwnersEmbedded = {
  beneficialOwners?: Array<BeneficialOwner> | undefined;
};

export const BeneficialOwnersEmbedded$zodSchema: z.ZodType<
  BeneficialOwnersEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  beneficialOwners: z.array(BeneficialOwner$zodSchema).optional(),
});

/**
 * Request model for list beneficial owners
 */
export type BeneficialOwners = {
  _links?: { [k: string]: HalLink } | undefined;
  _embedded?: BeneficialOwnersEmbedded | undefined;
};

export const BeneficialOwners$zodSchema: z.ZodType<
  BeneficialOwners,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => BeneficialOwnersEmbedded$zodSchema).optional(),
  _links: z.record(HalLink$zodSchema).optional(),
}).describe("Request model for list beneficial owners");
