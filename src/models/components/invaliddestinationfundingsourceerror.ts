/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidDestinationFundingSourceErrorLinks = {};

export const InvalidDestinationFundingSourceErrorLinks$zodSchema: z.ZodType<
  InvalidDestinationFundingSourceErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type InvalidDestinationFundingSourceErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidDestinationFundingSourceErrorLinks | undefined;
};

export const InvalidDestinationFundingSourceErrorError$zodSchema: z.ZodType<
  InvalidDestinationFundingSourceErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => InvalidDestinationFundingSourceErrorLinks$zodSchema)
    .optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type InvalidDestinationFundingSourceErrorEmbedded = {
  errors?: Array<InvalidDestinationFundingSourceErrorError> | undefined;
};

export const InvalidDestinationFundingSourceErrorEmbedded$zodSchema: z.ZodType<
  InvalidDestinationFundingSourceErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(
    z.lazy(() => InvalidDestinationFundingSourceErrorError$zodSchema),
  ).optional(),
});

export type InvalidDestinationFundingSourceError = {
  code: string;
  message: string;
  _embedded?: InvalidDestinationFundingSourceErrorEmbedded | undefined;
};

export const InvalidDestinationFundingSourceError$zodSchema: z.ZodType<
  InvalidDestinationFundingSourceError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() =>
    InvalidDestinationFundingSourceErrorEmbedded$zodSchema
  ).optional(),
  code: z.string(),
  message: z.string(),
});
