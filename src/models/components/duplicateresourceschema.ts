/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type About = {
  href?: string | undefined;
  type?: string | undefined;
  resourceType?: string | undefined;
};

export const About$zodSchema: z.ZodType<About, z.ZodTypeDef, unknown> = z
  .object({
    href: z.string().optional(),
    resourceType: z.string().optional(),
    type: z.string().optional(),
  });

export type DuplicateResourceSchemaLinks = { about?: About | undefined };

export const DuplicateResourceSchemaLinks$zodSchema: z.ZodType<
  DuplicateResourceSchemaLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  about: z.lazy(() => About$zodSchema).optional(),
});

export type DuplicateResourceSchema = {
  code: string;
  message: string;
  _links?: DuplicateResourceSchemaLinks | undefined;
};

export const DuplicateResourceSchema$zodSchema: z.ZodType<
  DuplicateResourceSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => DuplicateResourceSchemaLinks$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
