/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ReceiverRestrictedErrorLinks = {};

export const ReceiverRestrictedErrorLinks$zodSchema: z.ZodType<
  ReceiverRestrictedErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type ReceiverRestrictedErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: ReceiverRestrictedErrorLinks | undefined;
};

export const ReceiverRestrictedErrorError$zodSchema: z.ZodType<
  ReceiverRestrictedErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => ReceiverRestrictedErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type ReceiverRestrictedErrorEmbedded = {
  errors?: Array<ReceiverRestrictedErrorError> | undefined;
};

export const ReceiverRestrictedErrorEmbedded$zodSchema: z.ZodType<
  ReceiverRestrictedErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => ReceiverRestrictedErrorError$zodSchema))
    .optional(),
});

export type ReceiverRestrictedError = {
  code: string;
  message: string;
  _embedded?: ReceiverRestrictedErrorEmbedded | undefined;
};

export const ReceiverRestrictedError$zodSchema: z.ZodType<
  ReceiverRestrictedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => ReceiverRestrictedErrorEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
