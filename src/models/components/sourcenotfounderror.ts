/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SourceNotFoundErrorLinks = {};

export const SourceNotFoundErrorLinks$zodSchema: z.ZodType<
  SourceNotFoundErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type SourceNotFoundErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: SourceNotFoundErrorLinks | undefined;
};

export const SourceNotFoundErrorError$zodSchema: z.ZodType<
  SourceNotFoundErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => SourceNotFoundErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type SourceNotFoundErrorEmbedded = {
  errors?: Array<SourceNotFoundErrorError> | undefined;
};

export const SourceNotFoundErrorEmbedded$zodSchema: z.ZodType<
  SourceNotFoundErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => SourceNotFoundErrorError$zodSchema)).optional(),
});

export type SourceNotFoundError = {
  code: string;
  message: string;
  _embedded?: SourceNotFoundErrorEmbedded | undefined;
};

export const SourceNotFoundError$zodSchema: z.ZodType<
  SourceNotFoundError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => SourceNotFoundErrorEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
