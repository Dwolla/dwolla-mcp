/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ControllerAddress = {
  address1?: string | undefined;
  address2?: string | undefined;
  address3?: string | undefined;
  city?: string | undefined;
  postalCode?: string | undefined;
  country?: string | undefined;
  stateProvinceRegion?: string | undefined;
};

export const ControllerAddress$zodSchema: z.ZodType<
  ControllerAddress,
  z.ZodTypeDef,
  unknown
> = z.object({
  address1: z.string().optional(),
  address2: z.string().optional(),
  address3: z.string().optional(),
  city: z.string().optional(),
  country: z.string().optional(),
  postalCode: z.string().optional(),
  stateProvinceRegion: z.string().optional(),
});

/**
 * Controller JSON Object for Customer responses
 */
export type Controller = {
  firstName?: string | undefined;
  lastName?: string | undefined;
  title?: string | undefined;
  address?: ControllerAddress | undefined;
};

export const Controller$zodSchema: z.ZodType<
  Controller,
  z.ZodTypeDef,
  unknown
> = z.object({
  address: z.lazy(() => ControllerAddress$zodSchema).optional(),
  firstName: z.string().optional(),
  lastName: z.string().optional(),
  title: z.string().optional(),
}).describe("Controller JSON Object for Customer responses");
