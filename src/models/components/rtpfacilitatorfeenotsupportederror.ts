/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RtpFacilitatorFeeNotSupportedErrorLinks = {};

export const RtpFacilitatorFeeNotSupportedErrorLinks$zodSchema: z.ZodType<
  RtpFacilitatorFeeNotSupportedErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type RtpFacilitatorFeeNotSupportedErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: RtpFacilitatorFeeNotSupportedErrorLinks | undefined;
};

export const RtpFacilitatorFeeNotSupportedErrorError$zodSchema: z.ZodType<
  RtpFacilitatorFeeNotSupportedErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => RtpFacilitatorFeeNotSupportedErrorLinks$zodSchema)
    .optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type RtpFacilitatorFeeNotSupportedErrorEmbedded = {
  errors?: Array<RtpFacilitatorFeeNotSupportedErrorError> | undefined;
};

export const RtpFacilitatorFeeNotSupportedErrorEmbedded$zodSchema: z.ZodType<
  RtpFacilitatorFeeNotSupportedErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(
    z.lazy(() => RtpFacilitatorFeeNotSupportedErrorError$zodSchema),
  ).optional(),
});

export type RtpFacilitatorFeeNotSupportedError = {
  code: string;
  message: string;
  _embedded?: RtpFacilitatorFeeNotSupportedErrorEmbedded | undefined;
};

export const RtpFacilitatorFeeNotSupportedError$zodSchema: z.ZodType<
  RtpFacilitatorFeeNotSupportedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => RtpFacilitatorFeeNotSupportedErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
