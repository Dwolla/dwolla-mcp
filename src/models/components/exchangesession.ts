/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ExchangeSessionSelf = {
  href: string;
  type: string;
  resourceType: string;
};

export const ExchangeSessionSelf$zodSchema: z.ZodType<
  ExchangeSessionSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  resourceType: z.string(),
  type: z.string(),
});

export type ExchangeSessionExchangePartner = {
  href: string;
  type: string;
  resourceType: string;
};

export const ExchangeSessionExchangePartner$zodSchema: z.ZodType<
  ExchangeSessionExchangePartner,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  resourceType: z.string(),
  type: z.string(),
});

export type ExternalProviderSession = {
  href: string;
  type: string;
  resourceType: string;
};

export const ExternalProviderSession$zodSchema: z.ZodType<
  ExternalProviderSession,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
  resourceType: z.string(),
  type: z.string(),
});

export type ExchangeSessionLinks = {
  self: ExchangeSessionSelf;
  exchangePartner: ExchangeSessionExchangePartner;
  externalProviderSession?: ExternalProviderSession | undefined;
};

export const ExchangeSessionLinks$zodSchema: z.ZodType<
  ExchangeSessionLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  exchangePartner: z.lazy(() => ExchangeSessionExchangePartner$zodSchema),
  externalProviderSession: z.lazy(() => ExternalProviderSession$zodSchema)
    .optional(),
  self: z.lazy(() => ExchangeSessionSelf$zodSchema),
});

export type ExchangeSession = {
  created: string;
  _links: ExchangeSessionLinks;
  externalProviderSessionToken?: string | undefined;
};

export const ExchangeSession$zodSchema: z.ZodType<
  ExchangeSession,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => ExchangeSessionLinks$zodSchema),
  created: z.string().datetime({ offset: true }),
  externalProviderSessionToken: z.string().optional(),
});
