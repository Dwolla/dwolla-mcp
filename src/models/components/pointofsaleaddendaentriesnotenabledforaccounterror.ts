/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type PointOfSaleAddendaEntriesNotEnabledForAccountErrorLinks = {};

export const PointOfSaleAddendaEntriesNotEnabledForAccountErrorLinks$zodSchema:
  z.ZodType<
    PointOfSaleAddendaEntriesNotEnabledForAccountErrorLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({});

export type PointOfSaleAddendaEntriesNotEnabledForAccountErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: PointOfSaleAddendaEntriesNotEnabledForAccountErrorLinks | undefined;
};

export const PointOfSaleAddendaEntriesNotEnabledForAccountErrorError$zodSchema:
  z.ZodType<
    PointOfSaleAddendaEntriesNotEnabledForAccountErrorError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _links: z.lazy(() =>
      PointOfSaleAddendaEntriesNotEnabledForAccountErrorLinks$zodSchema
    ).optional(),
    code: z.string().optional(),
    message: z.string().optional(),
    path: z.string().optional(),
  });

export type PointOfSaleAddendaEntriesNotEnabledForAccountErrorEmbedded = {
  errors?:
    | Array<PointOfSaleAddendaEntriesNotEnabledForAccountErrorError>
    | undefined;
};

export const PointOfSaleAddendaEntriesNotEnabledForAccountErrorEmbedded$zodSchema:
  z.ZodType<
    PointOfSaleAddendaEntriesNotEnabledForAccountErrorEmbedded,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(
      z.lazy(() =>
        PointOfSaleAddendaEntriesNotEnabledForAccountErrorError$zodSchema
      ),
    ).optional(),
  });

export type PointOfSaleAddendaEntriesNotEnabledForAccountError = {
  code: string;
  message: string;
  _embedded?:
    | PointOfSaleAddendaEntriesNotEnabledForAccountErrorEmbedded
    | undefined;
};

export const PointOfSaleAddendaEntriesNotEnabledForAccountError$zodSchema:
  z.ZodType<
    PointOfSaleAddendaEntriesNotEnabledForAccountError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _embedded: z.lazy(() =>
      PointOfSaleAddendaEntriesNotEnabledForAccountErrorEmbedded$zodSchema
    ).optional(),
    code: z.string(),
    message: z.string(),
  });
