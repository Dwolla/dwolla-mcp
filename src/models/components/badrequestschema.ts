/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type BadRequestSchemaEmbedded = {
  code?: string | undefined;
  message?: string | undefined;
};

export const BadRequestSchemaEmbedded$zodSchema: z.ZodType<
  BadRequestSchemaEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
});

export type BadRequestSchema = {
  code: string;
  message: string;
  _embedded?: BadRequestSchemaEmbedded | undefined;
};

export const BadRequestSchema$zodSchema: z.ZodType<
  BadRequestSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => BadRequestSchemaEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
