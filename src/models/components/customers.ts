/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Customer, Customer$zodSchema } from "./customer.js";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type CustomersEmbedded = { customers?: Array<Customer> | undefined };

export const CustomersEmbedded$zodSchema: z.ZodType<
  CustomersEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  customers: z.array(Customer$zodSchema).optional(),
});

export type Customers = {
  _links?: { [k: string]: HalLink } | undefined;
  _embedded?: CustomersEmbedded | undefined;
};

export const Customers$zodSchema: z.ZodType<Customers, z.ZodTypeDef, unknown> =
  z.object({
    _embedded: z.lazy(() => CustomersEmbedded$zodSchema).optional(),
    _links: z.record(HalLink$zodSchema).optional(),
  });
