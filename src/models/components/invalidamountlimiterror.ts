/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidAmountLimitErrorLinks = {};

export const InvalidAmountLimitErrorLinks$zodSchema: z.ZodType<
  InvalidAmountLimitErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type InvalidAmountLimitErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidAmountLimitErrorLinks | undefined;
};

export const InvalidAmountLimitErrorError$zodSchema: z.ZodType<
  InvalidAmountLimitErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => InvalidAmountLimitErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type InvalidAmountLimitErrorEmbedded = {
  errors?: Array<InvalidAmountLimitErrorError> | undefined;
};

export const InvalidAmountLimitErrorEmbedded$zodSchema: z.ZodType<
  InvalidAmountLimitErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => InvalidAmountLimitErrorError$zodSchema))
    .optional(),
});

export type InvalidAmountLimitError = {
  code: string;
  message: string;
  _embedded?: InvalidAmountLimitErrorEmbedded | undefined;
};

export const InvalidAmountLimitError$zodSchema: z.ZodType<
  InvalidAmountLimitError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => InvalidAmountLimitErrorEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
