/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type LabelAmount = {
  value?: string | undefined;
  currency?: string | undefined;
};

export const LabelAmount$zodSchema: z.ZodType<
  LabelAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string().optional(),
  value: z.string().optional(),
});

export type Label = {
  _links?: { [k: string]: HalLink } | undefined;
  id?: string | undefined;
  created?: string | undefined;
  amount?: LabelAmount | undefined;
};

export const Label$zodSchema: z.ZodType<Label, z.ZodTypeDef, unknown> = z
  .object({
    _links: z.record(HalLink$zodSchema).optional(),
    amount: z.lazy(() => LabelAmount$zodSchema).optional(),
    created: z.string().datetime({ offset: true }).optional(),
    id: z.string().optional(),
  });
