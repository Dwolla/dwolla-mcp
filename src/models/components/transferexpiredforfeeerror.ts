/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TransferExpiredForFeeErrorLinks = {};

export const TransferExpiredForFeeErrorLinks$zodSchema: z.ZodType<
  TransferExpiredForFeeErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type TransferExpiredForFeeErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: TransferExpiredForFeeErrorLinks | undefined;
};

export const TransferExpiredForFeeErrorError$zodSchema: z.ZodType<
  TransferExpiredForFeeErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => TransferExpiredForFeeErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type TransferExpiredForFeeErrorEmbedded = {
  errors?: Array<TransferExpiredForFeeErrorError> | undefined;
};

export const TransferExpiredForFeeErrorEmbedded$zodSchema: z.ZodType<
  TransferExpiredForFeeErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => TransferExpiredForFeeErrorError$zodSchema))
    .optional(),
});

export type TransferExpiredForFeeError = {
  code: string;
  message: string;
  _embedded?: TransferExpiredForFeeErrorEmbedded | undefined;
};

export const TransferExpiredForFeeError$zodSchema: z.ZodType<
  TransferExpiredForFeeError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => TransferExpiredForFeeErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
