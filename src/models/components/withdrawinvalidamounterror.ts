/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type WithdrawInvalidAmountErrorLinks = {};

export const WithdrawInvalidAmountErrorLinks$zodSchema: z.ZodType<
  WithdrawInvalidAmountErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type WithdrawInvalidAmountErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: WithdrawInvalidAmountErrorLinks | undefined;
};

export const WithdrawInvalidAmountErrorError$zodSchema: z.ZodType<
  WithdrawInvalidAmountErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => WithdrawInvalidAmountErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type WithdrawInvalidAmountErrorEmbedded = {
  errors?: Array<WithdrawInvalidAmountErrorError> | undefined;
};

export const WithdrawInvalidAmountErrorEmbedded$zodSchema: z.ZodType<
  WithdrawInvalidAmountErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => WithdrawInvalidAmountErrorError$zodSchema))
    .optional(),
});

export type WithdrawInvalidAmountError = {
  code: string;
  message: string;
  _embedded?: WithdrawInvalidAmountErrorEmbedded | undefined;
};

export const WithdrawInvalidAmountError$zodSchema: z.ZodType<
  WithdrawInvalidAmountError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => WithdrawInvalidAmountErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
