/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";
import { MassPayment, MassPayment$zodSchema } from "./masspayment.js";

export type MassPaymentsEmbedded = {
  massPayments?: Array<MassPayment> | undefined;
};

export const MassPaymentsEmbedded$zodSchema: z.ZodType<
  MassPaymentsEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  massPayments: z.array(MassPayment$zodSchema).optional(),
});

export type MassPayments = {
  _links?: { [k: string]: HalLink } | undefined;
  _embedded?: MassPaymentsEmbedded | undefined;
  total?: number | undefined;
};

export const MassPayments$zodSchema: z.ZodType<
  MassPayments,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => MassPaymentsEmbedded$zodSchema).optional(),
  _links: z.record(HalLink$zodSchema).optional(),
  total: z.number().int().optional(),
});
