/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InsufficientFundsErrorLinks = {};

export const InsufficientFundsErrorLinks$zodSchema: z.ZodType<
  InsufficientFundsErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type InsufficientFundsErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InsufficientFundsErrorLinks | undefined;
};

export const InsufficientFundsErrorError$zodSchema: z.ZodType<
  InsufficientFundsErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => InsufficientFundsErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type InsufficientFundsErrorEmbedded = {
  errors?: Array<InsufficientFundsErrorError> | undefined;
};

export const InsufficientFundsErrorEmbedded$zodSchema: z.ZodType<
  InsufficientFundsErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => InsufficientFundsErrorError$zodSchema))
    .optional(),
});

export type InsufficientFundsError = {
  code: string;
  message: string;
  _embedded?: InsufficientFundsErrorEmbedded | undefined;
};

export const InsufficientFundsError$zodSchema: z.ZodType<
  InsufficientFundsError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => InsufficientFundsErrorEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
