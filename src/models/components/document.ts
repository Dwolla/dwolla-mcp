/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type DocumentLinks = { self?: HalLink | undefined };

export const DocumentLinks$zodSchema: z.ZodType<
  DocumentLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: HalLink$zodSchema.optional(),
});

export type AllFailureReason = {
  reason?: string | undefined;
  description?: string | undefined;
};

export const AllFailureReason$zodSchema: z.ZodType<
  AllFailureReason,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.string().optional(),
  reason: z.string().optional(),
});

export type Document = {
  _links?: DocumentLinks | undefined;
  id?: string | undefined;
  status?: string | undefined;
  type?: string | undefined;
  created?: string | undefined;
  documentVerificationStatus?: string | undefined;
  failureReason?: string | undefined;
  allFailureReasons?: Array<AllFailureReason> | undefined;
};

export const Document$zodSchema: z.ZodType<Document, z.ZodTypeDef, unknown> = z
  .object({
    _links: z.lazy(() => DocumentLinks$zodSchema).optional(),
    allFailureReasons: z.array(z.lazy(() => AllFailureReason$zodSchema))
      .optional(),
    created: z.string().datetime({ offset: true }).optional(),
    documentVerificationStatus: z.string().optional(),
    failureReason: z.string().optional(),
    id: z.string().optional(),
    status: z.string().optional(),
    type: z.string().optional(),
  });
