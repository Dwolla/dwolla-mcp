/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidSourceBankAccountTypeErrorLinks = {};

export const InvalidSourceBankAccountTypeErrorLinks$zodSchema: z.ZodType<
  InvalidSourceBankAccountTypeErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type InvalidSourceBankAccountTypeErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidSourceBankAccountTypeErrorLinks | undefined;
};

export const InvalidSourceBankAccountTypeErrorError$zodSchema: z.ZodType<
  InvalidSourceBankAccountTypeErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => InvalidSourceBankAccountTypeErrorLinks$zodSchema)
    .optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type InvalidSourceBankAccountTypeErrorEmbedded = {
  errors?: Array<InvalidSourceBankAccountTypeErrorError> | undefined;
};

export const InvalidSourceBankAccountTypeErrorEmbedded$zodSchema: z.ZodType<
  InvalidSourceBankAccountTypeErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(
    z.lazy(() => InvalidSourceBankAccountTypeErrorError$zodSchema),
  ).optional(),
});

export type InvalidSourceBankAccountTypeError = {
  code: string;
  message: string;
  _embedded?: InvalidSourceBankAccountTypeErrorEmbedded | undefined;
};

export const InvalidSourceBankAccountTypeError$zodSchema: z.ZodType<
  InvalidSourceBankAccountTypeError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => InvalidSourceBankAccountTypeErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
