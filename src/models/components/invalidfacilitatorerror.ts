/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidFacilitatorErrorLinks = {};

export const InvalidFacilitatorErrorLinks$zodSchema: z.ZodType<
  InvalidFacilitatorErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type InvalidFacilitatorErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidFacilitatorErrorLinks | undefined;
};

export const InvalidFacilitatorErrorError$zodSchema: z.ZodType<
  InvalidFacilitatorErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => InvalidFacilitatorErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type InvalidFacilitatorErrorEmbedded = {
  errors?: Array<InvalidFacilitatorErrorError> | undefined;
};

export const InvalidFacilitatorErrorEmbedded$zodSchema: z.ZodType<
  InvalidFacilitatorErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => InvalidFacilitatorErrorError$zodSchema))
    .optional(),
});

export type InvalidFacilitatorError = {
  code: string;
  message: string;
  _embedded?: InvalidFacilitatorErrorEmbedded | undefined;
};

export const InvalidFacilitatorError$zodSchema: z.ZodType<
  InvalidFacilitatorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => InvalidFacilitatorErrorEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
