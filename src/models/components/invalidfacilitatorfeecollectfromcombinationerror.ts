/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidFacilitatorFeeCollectFromCombinationErrorLinks = {};

export const InvalidFacilitatorFeeCollectFromCombinationErrorLinks$zodSchema:
  z.ZodType<
    InvalidFacilitatorFeeCollectFromCombinationErrorLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({});

export type InvalidFacilitatorFeeCollectFromCombinationErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidFacilitatorFeeCollectFromCombinationErrorLinks | undefined;
};

export const InvalidFacilitatorFeeCollectFromCombinationErrorError$zodSchema:
  z.ZodType<
    InvalidFacilitatorFeeCollectFromCombinationErrorError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _links: z.lazy(() =>
      InvalidFacilitatorFeeCollectFromCombinationErrorLinks$zodSchema
    ).optional(),
    code: z.string().optional(),
    message: z.string().optional(),
    path: z.string().optional(),
  });

export type InvalidFacilitatorFeeCollectFromCombinationErrorEmbedded = {
  errors?:
    | Array<InvalidFacilitatorFeeCollectFromCombinationErrorError>
    | undefined;
};

export const InvalidFacilitatorFeeCollectFromCombinationErrorEmbedded$zodSchema:
  z.ZodType<
    InvalidFacilitatorFeeCollectFromCombinationErrorEmbedded,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(
      z.lazy(() =>
        InvalidFacilitatorFeeCollectFromCombinationErrorError$zodSchema
      ),
    ).optional(),
  });

export type InvalidFacilitatorFeeCollectFromCombinationError = {
  code: string;
  message: string;
  _embedded?:
    | InvalidFacilitatorFeeCollectFromCombinationErrorEmbedded
    | undefined;
};

export const InvalidFacilitatorFeeCollectFromCombinationError$zodSchema:
  z.ZodType<
    InvalidFacilitatorFeeCollectFromCombinationError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _embedded: z.lazy(() =>
      InvalidFacilitatorFeeCollectFromCombinationErrorEmbedded$zodSchema
    ).optional(),
    code: z.string(),
    message: z.string(),
  });
