/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type FacilitatorFeeBelowMinimumErrorLinks = {};

export const FacilitatorFeeBelowMinimumErrorLinks$zodSchema: z.ZodType<
  FacilitatorFeeBelowMinimumErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type FacilitatorFeeBelowMinimumErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: FacilitatorFeeBelowMinimumErrorLinks | undefined;
};

export const FacilitatorFeeBelowMinimumErrorError$zodSchema: z.ZodType<
  FacilitatorFeeBelowMinimumErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => FacilitatorFeeBelowMinimumErrorLinks$zodSchema)
    .optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type FacilitatorFeeBelowMinimumErrorEmbedded = {
  errors?: Array<FacilitatorFeeBelowMinimumErrorError> | undefined;
};

export const FacilitatorFeeBelowMinimumErrorEmbedded$zodSchema: z.ZodType<
  FacilitatorFeeBelowMinimumErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => FacilitatorFeeBelowMinimumErrorError$zodSchema))
    .optional(),
});

export type FacilitatorFeeBelowMinimumError = {
  code: string;
  message: string;
  _embedded?: FacilitatorFeeBelowMinimumErrorEmbedded | undefined;
};

export const FacilitatorFeeBelowMinimumError$zodSchema: z.ZodType<
  FacilitatorFeeBelowMinimumError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => FacilitatorFeeBelowMinimumErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
