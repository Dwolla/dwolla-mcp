/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type WithdrawInvalidWireOriginatorToBeneficiaryErrorLinks = {};

export const WithdrawInvalidWireOriginatorToBeneficiaryErrorLinks$zodSchema:
  z.ZodType<
    WithdrawInvalidWireOriginatorToBeneficiaryErrorLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({});

export type WithdrawInvalidWireOriginatorToBeneficiaryErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: WithdrawInvalidWireOriginatorToBeneficiaryErrorLinks | undefined;
};

export const WithdrawInvalidWireOriginatorToBeneficiaryErrorError$zodSchema:
  z.ZodType<
    WithdrawInvalidWireOriginatorToBeneficiaryErrorError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _links: z.lazy(() =>
      WithdrawInvalidWireOriginatorToBeneficiaryErrorLinks$zodSchema
    ).optional(),
    code: z.string().optional(),
    message: z.string().optional(),
    path: z.string().optional(),
  });

export type WithdrawInvalidWireOriginatorToBeneficiaryErrorEmbedded = {
  errors?:
    | Array<WithdrawInvalidWireOriginatorToBeneficiaryErrorError>
    | undefined;
};

export const WithdrawInvalidWireOriginatorToBeneficiaryErrorEmbedded$zodSchema:
  z.ZodType<
    WithdrawInvalidWireOriginatorToBeneficiaryErrorEmbedded,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(
      z.lazy(() =>
        WithdrawInvalidWireOriginatorToBeneficiaryErrorError$zodSchema
      ),
    ).optional(),
  });

export type WithdrawInvalidWireOriginatorToBeneficiaryError = {
  code: string;
  message: string;
  _embedded?:
    | WithdrawInvalidWireOriginatorToBeneficiaryErrorEmbedded
    | undefined;
};

export const WithdrawInvalidWireOriginatorToBeneficiaryError$zodSchema:
  z.ZodType<
    WithdrawInvalidWireOriginatorToBeneficiaryError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _embedded: z.lazy(() =>
      WithdrawInvalidWireOriginatorToBeneficiaryErrorEmbedded$zodSchema
    ).optional(),
    code: z.string(),
    message: z.string(),
  });
