/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidAmountForDestinationProcessingChannelErrorLinks = {};

export const InvalidAmountForDestinationProcessingChannelErrorLinks$zodSchema:
  z.ZodType<
    InvalidAmountForDestinationProcessingChannelErrorLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({});

export type InvalidAmountForDestinationProcessingChannelErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidAmountForDestinationProcessingChannelErrorLinks | undefined;
};

export const InvalidAmountForDestinationProcessingChannelErrorError$zodSchema:
  z.ZodType<
    InvalidAmountForDestinationProcessingChannelErrorError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _links: z.lazy(() =>
      InvalidAmountForDestinationProcessingChannelErrorLinks$zodSchema
    ).optional(),
    code: z.string().optional(),
    message: z.string().optional(),
    path: z.string().optional(),
  });

export type InvalidAmountForDestinationProcessingChannelErrorEmbedded = {
  errors?:
    | Array<InvalidAmountForDestinationProcessingChannelErrorError>
    | undefined;
};

export const InvalidAmountForDestinationProcessingChannelErrorEmbedded$zodSchema:
  z.ZodType<
    InvalidAmountForDestinationProcessingChannelErrorEmbedded,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(
      z.lazy(() =>
        InvalidAmountForDestinationProcessingChannelErrorError$zodSchema
      ),
    ).optional(),
  });

export type InvalidAmountForDestinationProcessingChannelError = {
  code: string;
  message: string;
  _embedded?:
    | InvalidAmountForDestinationProcessingChannelErrorEmbedded
    | undefined;
};

export const InvalidAmountForDestinationProcessingChannelError$zodSchema:
  z.ZodType<
    InvalidAmountForDestinationProcessingChannelError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _embedded: z.lazy(() =>
      InvalidAmountForDestinationProcessingChannelErrorEmbedded$zodSchema
    ).optional(),
    code: z.string(),
    message: z.string(),
  });
