/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidDestinationClearingTypeErrorLinks = {};

export const InvalidDestinationClearingTypeErrorLinks$zodSchema: z.ZodType<
  InvalidDestinationClearingTypeErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type InvalidDestinationClearingTypeErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidDestinationClearingTypeErrorLinks | undefined;
};

export const InvalidDestinationClearingTypeErrorError$zodSchema: z.ZodType<
  InvalidDestinationClearingTypeErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => InvalidDestinationClearingTypeErrorLinks$zodSchema)
    .optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type InvalidDestinationClearingTypeErrorEmbedded = {
  errors?: Array<InvalidDestinationClearingTypeErrorError> | undefined;
};

export const InvalidDestinationClearingTypeErrorEmbedded$zodSchema: z.ZodType<
  InvalidDestinationClearingTypeErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(
    z.lazy(() => InvalidDestinationClearingTypeErrorError$zodSchema),
  ).optional(),
});

export type InvalidDestinationClearingTypeError = {
  code: string;
  message: string;
  _embedded?: InvalidDestinationClearingTypeErrorEmbedded | undefined;
};

export const InvalidDestinationClearingTypeError$zodSchema: z.ZodType<
  InvalidDestinationClearingTypeError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => InvalidDestinationClearingTypeErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
