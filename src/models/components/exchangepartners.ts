/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { HalLink, HalLink$zodSchema } from "./hallink.js";

export type ExchangePartnersEmbedded = {
  exchangePartners?: Array<ExchangePartners> | undefined;
};

export const ExchangePartnersEmbedded$zodSchema: z.ZodType<
  ExchangePartnersEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  exchangePartners: z.array(z.lazy(() => ExchangePartners$zodSchema))
    .optional(),
});

export type ExchangePartners = {
  _links?: { [k: string]: HalLink } | undefined;
  _embedded?: ExchangePartnersEmbedded | undefined;
  total?: number | undefined;
};

export const ExchangePartners$zodSchema: z.ZodType<
  ExchangePartners,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => ExchangePartnersEmbedded$zodSchema).optional(),
  _links: z.record(HalLink$zodSchema).optional(),
  total: z.number().int().optional(),
});
