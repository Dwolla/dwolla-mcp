/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type WithdrawAccountRestrictedErrorLinks = {};

export const WithdrawAccountRestrictedErrorLinks$zodSchema: z.ZodType<
  WithdrawAccountRestrictedErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type WithdrawAccountRestrictedErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: WithdrawAccountRestrictedErrorLinks | undefined;
};

export const WithdrawAccountRestrictedErrorError$zodSchema: z.ZodType<
  WithdrawAccountRestrictedErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => WithdrawAccountRestrictedErrorLinks$zodSchema)
    .optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type WithdrawAccountRestrictedErrorEmbedded = {
  errors?: Array<WithdrawAccountRestrictedErrorError> | undefined;
};

export const WithdrawAccountRestrictedErrorEmbedded$zodSchema: z.ZodType<
  WithdrawAccountRestrictedErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => WithdrawAccountRestrictedErrorError$zodSchema))
    .optional(),
});

export type WithdrawAccountRestrictedError = {
  code: string;
  message: string;
  _embedded?: WithdrawAccountRestrictedErrorEmbedded | undefined;
};

export const WithdrawAccountRestrictedError$zodSchema: z.ZodType<
  WithdrawAccountRestrictedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => WithdrawAccountRestrictedErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
