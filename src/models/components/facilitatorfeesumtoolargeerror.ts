/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type FacilitatorFeeSumTooLargeErrorLinks = {};

export const FacilitatorFeeSumTooLargeErrorLinks$zodSchema: z.ZodType<
  FacilitatorFeeSumTooLargeErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type FacilitatorFeeSumTooLargeErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: FacilitatorFeeSumTooLargeErrorLinks | undefined;
};

export const FacilitatorFeeSumTooLargeErrorError$zodSchema: z.ZodType<
  FacilitatorFeeSumTooLargeErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => FacilitatorFeeSumTooLargeErrorLinks$zodSchema)
    .optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type FacilitatorFeeSumTooLargeErrorEmbedded = {
  errors?: Array<FacilitatorFeeSumTooLargeErrorError> | undefined;
};

export const FacilitatorFeeSumTooLargeErrorEmbedded$zodSchema: z.ZodType<
  FacilitatorFeeSumTooLargeErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => FacilitatorFeeSumTooLargeErrorError$zodSchema))
    .optional(),
});

export type FacilitatorFeeSumTooLargeError = {
  code: string;
  message: string;
  _embedded?: FacilitatorFeeSumTooLargeErrorEmbedded | undefined;
};

export const FacilitatorFeeSumTooLargeError$zodSchema: z.ZodType<
  FacilitatorFeeSumTooLargeError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => FacilitatorFeeSumTooLargeErrorEmbedded$zodSchema)
    .optional(),
  code: z.string(),
  message: z.string(),
});
