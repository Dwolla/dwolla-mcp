/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ValidationErrorSchemaEmbedded = {
  code?: string | undefined;
  message?: string | undefined;
};

export const ValidationErrorSchemaEmbedded$zodSchema: z.ZodType<
  ValidationErrorSchemaEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
});

export type ValidationErrorSchema = {
  code: string;
  message: string;
  _embedded?: ValidationErrorSchemaEmbedded | undefined;
};

export const ValidationErrorSchema$zodSchema: z.ZodType<
  ValidationErrorSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => ValidationErrorSchemaEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
