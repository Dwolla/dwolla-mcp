/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ReceiverNotFoundErrorLinks = {};

export const ReceiverNotFoundErrorLinks$zodSchema: z.ZodType<
  ReceiverNotFoundErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

export type ReceiverNotFoundErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: ReceiverNotFoundErrorLinks | undefined;
};

export const ReceiverNotFoundErrorError$zodSchema: z.ZodType<
  ReceiverNotFoundErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => ReceiverNotFoundErrorLinks$zodSchema).optional(),
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
});

export type ReceiverNotFoundErrorEmbedded = {
  errors?: Array<ReceiverNotFoundErrorError> | undefined;
};

export const ReceiverNotFoundErrorEmbedded$zodSchema: z.ZodType<
  ReceiverNotFoundErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => ReceiverNotFoundErrorError$zodSchema))
    .optional(),
});

export type ReceiverNotFoundError = {
  code: string;
  message: string;
  _embedded?: ReceiverNotFoundErrorEmbedded | undefined;
};

export const ReceiverNotFoundError$zodSchema: z.ZodType<
  ReceiverNotFoundError,
  z.ZodTypeDef,
  unknown
> = z.object({
  _embedded: z.lazy(() => ReceiverNotFoundErrorEmbedded$zodSchema).optional(),
  code: z.string(),
  message: z.string(),
});
