/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type InvalidPointOfSaleAddendaIdentificationCodeErrorLinks = {};

export const InvalidPointOfSaleAddendaIdentificationCodeErrorLinks$zodSchema:
  z.ZodType<
    InvalidPointOfSaleAddendaIdentificationCodeErrorLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({});

export type InvalidPointOfSaleAddendaIdentificationCodeErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidPointOfSaleAddendaIdentificationCodeErrorLinks | undefined;
};

export const InvalidPointOfSaleAddendaIdentificationCodeErrorError$zodSchema:
  z.ZodType<
    InvalidPointOfSaleAddendaIdentificationCodeErrorError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _links: z.lazy(() =>
      InvalidPointOfSaleAddendaIdentificationCodeErrorLinks$zodSchema
    ).optional(),
    code: z.string().optional(),
    message: z.string().optional(),
    path: z.string().optional(),
  });

export type InvalidPointOfSaleAddendaIdentificationCodeErrorEmbedded = {
  errors?:
    | Array<InvalidPointOfSaleAddendaIdentificationCodeErrorError>
    | undefined;
};

export const InvalidPointOfSaleAddendaIdentificationCodeErrorEmbedded$zodSchema:
  z.ZodType<
    InvalidPointOfSaleAddendaIdentificationCodeErrorEmbedded,
    z.ZodTypeDef,
    unknown
  > = z.object({
    errors: z.array(
      z.lazy(() =>
        InvalidPointOfSaleAddendaIdentificationCodeErrorError$zodSchema
      ),
    ).optional(),
  });

export type InvalidPointOfSaleAddendaIdentificationCodeError = {
  code: string;
  message: string;
  _embedded?:
    | InvalidPointOfSaleAddendaIdentificationCodeErrorEmbedded
    | undefined;
};

export const InvalidPointOfSaleAddendaIdentificationCodeError$zodSchema:
  z.ZodType<
    InvalidPointOfSaleAddendaIdentificationCodeError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _embedded: z.lazy(() =>
      InvalidPointOfSaleAddendaIdentificationCodeErrorEmbedded$zodSchema
    ).optional(),
    code: z.string(),
    message: z.string(),
  });
