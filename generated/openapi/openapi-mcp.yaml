openapi: 3.1.0
info:
  title: Dwolla API
  description: Dwolla API Documentation
  contact:
    name: Dwolla Developer Relations Team
    url: https://developers.dwolla.com
    email: api@dwolla.com
  version: '2.0'
  termsOfService: https://www.dwolla.com/legal/tos/
  license:
    name: MIT
    url: https://github.com/Dwolla/dwolla-openapi/blob/master/LICENSE
jsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base
servers:
  - url: https://api.dwolla.com
    description: Production server
    x-speakeasy-server-id: prod
  - url: https://api-sandbox.dwolla.com
    description: Sandbox server
    x-speakeasy-server-id: sandbox
security:
  - bearerAuth: []
tags:
  - name: tokens
    description: Operations related to Application Access Tokens
  - name: root
    description: Root API operations
  - name: accounts
    description: Operations related to Accounts
  - name: customers
    description: Operations related to Customers
  - name: kba
    description: Operations related to Knowledge-Based Authentication
  - name: beneficial owners
    description: Operations related to Beneficial Owners
  - name: documents
    description: Operations related to Documents
  - name: exchanges
    description: Operations related to Exchanges
  - name: exchange sessions
    description: Operations related to Exchange Sessions
  - name: funding sources
    description: Operations related to Funding Sources
  - name: transfers
    description: Operations related to Transfers
  - name: labels
    description: Operations related to Labels
  - name: mass payments
    description: Operations related to Mass Payments
  - name: events
    description: Operations related to Events
  - name: webhook subscriptions
    description: Operations related to Webhook Subscriptions
  - name: webhooks
    description: Operations related to Webhooks
  - name: client tokens
    description: Operations related to Client Tokens
paths:
  /accounts/{id}:
    get:
      tags:
        - accounts
      summary: Retrieve account details
      description: Returns basic account information for your authorized Main Dwolla Account, including account ID, name, and links to related resources such as funding sources, transfers, and customers.
      operationId: getAccount
      x-speakeasy-name-override: get
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var accountUrl = "https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b";

            dwolla.get(accountUrl).then((res) => res.body.name); // => 'Jane Doe'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            account_url = 'https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b'

            account = app_token.get(account_url)
            account.body['name']
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $accountUrl = 'https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b';

            $accountsApi = new DwollaSwagger\AccountsApi($apiClient);

            $account = $accountsApi->id($accountUrl);
            print($account->name); # => "Jane Doe"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            account_url = 'https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b'

            account = app_token.get account_url
            account.name # => "Jane Doe"
      parameters:
        - name: id
          in: path
          description: Account's unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Account'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to retrieve an Account by id.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /funding-sources: {}
  /accounts/{id}/funding-sources:
    get:
      tags:
        - accounts
      summary: List funding sources for an account
      description: |
        Get a list of all funding sources associated with a specific Main Dwolla Account. This endpoint returns both bank accounts and balance funding sources, with detailed information about each funding source's status, type, and available processing channels.
      operationId: listFundingSources
      x-speakeasy-group: accounts.fundingSources
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/funding-sources
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            dwolla
              .get("accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/funding-sources")
              .then((res) => res.body.total); // => 1
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            funding_sources = app_token.get('accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/funding-sources')
            funding_sources.body['total'] # => 1
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $fundingApi = new DwollaSwagger\FundingsourcesApi($apiClient);

            $fundingSources = $fundingApi->getAccountFundingSources("CA366CA3-6D30-44D6-B0F3-8D86C64462A1");
            $fundingSources->total; # => 1
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            funding_sources = app_token.get "accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/funding-sources"
            funding_sources.total # => 1
      parameters:
        - name: id
          in: path
          description: Account's unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
        - name: removed
          in: query
          description: Filter removed funding sources. Boolean value. Defaults to `true`
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/FundingSources'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to list funding sources.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Account not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /accounts/{id}/transfers:
    get:
      tags:
        - accounts
      summary: List and search account transfers
      description: Returns a paginated, searchable list of transfers associated with the specified Main Dwolla account. Supports advanced filtering by amount range, date range, transfer status, and correlation ID. Results are limited to 10,000 transfers per query; use date range filters for historical data beyond this limit.
      operationId: listAndSearchTransfers
      x-speakeasy-group: accounts.transfers
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/transfers
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            dwolla
              .get("accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/transfers")
              .then((res) => res.body.total); // => 1
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            transfers = app_token.get('accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/transfers')
            transfers.body['total'] # => 1
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $transfersApi = new DwollaSwagger\TransfersApi($apiClient);

            $transfers = $transfersApi->getAccountTransfers("CA366CA3-6D30-44D6-B0F3-8D86C64462A1");
            $transfers->total; # => 1
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            transfers = app_token.get "accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/transfers"
            transfers.total # => 1
      parameters:
        - name: id
          in: path
          description: Account's unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
        - name: search
          in: query
          description: A string to search on fields `firstName`, `lastName`, `email`, `businessName`, Customer ID, and Account ID
          required: false
          schema:
            type: string
        - name: startAmount
          in: query
          description: Only include transactions with an amount equal to or greater than `startAmount`
          required: false
          schema:
            type: string
        - name: endAmount
          in: query
          description: Only include transactions with an amount equal to or less than `endAmount`
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: Only include transactions created after this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: Only include transactions created before this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter on transaction status. Possible values are `pending`, `processed`, `failed`, or `cancelled`
          required: false
          schema:
            type: string
        - name: correlationId
          in: query
          description: A string value to search on if `correlationId` was specified for a transaction
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of search results to return. Defaults to 25
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Number of search results to skip. Use for pagination
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Transfers'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Account not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /accounts/{id}/mass-payments:
    get:
      tags:
        - accounts
      summary: List account mass payments
      description: Returns a paginated list of mass payments created by your Main Dwolla account. Results are sorted by creation date in descending order (newest first) and can be filtered by correlation ID.
      operationId: listMassPayments
      x-speakeasy-group: accounts.massPayments
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/mass-payments
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            dwolla
              .get("accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/mass-payments")
              .then((res) => res.body.total); // => 1
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            mass_payments = app_token.get('accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/mass-payments')
            mass_payments.body['total'] # => 1
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $massPaymentsApi = new DwollaSwagger\MasspaymentsApi($apiClient);

            $massPayments = $massPaymentsApi->getAccountMassPayments("CA366CA3-6D30-44D6-B0F3-8D86C64462A1");
            $massPayments->total; # => 1
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            mass_payments = app_token.get "accounts/CA366CA3-6D30-44D6-B0F3-8D86C64462A1/mass-payments"
            mass_payments.total # => 1
      parameters:
        - name: id
          in: path
          description: Account's unique identifier
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            default: 25
            example: 25
        - name: offset
          in: query
          description: How many results to skip.
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            default: 0
            example: 0
        - name: correlationId
          in: query
          description: Correlation ID to search by.
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/MassPayments'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to list mass payments.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Account not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /customers:
    get:
      tags:
        - customers
      summary: List and search customers
      description: Returns a paginated list of customers sorted by creation date. Supports fuzzy search across customer names, business names, and email addresses, plus exact filtering by email and verification status. Default limit is 25 customers per page, maximum 200.
      operationId: listAndSearchCustomers
      x-speakeasy-name-override: list
      parameters:
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: integer
        - name: search
          in: query
          description: Searches on certain fields
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by customer status
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Customers'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
      x-speakeasy-mcp:
        scopes:
          - read
  /business-classifications:
    get:
      tags:
        - customers
      summary: List business classifications
      description: Returns a directory of business and industry classifications required for creating business verified customers. Each business classification contains multiple industry classifications. The industry classification ID must be provided in the businessClassification parameter during business customer creation for verification.
      operationId: listBusinessClassifications
      x-speakeasy-group: businessClassifications
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/business-classifications
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            dwolla
              .get("business-classifications")
              .then((res) => res.body._embedded["business-classifications"][0].name); // => 'Accommodation and Food Services'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            classifications = app_token.get('business-classifications')
            classifications.body['_embedded']['business-classifications'][0]['name'] # => 'Accommodation and Food Services'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $businessClassificationsApi = new DwollaSwagger\BusinessClassificationsApi($apiClient);
            $classifications = $businessClassificationsApi->_list();
            $classifications->_embedded->{'business-classifications'}[0]->name; # => "Accommodation and Food Services"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            classifications = app_token.get "business-classifications"
            classifications._embedded.['business-classifications'][0].name # => "Accommodation and Food Services"
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                  _embedded:
                    type: object
                    properties:
                      business-classifications:
                        type: array
                        items:
                          $ref: '#/components/schemas/BusinessClassifications'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/beneficial-owners:
    get:
      tags:
        - beneficial owners
      summary: List customer beneficial owners
      description: Returns all beneficial owners associated with a business verified customer. Beneficial owners are individuals who directly or indirectly own 25% or more of the company's equity. Includes personal information, verification status, and address details for each owner.
      operationId: listBeneficialOwnersForCustomer
      x-speakeasy-group: customers.beneficialOwners
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/81696e5d-a593-45a6-8863-3c20ad634de5/beneficial-owners
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl = "https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2";

            token
              .get(`${customerUrl}/beneficial-owners`)
              .then((res) => res.body._embedded["beneficial-owners"][0].id);
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            beneficial_owners = app_token.get('%s/beneficial-owners' % customer_url)
            beneficial_owners.body['id']
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $customersApi = new DwollaSwagger\CustomersApi($apiClient);

            $customerUrl = 'https://api-sandbox.dwolla.com/customers/81696e5d-a593-45a6-8863-3c20ad634de5';
            $beneficialOwnerList = $customersApi->getBeneficialOwners($customerUrl);
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            beneficial_owners = app_token.get "#{customer_url}/beneficial-owners"
            beneficial_owners._embedded['beneficial-owners'][0].id
      parameters:
        - name: id
          in: path
          description: Customer unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/BeneficialOwners'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: not_found
                  message:
                    type: string
                    example: not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/beneficial-ownership:
    get:
      tags:
        - beneficial owners
      summary: Retrieve beneficial ownership status
      description: Returns the certification status of beneficial ownership for a business verified customer. Status indicates whether beneficial owner information has been certified and affects the customer's ability to send funds. Possible values include uncertified, certified, and recertify.
      operationId: getBeneficialOwnershipStatusForCustomer
      x-speakeasy-group: customers.beneficialOwnership
      x-speakeasy-name-override: get
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc/beneficial-ownership
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl = "https://api-sandbox.dwolla.com/customers/56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc";

            dwolla
              .get(`${customerUrl}/beneficial-ownership`)
              .then((res) => res.body.status); // => "uncertified"
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api-sandbox.dwolla.com/customers/56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'

            beneficial_ownership = app_token.get('%s/beneficial-ownership' % customer_url)
            beneficial_ownership.body['status'] # => 'uncertified'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $customersApi = new DwollaSwagger\CustomersApi($apiClient);

            $newCustomer = 'https://api-sandbox.dwolla.com/customers/56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc';
            $customerOwnershipStatus = $customersApi->getOwnershipStatus($newCustomer);
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api-sandbox.dwolla.com/customers/56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'

            beneficial_ownership = app_token.get "#{customer_url}/beneficial-ownership"
            beneficial_ownership.status # => "uncertified"
      parameters:
        - name: id
          in: path
          description: Customer unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/BeneficialOwnership'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to get certification status.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: not_found
                  message:
                    type: string
                    example: Ownership certification status not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/documents:
    get:
      tags:
        - documents
      summary: List documents for customer
      description: Returns all identity verification documents submitted for a customer. Includes document status, verification results, document type (passport, driver's license, etc.), and failure reasons if verification was rejected. Used to track document submission and verification progress during the business verification process.
      operationId: listCustomerDocuments
      x-speakeasy-group: customers.documents
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2/documents
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLfwKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

            ...

            {
              "_links": {
                "self": {
                  "href": "https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2/documents"
                }
              },
              "_embedded": {
                "documents": [
                  {
                    "_links": {
                      "self": {
                        "href": "https://api-sandbox.dwolla.com/documents/56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
                      }
                    },
                    "id": "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc",
                    "status": "pending",
                    "type": "passport",
                    "created": "2015-09-29T21:42:16.000Z",
                    "documentVerificationStatus": "pending"
                  },
                  {
                    "_links": {
                        "self": {
                            "href": "https://api-sandbox.dwolla.com/documents/20988444-c7e1-40cf-ab1a-a20da878e568",
                            "type": "application/vnd.dwolla.v1.hal+json",
                            "resource-type": "document"
                        }
                    },
                    "id": "20988444-c7e1-40cf-ab1a-a20da878e568",
                    "status": "reviewed",
                    "type": "license",
                    "created": "2019-05-30T22:01:40.000Z",
                    "documentVerificationStatus": "rejected",
                    "failureReason": "ScanDobMismatch",
                    "allFailureReasons": [
                        {
                            "reason": "ScanDobMismatch",
                            "description": "Scan DOB does not match DOB on account"
                        },
                        {
                            "reason": "ScanIdExpired",
                            "description": "ID is expired or missing expiration date"
                        }
                    ]
                  }
                ]
              },
              "total": 2
            }
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl =
              "https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2";

            dwolla
              .get(`${customerUrl}/documents`)
              .then((res) => res.body._embedded["documents"][0].id); // => '56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            documents = app_token.get('%s/documents' % customer_url)
            documents.body['total'] # => 2
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $customerUrl = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2';

            $customersApi = new DwollaSwagger\CustomersApi($apiClient);

            $customer = $customersApi->getCustomerDocuments($customerUrl);
            $customer->total; # => 2
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            documents = app_token.get "#{customer_url}/documents"
            documents._embedded['documents'][0].id # => "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
      parameters:
        - name: id
          in: path
          description: customer unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Documents'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /beneficial-owners/{id}/documents:
    get:
      tags:
        - documents
      summary: List documents for beneficial owner
      description: Returns all identity verification documents submitted for a beneficial owner. Includes document status, verification results, document type (passport, driver's license, etc.), and failure reasons if verification was rejected. Used to track document submission and verification progress during the business verification process.
      operationId: listBeneficialOwnerDocuments
      x-speakeasy-group: beneficialOwners.documents
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/beneficial-owners/176878b8-ecdb-469b-a82b-43ba5e8704b2/documents
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLfwKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

            ...

            {
              "_links": {
                "self": {
                  "href": "https://api-sandbox.dwolla.com/beneficial-owners/176878b8-ecdb-469b-a82b-43ba5e8704b2/documents"
                }
              },
              "_embedded": {
                "documents": [
                  {
                    "_links": {
                      "self": {
                        "href": "https://api-sandbox.dwolla.com/documents/56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
                      }
                    },
                    "id": "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc",
                    "status": "pending",
                    "type": "passport",
                    "created": "2015-09-29T21:42:16.000Z",
                    "documentVerificationStatus": "pending"
                  },
                  {
                    "_links": {
                        "self": {
                            "href": "https://api-sandbox.dwolla.com/documents/20988444-c7e1-40cf-ab1a-a20da878e568",
                            "type": "application/vnd.dwolla.v1.hal+json",
                            "resource-type": "document"
                        }
                    },
                    "id": "20988444-c7e1-40cf-ab1a-a20da878e568",
                    "status": "reviewed",
                    "type": "license",
                    "created": "2019-05-30T22:01:40.000Z",
                    "documentVerificationStatus": "rejected",
                    "failureReason": "ScanDobMismatch",
                    "allFailureReasons": [
                        {
                            "reason": "ScanDobMismatch",
                            "description": "Scan DOB does not match DOB on account"
                        },
                        {
                            "reason": "ScanIdExpired",
                            "description": "ID is expired or missing expiration date"
                        }
                    ]
                  }
                ]
              },
              "total": 2
            }
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var beneficialOwnerUrl =
              "https://api-sandbox.dwolla.com/beneficial-owners/176878b8-ecdb-469b-a82b-43ba5e8704b2";

            dwolla
              .get(`${beneficialOwnerUrl}/documents`)
              .then((res) => res.body._embedded["documents"][0].id); // => '56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            beneficial_owner_url = 'https://api-sandbox.dwolla.com/beneficial-owners/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            documents = app_token.get('%s/documents' % beneficial_owner_url)
            documents.body['total'] # => 2
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $beneficialOwnerUrl = 'https://api-sandbox.dwolla.com/beneficial-owners/176878b8-ecdb-469b-a82b-43ba5e8704b2';

            $beneficialOwnersApi = new DwollaSwagger\BeneficialOwnersApi($apiClient);

            $listDocsBeneficialOwner = $beneficialOwnersApi->getBeneficialOwnerDocuments($beneficialOwnerUrl);
            $listDocsBeneficialOwner->total; # => 2
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            beneficial_owner_url = 'https://api-sandbox.dwolla.com/beneficial-owners/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            documents = app_token.get "#{beneficial_owner_url}/documents"
            documents._embedded['documents'][0].id # => "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
      parameters:
        - name: id
          in: path
          description: beneficial owner unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Documents'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/kba: {}
  /customers/{id}/funding-sources:
    get:
      tags:
        - funding sources
      summary: List customer funding sources
      description: Returns all funding sources for a customer, including bank accounts and Dwolla balance (verified customers only). Shows verification status, limited account details, and creation dates. Supports filtering to exclude removed funding sources using the removed parameter.
      operationId: listCustomerFundingSources
      x-speakeasy-group: customers.fundingSources
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733/funding-sources
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl =
              "https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733";

            dwolla
              .get(`${customerUrl}/funding-sources`)
              .then((res) => res.body._embedded["funding-sources"][0].name); // => 'Jane Doe's Checking'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733'

            funding_sources = app_token.get('%s/funding-sources' % customer_url)
            funding_sources.body['_embedded']['funding-sources'][0]['name'] # => 'Jane Doe's Checking'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $customerUrl = 'https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733';

            $fsApi = new DwollaSwagger\FundingsourcesApi($apiClient);

            $fundingSources = $fsApi->getCustomerFundingSources($customerUrl);
            $fundingSources->_embedded->{'funding-sources'}[0]->name; # => "Jane Doe's Checking"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733'

            funding_sources = app_token.get "#{customer_url}/funding-sources"
            funding_sources._embedded['funding-sources'][0].name # => "Jane Doe's Checking"
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FundingSources'
        '403':
          description: forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: forbidden
                  message:
                    type: string
                    example: Not authorized to list funding sources.
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Customer not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /funding-sources/{id}:
    get:
      tags:
        - funding sources
      summary: Retrieve a funding source
      description: Returns detailed information for a specific funding source, including its type, status, and verification details. Supports bank accounts (via Open Banking) and Dwolla balance (verified customers only).
      operationId: getFundingSource
      x-speakeasy-group: fundingSources
      x-speakeasy-name-override: get
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/funding-sources/49dbaa24-1580-4b1c-8b58-24e26656fa31
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var fundingSourceUrl =
              "https://api-sandbox.dwolla.com/funding-sources/49dbaa24-1580-4b1c-8b58-24e26656fa31";

            dwolla.get(fundingSourceUrl).then((res) => res.body.name); // => "Test checking account"
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            funding_source_url = 'https://api-sandbox.dwolla.com/funding-sources/49dbaa24-1580-4b1c-8b58-24e26656fa31'

            funding_source = app_token.get(funding_source_url)
            funding_source.body['name'] # => 'Test checking account'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $fundingSourceUrl = 'https://api-sandbox.dwolla.com/funding-sources/49dbaa24-1580-4b1c-8b58-24e26656fa31';

            $fsApi = new DwollaSwagger\FundingsourcesApi($apiClient);

            $fundingSource = $fsApi->id($fundingSourceUrl);
            $fundingSource->name; # => "Test checking account"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            funding_source_url = 'https://api-sandbox.dwolla.com/funding-sources/49dbaa24-1580-4b1c-8b58-24e26656fa31'

            funding_source = app_token.get funding_source_url
            funding_source.name # => "Test checking account"
      parameters:
        - name: id
          in: path
          description: Funding source unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/FundingSource'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Funding source not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /funding-sources/{id}/micro-deposits:
    get:
      tags:
        - funding sources
      summary: Retrieve micro-deposits details
      description: Returns the status and details of micro-deposits for a funding source to check verification eligibility. Includes deposit status (pending, processed, failed), creation timestamp, and failure details with ACH return codes if deposits failed. Use this endpoint to determine when micro-deposits are ready for verification.
      operationId: getMicroDeposits
      x-speakeasy-group: fundingSources.microDeposits
      x-speakeasy-override: get
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/funding-sources/692486f8-29f6-4516-a6a5-c69fd2ce854c/micro-deposits
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var fundingSourceUrl =
              "https://api-sandbox.dwolla.com/funding-sources/692486f8-29f6-4516-a6a5-c69fd2ce854c";

            dwolla.get(`${fundingSourceUrl}/micro-deposits`).then((res) => res.body.status); // => "failed"
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            funding_source_url = 'https://api-sandbox.dwolla.com/funding-sources/692486f8-29f6-4516-a6a5-c69fd2ce854c'

            funding_source = app_token.get('%s/micro-deposits' % funding_source_url)
            funding_source.body['status'] # => 'failed'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $fundingSourceUrl = 'https://api-sandbox.dwolla.com/funding-sources/692486f8-29f6-4516-a6a5-c69fd2ce854c';

            $fsApi = new DwollaSwagger\FundingsourcesApi($apiClient);

            $fundingSource = $fsApi->verifyMicroDepositsExist($fundingSourceUrl);
            $fundingSource->status; # => "failed"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            funding_source_url = 'https://api-sandbox.dwolla.com/funding-sources/692486f8-29f6-4516-a6a5-c69fd2ce854c'

            funding_source = app_token.get "#{funding_source_url}/micro-deposits"
            funding_source.status # => "failed"
      parameters:
        - name: id
          in: path
          description: The ID of the FS that previously had micro-deposits initiated
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/HalLink'
                  created:
                    type: string
                    format: date-time
                    example: '2022-12-30T20:56:53.000Z'
                  status:
                    type: string
                    example: failed
                  failure:
                    type: object
                    properties:
                      code:
                        type: string
                        example: R03
                      description:
                        type: string
                        example: No Account/Unable to locate account
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /funding-sources/{id}/balance:
    get:
      tags:
        - funding sources
      summary: Retrieve funding source balance
      description: Returns the current balance for a specific funding source. For bank accounts, includes available and closing balances; for Dwolla balance, includes balance and total amounts. All responses include currency and last updated timestamp. Supports bank accounts (via Open Banking) and Dwolla balance (verified customers only).
      operationId: getFundingSourceBalance
      x-speakeasy-group: fundingSources.balance
      x-speakeasy-name-override: get
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/funding-sources/c2eb3f03-1b0e-4d18-a4a2-e552cc111418/balance
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var fundingSourceUrl =
              "https://api-sandbox.dwolla.com/funding-sources/c2eb3f03-1b0e-4d18-a4a2-e552cc111418";

            dwolla.get(`${fundingSourceUrl}/balance`).then((res) => res.body.balance.value);
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            funding_source_url = 'https://api-sandbox.dwolla.com/funding-sources/c2eb3f03-1b0e-4d18-a4a2-e552cc111418'

            funding_source = app_token.get('%s/balance' % funding_source_url)
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $fundingSourceUrl = 'https://api-sandbox.dwolla.com/funding-sources/c2eb3f03-1b0e-4d18-a4a2-e552cc111418';

            $fsApi = new DwollaSwagger\FundingsourcesApi($apiClient);

            $fundingSource = $fsApi->getBalance($fundingSourceUrl);
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            funding_source_url = 'https://api-sandbox.dwolla.com/funding-sources/c2eb3f03-1b0e-4d18-a4a2-e552cc111418'

            funding_source = app_token.get "#{funding_source_url}/balance"
      parameters:
        - name: id
          in: path
          description: ID of funding source to retrieve the balance for
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                oneOf:
                  - title: Dwolla Balance Response
                    description: Response for retrieving balance of a Dwolla Balance funding source
                    type: object
                    properties:
                      _links:
                        type: object
                        additionalProperties:
                          $ref: '#/components/schemas/HalLink'
                      balance:
                        type: object
                        properties:
                          value:
                            type: string
                            example: '4616.87'
                          currency:
                            type: string
                            example: USD
                      total:
                        type: object
                        properties:
                          value:
                            type: string
                            example: '4616.87'
                          currency:
                            type: string
                            example: USD
                      lastUpdated:
                        type: string
                        example: '2017-04-18T15:20:25.880Z'
                  - title: Bank Balance Response
                    description: Response for retrieving balance of a bank account verified through Open Banking
                    type: object
                    properties:
                      _links:
                        type: object
                        properties:
                          self:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.dwolla.com/funding-sources/42f48a64-2a9b-40df-9777-603ed2fe2764/balance
                              type:
                                type: string
                                example: application/vnd.dwolla.v1.hal+json
                              resource-type:
                                type: string
                                example: balance
                          funding-source:
                            type: object
                            properties:
                              href:
                                type: string
                                example: https://api.dwolla.com/funding-sources/42f48a64-2a9b-40df-9777-603ed2fe2764
                              type:
                                type: string
                                example: application/vnd.dwolla.v1.hal+json
                              resource-type:
                                type: string
                                example: funding-source
                      available:
                        type: object
                        properties:
                          value:
                            type: string
                            example: '542.00'
                          currency:
                            type: string
                            example: USD
                      closing:
                        type: object
                        properties:
                          value:
                            type: string
                            example: '542.00'
                          currency:
                            type: string
                            example: USD
                      lastUpdated:
                        type: string
                        example: '2024-09-09T16:39:14.219Z'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: notFound
                  message:
                    type: string
                    example: Funding source not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /on-demand-authorizations: {}
  /transfers: {}
  /customers/{id}/transfers:
    get:
      tags:
        - transfers
      summary: List and search transfers for a customer
      description: Retrieve and search transfers for a specific Customer with comprehensive filtering and pagination support. Supports searching by customer details (name, email, business name), amount ranges, date ranges, transfer status, and correlation IDs for enhanced transaction discovery. Returns paginated transfer results including status, amounts, metadata, and links to source and destination funding sources. Use this endpoint for transaction history analysis and reconciliation purposes.
      operationId: listCustomerTransfers
      x-speakeasy-group: customers.transfers
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295/transfers
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl =
              "http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295";

            dwolla
              .get(`${customerUrl}/transfers`)
              .then((res) => res.body._embedded["transfers"][0].status); // => "pending"
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295'

            transfers = app_token.get('%s/transfers' % customer_url)
            transfers.body['_embedded']['transfers'][0]['status'] # => 'pending'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $customerUrl = 'http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295';

            $TransfersApi = new DwollaSwagger\TransfersApi($apiClient);

            $transfers = $TransfersApi->getCustomerTransfers($customerUrl);
            $transfers->_embedded->{'transfers'}[0]->status; # => "pending"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'http://api-sandbox.dwolla.com/customers/33e56307-6754-41cb-81e2-23a7f1072295'

            transfers = app_token.get "#{customer_url}/transfers"
            transfers._embedded['transfers'][0].status # => "pending"
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: A string to search on fields `firstName`, `lastName`, `email`, `businessName`
          required: false
          schema:
            type: string
        - name: startAmount
          in: query
          description: Only include transactions with an amount equal to or greater than `startAmount`
          required: false
          schema:
            type: string
        - name: endAmount
          in: query
          description: Only include transactions with an amount equal to or less than `endAmount`
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: Only include transactions created after this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: Only include transactions created before this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter on transaction status. Possible values are `pending`, `processed`, `failed`, or `cancelled`
          required: false
          schema:
            type: string
        - name: correlationId
          in: query
          description: A string value to search on if `correlationId` was specified for a transaction
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of search results to return. Defaults to 25
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Number of search results to skip. Use for pagination
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Transfers'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /transfers/{id}/fees:
    get:
      tags:
        - transfers
      summary: List fees for a transfer
      description: Retrieve detailed fee information for a specific transfer by its unique identifier. Returns the total number of fees and individual fee transaction details including amounts, status, and links to source and destination accounts.
      operationId: listTransferFees
      x-speakeasy-group: transfers.fees
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388/fees
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var transferUrl =
              "https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388";

            dwolla.get(`${transferUrl}/fees`).then((res) => res.body.total); // => 2
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            transfer_url = 'https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388'

            fees = app_token.get('%s/fees' % transfer_url)
            fees.body['total'] # => 2
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $transferUrl = 'https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388';

            $transfersApi = new DwollaSwagger\TransfersApi($apiClient);

            $transferFees = $transfersApi->getFeesBySource($transferUrl);
            $transferFees->total; # => "2"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            transfer_url = 'https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388'

            fees = app_token.get "#{transfer_url}/fees"
            fees.total # => 2
      parameters:
        - name: id
          in: path
          description: ID of transfer to retrieve fees for
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        _links:
                          type: object
                          additionalProperties:
                            $ref: '#/components/schemas/HalLink'
                        id:
                          type: string
                          example: 416a2857-c887-4cca-bd02-8c3f75c4bb0e
                        status:
                          type: string
                          example: pending
                        amount:
                          type: object
                          properties:
                            value:
                              type: string
                              example: '2.00'
                            currency:
                              type: string
                              example: USD
                        created:
                          type: string
                          format: date-time
                          example: '2016-02-22T20:46:38.777Z'
                  total:
                    type: string
                    example: '1'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /transfers/{id}/failure:
    get:
      tags:
        - transfers
      summary: Retrieve a transfer failure reason
      description: Retrieve detailed failure information for a failed bank or VAN transfer including the ACH return code, description, and explanation. Returns failure details with links to the failed funding source and associated Customer for comprehensive error analysis. Available only for transfers with failure status and accessed through the failure link from transfer retrieval. Critical for troubleshooting payment failures and understanding ACH return reasons.
      operationId: getTransferFailureReason
      x-speakeasy-group: transfers.failure
      x-speakeasy-name-override: get
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/transfers/8997ebed-69be-e611-80ea-0aa34a9b2388/failure
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var transferUrl =
              "https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388";

            dwolla.get(`${transferUrl}/failure`).then((res) => res.body.code); // => 'R01'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            transfer_url = 'https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388'

            failure = app_token.get('%s/failure' % transfer_url)
            failure.body['code'] # => 'R01'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $transferUrl = 'https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388';

            $transfersApi = new DwollaSwagger\TransfersApi($apiClient);

            $transferFailure = $transfersApi->failureById($transferUrl);
            $transferFailure->code; # => "R01"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            transfer_url = 'https://api-sandbox.dwolla.com/transfers/83eb4b5e-a5d9-e511-80de-0aa34a9b2388'

            failure = app_token.get "#{transfer_url}/failure"
            failure.code # => "R01"
      parameters:
        - name: id
          in: path
          description: Transfer unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/HalLink'
                  code:
                    type: string
                    example: R03
                  description:
                    type: string
                    example: No Account/Unable to Locate Account
                  explanation:
                    type: string
                    example: The account number does not correspond to the individual identified in the entry or a valid account.
        '403':
          description: 403 Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: 404 Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /mass-payments: {}
  /mass-payments/{id}/items:
    get:
      tags:
        - mass payments
      summary: List items for a mass payment
      description: Retrieve individual payment items within a mass payment with optional status filtering and pagination support. Each item represents a distinct payment with status indicators (failed, pending, success) showing whether a transfer was successfully created. Returns paginated item details including amount, destination, metadata, and error information for failed items. Supports filtering by status and standard pagination.
      operationId: listMassPaymentItems
      x-speakeasy-group: massPayments.items
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var massPaymentUrl =
              "https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563";

            dwolla.get(`${massPaymentUrl}/items`).then((res) => res.body.total); // => 2
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            mass_payment_url = 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563'

            mass_payment_items = app_token.get('%s/items' % mass_payment_url)
            mass_payment_items.body['total'] # => "2"
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $massPaymentUrl = 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563';

            $massPaymentItemsApi = new DwollaSwagger\MasspaymentitemsApi($apiClient);

            $massPaymentItems = $massPaymentItemsApi->getMassPaymentItems($massPaymentUrl);
            $massPaymentItems->total; # => "2"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            mass_payment_url = 'https://api-sandbox.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563'

            mass_payment_items = app_token.get "#{mass_payment_url}/items"
            mass_payment_items.total # => 2
      parameters:
        - name: id
          in: path
          description: Mass payment unique identifier
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by item status
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items?limit=25&offset=0
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563/items?limit=25&offset=0
                  _embedded:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/MassPaymentItem'
                  total:
                    type: integer
                    format: int32
                    example: 3
        '403':
          description: Not authorized to list mass payment items
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: Forbidden
                  message:
                    type: string
                    example: Not authorized to list mass payment items.
        '404':
          description: Mass payment not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: Mass payment not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/mass-payments:
    get:
      tags:
        - mass payments
      summary: List mass payments for customer
      description: Retrieve all previously created mass payments for a Verified Customer account with optional correlation ID filtering and pagination support. Mass payments are returned ordered by date created with most recent appearing first. Returns paginated results including mass payment status, metadata, source funding information, and item links. Supports standard pagination parameters and correlation ID search for enhanced traceability.
      operationId: listCustomerMassPayments
      x-speakeasy-group: customers.massPayments
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/39e21228-5958-4c4f-96fe-48a4bf11332d/mass-payments
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl =
              "https://api-sandbox.dwolla.com/customers/ca32853c-48fa-40be-ae75-77b37504581b";

            dwolla
              .get(`${customerUrl}/mass-payments`, { limit: 10 })
              .then((res) => res.body._embedded["mass-payments"][0].status); // => "complete"
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api-sandbox.dwolla.com/customers/ca32853c-48fa-40be-ae75-77b37504581b'

            mass_payments = app_token.get('%s/mass-payments' % customer_url)
            mass_payments.body['_embedded']['mass-payments'][0]['status'] # => 'complete'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $customerUrl = 'http://api-sandbox.dwolla.com/customers/01B47CB2-52AC-42A7-926C-6F1F50B1F271';
            $masspaymentsApi = new DwollaSwagger\MasspaymentsApi($apiClient);
            $masspayments = $masspaymentsApi->getByCustomer($customerUrl);
            $masspayments->_embedded->{'mass-payments'}[0]->status; # => "complete"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api-sandbox.dwolla.com/customers/ca32853c-48fa-40be-ae75-77b37504581b'

            mass_payments = app_token.get "#{customer_url}/mass-payments", limit: 10
            mass_payments._embedded['mass-payments'][0].status # => "complete"
      parameters:
        - name: id
          in: path
          description: Customer ID to get mass payments for
          required: true
          schema:
            type: string
        - name: correlationId
          in: query
          description: A string value to search on if `correlationId` was specified for a transaction
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of search results to return. Defaults to 25
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Number of search results to skip. Use for pagination
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/MassPayments'
        '403':
          description: Not authorized to list mass payments
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAuthorized
                  message:
                    type: string
                    example: Not authorized to list mass payments.
        '404':
          description: Customer not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: Customer not found.
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/labels:
    get:
      tags:
        - labels
      summary: List labels for a customer
      description: Returns all labels for a specified Verified Customer, sorted by creation date (most recent first). Supports pagination with limit and offset parameters. Each label includes its current amount and creation timestamp.
      operationId: listCustomerLabels
      x-speakeasy-group: customers.labels
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb/labels
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl =
              "https://api-sandbox.dwolla.com/customers/5b29279d-6359-4c87-a318-e09095532733";

            dwolla
              .get(`${customerUrl}/labels`)
              .then((res) => res.body._embedded["labels"][0].id); // => '7e042ffe-e25e-40d2-b86e-748b98845ecc'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb'

            labels = app_token.get('%s/labels' % customer_url)
            labels.body['_embedded']['labels'][0]['id'] # => '7e042ffe-e25e-40d2-b86e-748b98845ecc'
        - lang: php
          source: |
            <?php
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            $customerUrl = 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb';

            $customersApi = new DwollaSwagger\CustomersApi($apiClient);

            $labels = $customersApi->getLabelsForCustomer($customerUrl);
            $labels->_embedded->{'labels'}[0]->id; # => "7e042ffe-e25e-40d2-b86e-748b98845ecc"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api-sandbox.dwolla.com/customers/315a9456-3750-44bf-8b41-487b10d1d4bb'

            labels = app_token.get "#{customer_url}/labels"
            labels._embedded['labels'][0].id # => "7e042ffe-e25e-40d2-b86e-748b98845ecc"
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: success operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Labels'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: Forbidden
                  message:
                    type: string
                    example: Not authorized to list customer labels
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: Customer not found
      x-speakeasy-mcp:
        scopes:
          - read
  /label-reallocations: {}
  /events:
    get:
      tags:
        - events
      summary: List events
      description: Returns a paginated list of events representing state changes to resources in your Dwolla application. Events track actions on customers, transfers, funding sources, and other resources, sorted by creation date (newest first). Events are retained for 30 days and are essential for webhook notifications and system activity monitoring.
      operationId: listEvents
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/events
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

            ...

            {
              "_links": {
                "self": {
                  "href": "https://api-sandbox.dwolla.com/events"
                },
                "first": {
                  "href": "https://api-sandbox.dwolla.com/events?limit=25&offset=0"
                },
                "last": {
                  "href": "https://api-sandbox.dwolla.com/events?limit=25&offset=150"
                },
                "next": {
                  "href": "https://api-sandbox.dwolla.com/events?limit=25&offset=25"
                }
              },
              "_embedded": {
                "events": [
                  {
                    "_links": {
                      "self": {
                        "href": "https://api-sandbox.dwolla.com/events/78e57644-56e4-4da2-b743-059479f2e80f"
                      },
                      "resource": {
                        "href": "https://api-sandbox.dwolla.com/transfers/47CFDDB4-1E74-E511-80DB-0AA34A9B2388"
                      },
                      "account": {
                        "href": "https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b"
                      }
                    },
                    "id": "78e57644-56e4-4da2-b743-059479f2e80f",
                    "created": "2015-10-16T15:58:18.000Z",
                    "topic": "bank_transfer_created",
                    "resourceId": "47CFDDB4-1E74-E511-80DB-0AA34A9B2388"
                  },
                  {
                    "_links": {
                      "self": {
                        "href": "https://api-sandbox.dwolla.com/events/f8e70f48-b7ff-47d0-9d3d-62a099363a76"
                      },
                      "resource": {
                        "href": "https://api-sandbox.dwolla.com/transfers/48CFDDB4-1E74-E511-80DB-0AA34A9B2388"
                      },
                      "account": {
                        "href": "https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b"
                      }
                    },
                    "id": "f8e70f48-b7ff-47d0-9d3d-62a099363a76",
                    "created": "2015-10-16T15:58:15.000Z",
                    "topic": "transfer_created",
                    "resourceId": "48CFDDB4-1E74-E511-80DB-0AA34A9B2388"
                  },
                  {
                    "_links": {
                      "self": {
                        "href": "https://api-sandbox.dwolla.com/events/9f0167e0-dce6-4a1a-ad26-30015d6f1cc1"
                      },
                      "resource": {
                        "href": "https://api-sandbox.dwolla.com/transfers/08A166BC-1B74-E511-80DB-0AA34A9B2388"
                      },
                      "account": {
                        "href": "https://api-sandbox.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581b"
                      }
                    },
                    "id": "9f0167e0-dce6-4a1a-ad26-30015d6f1cc1",
                    "created": "2015-10-16T15:37:03.000Z",
                    "topic": "bank_transfer_created",
                    "resourceId": "08A166BC-1B74-E511-80DB-0AA34A9B2388"
                  }
                ]
              },
              "total": 3
            }
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            dwolla.get("events").then((res) => res.body.total); // => 3
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            events = app_token.get('events')
            events.body['total'] # => 3
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $eventsApi = new DwollaSwagger\EventsApi($apiClient);

            $events = $eventsApi->events();
            $events->total; # => 3
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            events = app_token.get "events"
            events.total # => 3
      parameters:
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Events'
        '404':
          description: not found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /webhook-subscriptions:
    get:
      tags:
        - webhook subscriptions
      summary: List webhook subscriptions
      description: Retrieve all webhook subscriptions that belong to an application including their configuration details and status. Returns subscription details including webhook endpoints, status, creation dates, and links to associated webhooks with total count. Essential for webhook management and monitoring subscription health.
      operationId: listWebhookSubscriptions
      x-speakeasy-group: webhookSubscriptions
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/webhook-subscriptions
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            dwolla.get("webhook-subscriptions").then((res) => res.body.total); // => 1
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            webhook_subscriptions = app_token.get('webhook-subscriptions')
            webhook_subscriptions.body['total'] # => 1
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $webhookApi = new DwollaSwagger\WebhooksubscriptionsApi($apiClient);

            $retrieved = $webhookApi->_list();
            $retrieved->total; # => 1
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            webhook_subscriptions = app_token.get "webhook-subscriptions"
            webhook_subscriptions.total # => 1
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/webhook-subscriptions
                  _embedded:
                    type: object
                    properties:
                      webhook-subscriptions:
                        type: array
                        items:
                          $ref: '#/components/schemas/WebhookSubscription'
                  total:
                    type: integer
                    format: int32
                    example: 1
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /webhook-subscriptions/{id}/webhooks:
    get:
      tags:
        - webhook subscriptions
      summary: List webhooks for a webhook subscription
      description: Retrieve all fired webhooks for a specific webhook subscription with comprehensive filtering and pagination support. Returns webhook delivery history including topics, attempts, request/response details, and delivery status over a rolling 30-day period. Supports filtering by resource ID, date ranges, and pagination parameters for detailed webhook delivery analysis. Critical for debugging webhook delivery issues and monitoring event notification success rates.
      operationId: listWebhooks
      x-speakeasy-group: webhookSubscriptions.webhooks
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/webhook-subscriptions/10d4133e-b308-4646-b276-40d9d36def1c/webhooks
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var webhookSubscriptionUrl =
              "https://api-sandbox.dwolla.com/webhook-subscriptions/5af4c10a-f6de-4ac8-840d-42cb65454216";

            dwolla.get(`${webhookSubscriptionUrl}/webhooks`).then((res) => res.body.total); // => 5
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            webhook_subscription_url = 'https://api-sandbox.dwolla.com/webhook-subscriptions/5af4c10a-f6de-4ac8-840d-42cb65454216'

            hooks = app_token.get('%s/webhooks' % webhook_subscription_url)
            hooks.body['total'] # => 5
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $webhookApi = new DwollaSwagger\WebhooksApi($apiClient);

            $hooks = $webhookApi->hooksById('https://api-sandbox.dwolla.com/webhook-subscriptions/5af4c10a-f6de-4ac8-840d-42cb65454216');
            $hooks->total; # => 5
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            webhook_subscription_url = 'https://api-sandbox.dwolla.com/webhook-subscriptions/5af4c10a-f6de-4ac8-840d-42cb65454216'

            hooks = app_token.get "#{webhook_subscription_url}/webhooks"
            hooks.total # => 5
      parameters:
        - name: id
          in: path
          description: Webhook subscription unique identifier
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: How many results to return
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: How many results to skip
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: Only include webhooks created after this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: Only include webhooks created before this date. ISO-8601 format `YYYY-MM-DD`
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks?limit=25&offset=0
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks?limit=25&offset=150
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83/webhooks?limit=25&offset=25
                  _embedded:
                    type: object
                    properties:
                      webhooks:
                        type: array
                        items:
                          $ref: '#/components/schemas/Webhook'
                  total:
                    type: integer
                    format: int32
                    example: 1
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /exchange-partners:
    get:
      tags:
        - exchanges
      summary: List exchange partners
      description: Returns a list of all supported exchange partners. Each partner includes a unique ID, name, and status indicating whether they are active or inactive.
      operationId: listExchangePartners
      x-speakeasy-group: exchangePartners
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api.dwolla.com/exchange-partners
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

            ...

            {
                "_links": {
                    "self": {
                        "href": "https://api.dwolla.com/exchange-partners",
                        "type": "application/vnd.dwolla.v1.hal+json",
                        "resource-type": "exchange-partner"
                    }
                },
                "_embedded": {
                    "exchange-partners": [
                        {
                            "_links": {
                                "self": {
                                    "href": "https://api-sandbox.dwolla.com/exchange-partners/9b55a4b3-34ae-4607-b2d1-622f1eed77f9",
                                    "type": "application/vnd.dwolla.v1.hal+json",
                                    "resource-type": "exchange-partner"
                                }
                            },
                            "id": "9b55a4b3-34ae-4607-b2d1-622f1eed77f9",
                            "name": "Finicity",
                            "status": "active"
                        },
                        {
                            "_links": {
                                "self": {
                                    "href": "https://api-sandbox.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4",
                                    "type": "application/vnd.dwolla.v1.hal+json",
                                    "resource-type": "exchange-partner"
                                }
                            },
                            "id": "292317ec-e252-47d8-93c3-2d128e037aa4",
                            "name": "MX",
                            "status": "active"
                        }
                    ]
                },
                "total": 2
            }
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            token.get("exchange-partners").then((res) => res.body._embedded["exchange-partners"][0].id); // => '9b55a4b3-34ae-4607-b2d1-622f1eed77f9'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            exchange_partners = app_token.get('exchange-partners')
            exchange_partners.body['_embedded']['exchange-partners'][0]['id'] # => '9b55a4b3-34ae-4607-b2d1-622f1eed77f9'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $exchangePartnersApi = new ExchangePartnersApi($apiClient);

            $exchangePartners = $exchangePartnersApi->getExchangePartners();
            $exchangePartners->_embedded->{"exchange-partners"}[0]->id; # => "9b55a4b3-34ae-4607-b2d1-622f1eed77f9"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            exchange_partners = app_token.get "exchange-partners"
            exchange_partners._embedded['exchange-partners'][0].id # => "9b55a4b3-34ae-4607-b2d1-622f1eed77f9"
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ExchangePartners'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
      x-speakeasy-mcp:
        scopes:
          - read
  /exchanges:
    get:
      tags:
        - exchanges
      summary: List exchanges for an account
      description: Returns all exchanges for your Dwolla account. Exchanges represent connections between external bank accounts and your account through open banking partners. Includes exchange status, creation date, and associated partner information.
      operationId: listAccountExchanges
      x-speakeasy-group: accounts.exchanges
      x-speakeasy-name-override: list
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Exchanges'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          headers: {}
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/exchanges:
    get:
      tags:
        - exchanges
      summary: List exchanges for a customer
      description: Returns all exchanges for a specific customer. Exchanges represent connections between the customer's external bank accounts and open banking partners. Includes exchange status, creation date, and links to associated funding sources and partners.
      operationId: listCustomerExchanges
      x-speakeasy-group: customers.exchanges
      x-speakeasy-name-override: list
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api-sandbox.dwolla.com/customers/9fc74373-a5c7-40e4-aa59-d5f4c86a24ea/exchanges
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY

            ...

            {
                "_links": {
                    "self": {
                        "href": "https://api-sandbox.dwolla.com/exchanges",
                        "type": "application/vnd.dwolla.v1.hal+json",
                        "resource-type": "exchange"
                    }
                },
                "_embedded": {
                    "exchanges": [
                        {
                            "_links": {
                                "self": {
                                    "href": "https://api-sandbox.dwolla.com/exchanges/92822961-3a7f-42c0-b0cc-7ffef05717fa",
                                    "type": "application/vnd.dwolla.v1.hal+json",
                                    "resource-type": "exchange"
                                },
                                "exchange-partner": {
                                    "href": "https://api-sandbox.dwolla.com/exchange-partners/bca8d065-49a5-475b-a6b4-509bc8504d22",
                                    "type": "application/vnd.dwolla.v1.hal+json",
                                    "resource-type": "exchange-partner"
                                },
                                "funding-sources": {
                                    "href": "https://api-sandbox.dwolla.com/funding-sources",
                                    "type": "application/vnd.dwolla.v1.hal+json",
                                    "resource-type": "funding-source"
                                },
                                "customer": {
                                    "href": "https://api-sandbox.dwolla.com/customers/9fc74373-a5c7-40e4-aa59-d5f4c86a24ea",
                                    "type": "application/vnd.dwolla.v1.hal+json",
                                    "resource-type": "customer"
                                }
                            },
                            "id": "92822961-3a7f-42c0-b0cc-7ffef05717fa",
                            "status": "active",
                            "created": "2022-10-19T17:44:44.864Z"
                        }
                    ]
                },
                "total": 1
            }
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl = "https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2";

            token.get(`${customerUrl}/exchanges`).then((res) => res.body._embedded["exchanges"][0].id); // => '56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            exchanges = app_token.get('%s/exchanges' % customer_url)
            exchanges.body['_embedded']['exchanges'][0]['id'] # => '56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc'
        - lang: php
          source: |
            <?php
            // Using dwollaswagger - https://github.com/Dwolla/dwolla-swagger-php
            $exchangesApi = new ExchangesApi($apiClient);
            $customerUrl = "https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2";

            $exchanges = $exchangesApi->getCustomerExchanges($customerUrl);
            $exchanges->_embedded->{"exchanges"}[0]->id; # => "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
            ?>
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api-sandbox.dwolla.com/customers/176878b8-ecdb-469b-a82b-43ba5e8704b2'

            exchanges = app_token.get "#{customer_url}/exchanges"
            exchanges._embedded['exchanges'][0].id # => "56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc"
      parameters:
        - name: id
          in: path
          description: The ID of the Customer to list exchanges for
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/Exchanges'
        '404':
          description: Not Found
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: Customer ID not found. Check Customer ID.
      x-speakeasy-mcp:
        scopes:
          - read
  /customers/{id}/exchange-sessions: {}
  /exchanges/{id}/exchange-sessions: {}
  /customers/{id}/available-exchange-connections:
    get:
      tags:
        - exchange sessions
      summary: List available exchange connections
      description: Returns available exchange connections for a customer's bank accounts authorized through MX Connect. Each connection includes an account name and availableConnectionToken required to create exchanges and funding sources for transfers.
      operationId: listAvailableExchangeConnections
      x-speakeasy-group: customers
      x-speakeasy-name-override: listAvailableConnections
      x-codeSamples:
        - lang: bash
          source: |
            GET https://api.dwolla.com/customers/1b54c81a-261f-4779-bb57-9405e6e00694/available-exchange-connections
            Accept: application/vnd.dwolla.v1.hal+json
            Authorization: Bearer pBA9fVDBEyYZCEsLf/wKehyh1RTpzjUj5KzIRfDi0wKTii7DqY
        - lang: javascript
          source: |
            // Using dwolla-v2 - https://github.com/Dwolla/dwolla-v2-node
            var customerUrl =
              "https://api.dwolla.com/customers/1b54c81a-261f-4779-bb57-9405e6e00694";

            dwolla
              .get(`${customerUrl}/available-exchange-connections`)
              .then(
                (res) =>
                  res.body._embedded["available-exchange-connections"][0]
                    .availableConnectionToken
              ); // => 'eyJhY2NvdW50SWQiOiJBQ1QtMjAxY2FkM2MtYzc2Yi00N2M1LWI3Y2QtMTkxY2FhNzdlZWM5IiwibWVtYmVySWQiOiJNQlItZGNjZWY0ZWMtOGM4MC00NTlmLTlhMGItMTc1ZTA0OTJmZWIzIn0='
        - lang: python
          source: |
            # Using dwollav2 - https://github.com/Dwolla/dwolla-v2-python
            customer_url = 'https://api.dwolla.com/customers/1b54c81a-261f-4779-bb57-9405e6e00694'

            available_exchange_connection = app_token.get('%s/available-exchange-connections' % customer_url)
            available_exchange_connection.body['_embedded']['available-exchange-connections'][0]['availableConnectionToken'] # => 'eyJhY2NvdW50SWQiOiJBQ1QtMjAxY2FkM2MtYzc2Yi00N2M1LWI3Y2QtMTkxY2FhNzdlZWM5IiwibWVtYmVySWQiOiJNQlItZGNjZWY0ZWMtOGM4MC00NTlmLTlhMGItMTc1ZTA0OTJmZWIzIn0='
        - lang: php
          source: |
            /**
             * No example for this language yet.
             **/
        - lang: ruby
          source: |
            # Using dwolla_v2 - https://github.com/Dwolla/dwolla-v2-ruby
            customer_url = 'https://api.dwolla.com/customers/1b54c81a-261f-4779-bb57-9405e6e00694'

            available_exchange_connections = app_token.get "#{customer_url}/available-exchange-connections"
            available_exchange_connections._embedded['available-exchange-connections'][0].availableConnectionToken # => "eyJhY2NvdW50SWQiOiJBQ1QtMjAxY2FkM2MtYzc2Yi00N2M1LWI3Y2QtMTkxY2FhNzdlZWM5IiwibWVtYmVySWQiOiJNQlItZGNjZWY0ZWMtOGM4MC00NTlmLTlhMGItMTc1ZTA0OTJmZWIzIn0="
      parameters:
        - name: id
          in: path
          description: Customer's unique identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: successful operation
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                $ref: '#/components/schemas/AvailableExchangeConnections'
        '404':
          description: not found
          content:
            application/vnd.dwolla.v1.hal+json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: The requested resource was not found. Check Customer ID.
      x-speakeasy-mcp:
        scopes:
          - read
  /client-tokens: {}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: The media type of the response. Must be application/vnd.dwolla.v1.hal+json
      schema:
        type: string
        enum:
          - application/vnd.dwolla.v1.hal+json
        default: application/vnd.dwolla.v1.hal+json
  schemas:
    HalLink:
      title: HalLink
      type: object
      properties:
        href:
          type: string
          example: https://api.dwolla.com
        type:
          type: string
          example: application/vnd.dwolla.v1.hal+json
        resource-type:
          type: string
          example: resource-type
    Root:
      title: Root
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
    Address:
      title: Address
      type: object
      required:
        - address1
        - city
        - country
        - postalCode
        - state
      properties:
        address1:
          type: string
          example: 462 Main Street
        address2:
          type: string
          example: Suite 124
        city:
          type: string
          example: Des Moines
        postalCode:
          type: string
          example: '50309'
        state:
          type: string
          example: IA
    Account:
      title: Account
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: 2e21f010-3023-4891-aced-ed726d7cd5e1
        name:
          type: string
          example: Self Employed
        authorizedRep:
          type: string
          example: Jane Doe
        timezoneOffset:
          type: integer
          example: -6
        email:
          type: string
          example: janedoe@mail.com
        phone:
          type: string
          example: '5555552368'
        address:
          $ref: '#/components/schemas/Address'
        verificationStatus:
          type: string
          example: Verified
        ownershipStatus:
          type: string
          example: Exempt
        ownershipCertificationStatus:
          type: string
          example: Exempt
        type:
          type: string
          example: Commercial
        created:
          type: string
          format: date-time
          example: '2021-10-25T00:39:38.283Z'
    NotFoundError:
      title: NotFoundError
      description: Error response schema for 404 NotFound
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: NotFound
        message:
          type: string
          example: The requested resource was not found.
    CreateAccountFundingSource:
      title: CreateAccountFundingSource
      type: object
      properties:
        _links:
          type: object
          properties:
            exchange:
              type: object
              properties:
                href:
                  type: string
        name:
          type: string
        bankAccountType:
          type: string
          enum:
            - checking
            - savings
        accountNumber:
          type: string
        routingNumber:
          type: string
        channels:
          type: array
          items:
            type: string
      required:
        - name
        - bankAccountType
        - accountNumber
        - routingNumber
    BadRequestSchema:
      title: BadRequestSchema
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
    DuplicateResourceSchema:
      title: DuplicateResourceSchema
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: DuplicateResource
        message:
          type: string
          example: 'Bank already exists: id=df8392e5-4c06-42ed-b247-c098ed6f5a11'
        _links:
          type: object
          properties:
            about:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/funding-sources/df8392e5-4c06-42ed-b247-c098ed6f5a11
                type:
                  type: string
                  example: application/vnd.dwolla.v1.hal+json
                resource-type:
                  type: string
                  example: funding-source
    FundingSource:
      title: FundingSource
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: d3d6b41e-5567-4bc6-9c6e-0efd0a3e647e
        status:
          type: string
          example: unverified
        type:
          type: string
          example: bank
        bankAccountType:
          type: string
          example: checking
        name:
          type: string
          example: My bank
        created:
          type: string
          format: date-time
          example: '2022-07-23T00:18:21.419Z'
        removed:
          type: boolean
          example: true
        channels:
          type: array
          description: Payment processing channels supported by this funding source
          items:
            type: string
            enum:
              - ach
              - real-time-payments
              - wire
            example: ach
        bankName:
          type: string
          example: SANDBOX TEST BANK
        fingerprint:
          type: string
          example: 5012989b55af15400e8102f95d2ec5e7ce3aef45c01613280d80a236dd8d6c
    FundingSources:
      title: FundingSources
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            funding-sources:
              type: array
              items:
                $ref: '#/components/schemas/FundingSource'
        total:
          type: integer
          format: int32
          example: 3
    Transfer:
      title: Transfer
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: 15c6bcce-46f7-e811-8112-e8dd3bececa8
        status:
          type: string
          example: pending
        amount:
          type: object
          properties:
            value:
              type: string
              example: '42.00'
            currency:
              type: string
              example: USD
        created:
          type: string
          format: date-time
          example: '2018-12-03T22:00:22.970Z'
        clearing:
          type: object
          properties:
            source:
              type: string
              example: standard
            destination:
              type: string
              example: same-day
        metadata:
          type: object
          properties:
            paymentId:
              type: string
              example: '12345678'
            note:
              type: string
              example: Payment for completed work Dec. 1
        achDetails:
          type: object
          properties:
            source:
              type: object
              properties:
                addenda:
                  type: object
                  properties:
                    values:
                      type: array
                      items:
                        type: string
                        example: ABC123_AddendaValue
            destination:
              type: object
              properties:
                addenda:
                  type: object
                  properties:
                    values:
                      type: array
                      items:
                        type: string
                        example: ZYX987_AddendaValue
        rtpDetails:
          type: object
          description: Real-Time Payments (RTP) network specific details. Present when transfer was processed via RTP network.
          properties:
            destination:
              type: object
              description: RTP destination details with network identifiers
              properties:
                remittanceData:
                  type: string
                  description: Remittance information included in the transfer request
                  example: ABC_123 Remittance Data
                networkId:
                  type: string
                  description: Unique identifier for the transfer within the RTP network
                  example: 20210617021214273T1BG27487110796028
                endToEndReferenceId:
                  type: string
                  description: End-to-end reference identifier for the RTP transfer
                  example: E2E-RTP-20210617-001
        fedNowDetails:
          type: object
          description: FedNow Service network specific details. Present when transfer was processed via FedNow network.
          properties:
            destination:
              type: object
              description: FedNow destination details with network identifiers
              properties:
                remittanceData:
                  type: string
                  description: Remittance information included in the transfer request
                  example: ABC_123 Remittance Data
                networkId:
                  type: string
                  description: Unique identifier for the transfer within the FedNow network
                  example: 20240115123456789FEDNOW123456
                endToEndReferenceId:
                  type: string
                  description: End-to-end reference identifier for the FedNow transfer
                  example: E2E-FEDNOW-20240115-001
        correlationId:
          type: string
          example: 8a2cdc8d-629d-4a24-98ac-40b735229fe2
        processingChannel:
          type: object
          properties:
            destination:
              type: string
              enum:
                - real-time-payments
                - fed-now
              description: The payment network used to process the transfer
              example: real-time-payments
    Transfers:
      title: Transfers
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            transfers:
              type: array
              items:
                $ref: '#/components/schemas/Transfer'
        total:
          type: integer
          example: 100
    TransferAmount:
      title: TransferAmount
      type: object
      required:
        - value
        - currency
      properties:
        value:
          type: string
          example: '5.00'
        currency:
          type: string
          example: USD
    MassPayment:
      title: MassPayment
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: 11ac4051-7b76-44fc-87ab-ae23012393f0
        status:
          type: string
          example: complete
        created:
          type: string
          format: date-time
          example: '2022-01-20T17:41:41.000Z'
        metaData:
          type: object
        total:
          $ref: '#/components/schemas/TransferAmount'
        totalFees:
          $ref: '#/components/schemas/TransferAmount'
        correlationId:
          type: string
          example: CID-8a2cdc8d-629d-4a24-98ac-40b735229fe2
    MassPayments:
      title: MassPayments
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            mass-payments:
              type: array
              items:
                $ref: '#/components/schemas/MassPayment'
        total:
          type: integer
          example: 100
    UnverifiedCustomer:
      title: UnverifiedCustomer
      description: Shared models between all Customer types
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: c41125c5-99c4-4303-a9f6-d066d28a61e3
        type:
          type: string
          example: unverified
        status:
          type: string
          example: unverified
        correlationId:
          type: string
          example: CID-abe2bb3d-d2ff-433b-95a3-0debd960ed25
        created:
          type: string
          format: date-time
          example: '2022-10-07T16:46:13.023Z'
    UnverifiedBusinessCustomer:
      title: UnverifiedBusinessCustomer
      allOf:
        - $ref: '#/components/schemas/UnverifiedCustomer'
        - type: object
          properties:
            type:
              type: string
              example: receive-only
            status:
              type: string
              example: unverified
            businessName:
              type: string
              example: Jane Corp llc
    VerifiedPersonalCustomer:
      title: VerifiedPersonalCustomer
      allOf:
        - $ref: '#/components/schemas/UnverifiedCustomer'
        - type: object
          properties:
            type:
              type: string
              example: personal
            status:
              type: string
              example: verified
            address1:
              type: string
              example: 123 Main Street
            address2:
              type: string
              example: Ste 123
            city:
              type: string
              example: Des Moines
            state:
              type: string
              example: IA
            postalCode:
              type: string
              example: '50309'
    VerifiedSolePropCustomer:
      title: VerifiedSolePropCustomer
      allOf:
        - $ref: '#/components/schemas/UnverifiedCustomer'
        - type: object
          properties:
            type:
              type: string
              example: business
            status:
              type: string
              example: verified
            address1:
              type: string
              example: 123 Main Street
            address2:
              type: string
              example: Ste 123
            city:
              type: string
              example: Des Moines
            state:
              type: string
              example: IA
            postalCode:
              type: string
              example: '50309'
            businessName:
              type: string
              example: Jane Corp
            businessType:
              type: string
              example: soleProprietorship
            businessClassification:
              type: string
              example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
    VerifiedBusinessCustomer:
      title: VerifiedBusinessCustomer
      allOf:
        - $ref: '#/components/schemas/UnverifiedCustomer'
        - type: object
          properties:
            type:
              type: string
              example: business
            status:
              type: string
              example: verified
            address1:
              type: string
              example: 123 Main Street
            address2:
              type: string
              example: Ste 123
            city:
              type: string
              example: Des Moines
            state:
              type: string
              example: IA
            postalCode:
              type: string
              example: '50309'
            phone:
              type: string
              example: '555555555'
            website:
              type: string
              example: https://www.dwolla.com
            businessName:
              type: string
              example: Jane Corp
            doingBusinessAs:
              type: string
              example: Jane's Coffee and Sweets
            businessType:
              type: string
              example: llc
            businessClassification:
              type: string
              example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
            controller:
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Controller
                title:
                  type: string
                  example: CEO
                address:
                  type: object
                  properties:
                    address1:
                      type: string
                      example: 462 Main Street
                    address2:
                      type: string
                      example: Suite 123
                    address3:
                      type: string
                      example: Unit 123
                    city:
                      type: string
                      example: Des Moines
                    postalCode:
                      type: string
                      example: '50309'
                    country:
                      type: string
                      example: USA
                    stateProvinceRegion:
                      type: string
                      example: IA
    Customers:
      title: Customers
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            customers:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/UnverifiedCustomer'
                  - $ref: '#/components/schemas/UnverifiedBusinessCustomer'
                  - $ref: '#/components/schemas/VerifiedPersonalCustomer'
                  - $ref: '#/components/schemas/VerifiedSolePropCustomer'
                  - $ref: '#/components/schemas/VerifiedBusinessCustomer'
    ForbiddenError:
      title: ForbiddenError
      description: Error response schema for 403 Forbidden
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Forbidden
        message:
          type: string
          example: The supplied credentials are not authorized for this resource.
    CreateReceiveOnlyUser:
      title: CreateReceiveOnlyUser
      description: Create a Receive Only User
      type: object
      required:
        - firstName
        - lastName
        - email
        - type
      properties:
        firstName:
          type: string
          example: Account
        lastName:
          type: string
          example: Admin
        email:
          type: string
          example: accountAdmin@email.com
        type:
          type: string
          const: receive-only
        ipAddress:
          type: string
          example: 143.156.7.8
        phone:
          type: string
          example: 5555555555
        correlationId:
          type: string
          example: fc451a7a-ae30-4404-aB95-e3553fcd733
        businessName:
          type: string
          example: Jane Corp llc
    CreateUnverifiedCustomer:
      title: CreateUnverifiedCustomer
      description: Create an Unverified Customer
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
          example: Account
        lastName:
          type: string
          example: Admin
        email:
          type: string
          example: accountAdmin@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        phone:
          type: string
          example: 5555555555
        correlationId:
          type: string
          example: fc451a7a-ae30-4404-aB95-e3553fcd733
        businessName:
          type: string
          example: Jane Corp llc
    CreateVerifiedPersonalCustomer:
      title: CreateVerifiedPersonalCustomer
      description: Create a Verified Personal customer
      type: object
      required:
        - firstName
        - lastName
        - email
        - address1
        - city
        - state
        - postalCode
        - dateOfBirth
        - type
        - ssn
      properties:
        firstName:
          type: string
          example: Account
        lastName:
          type: string
          example: Admin
        email:
          type: string
          example: accountAdmin@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        phone:
          type: string
          example: 5555555555
        correlationId:
          type: string
          example: fc451a7a-ae30-4404-aB95-e3553fcd733
        type:
          type: string
          const: personal
        address1:
          type: string
          example: 99-99 33rd St
        address2:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        ssn:
          type: string
          example: 1234
        dateOfBirth:
          type: string
          example: '1980-09-12'
    CreateVerifiedSolePropCustomer:
      title: CreateVerifiedSolePropCustomer
      description: Create a Verified Business customer (Sole Proprietorship)
      type: object
      required:
        - firstName
        - lastName
        - email
        - address1
        - city
        - state
        - postalCode
        - dateOfBirth
        - type
        - ssn
        - businessType
        - businessName
        - businessClassification
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: johndoe@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        phone:
          type: string
          example: 5555555555
        correlationId:
          type: string
          example: fc451a7a-ae30-4404-aB95-e3553fcd733
        type:
          type: string
          const: business
        address1:
          type: string
          example: 99-99 33rd St
        address2:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        ssn:
          type: string
          example: 1234
        dateOfBirth:
          type: string
          example: '1980-09-12'
        businessClassification:
          type: string
          example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        businessName:
          type: string
          example: Jane Corp
        doingBusinessAs:
          type: string
          example: Jane's Electronics
        ein:
          type: string
          example: 00-0000000
        website:
          type: string
          example: https://www.domain.com
        businessType:
          type: string
          const: soleProprietorship
    InternationalAddress:
      title: InternationalAddress
      type: object
      required:
        - address1
        - city
        - country
        - stateProvinceRegion
      properties:
        address1:
          type: string
          example: 462 Main Street
        address2:
          type: string
          example: Suite 123
        address3:
          type: string
          example: Unit 123
        city:
          type: string
          example: Des Moines
        postalCode:
          type: string
          example: '50309'
        country:
          type: string
          example: USA
        stateProvinceRegion:
          type: string
          example: IA
    CreateVerifiedBusinessCustomerWithController:
      title: CreateVerifiedBusinessCustomerWithController
      description: Create a Verified Business customer with a US controller
      type: object
      required:
        - firstName
        - lastName
        - email
        - address1
        - city
        - state
        - postalCode
        - type
        - businessType
        - controller
        - businessName
        - businessClassification
        - ein
      properties:
        firstName:
          type: string
          example: Jane
        lastName:
          type: string
          example: Business
        email:
          type: string
          example: jane.business@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        phone:
          type: string
          example: 5555555555
        correlationId:
          type: string
          example: fc451a7a-ae30-4404-aB95-e3553fcd733
        type:
          type: string
          const: business
        address1:
          type: string
          example: 99-99 33rd St
        address2:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        businessClassification:
          type: string
          example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        businessName:
          type: string
          example: Jane Corp
        doingBusinessAs:
          type: string
          example: Jane's Electronics
        ein:
          type: string
          example: 00-0000000
        website:
          type: string
          example: https://www.domain.com
        controller:
          type: object
          required:
            - firstName
            - lastName
            - title
            - dateOfBirth
            - address
            - ssn
          properties:
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Controller
            title:
              type: string
              example: CEO
            dateOfBirth:
              type: string
              example: '1980-01-31'
            address:
              $ref: '#/components/schemas/InternationalAddress'
            ssn:
              type: string
              example: '1234'
        businessType:
          type: string
          enum:
            - llc
            - corporation
            - partnership
          example: llc
    Passport:
      title: Passport
      type: object
      required:
        - number
        - country
      properties:
        number:
          type: string
        country:
          type: string
    CreateVerifiedBusinessCustomerWithInternationalController:
      title: CreateVerifiedBusinessCustomerWithInternationalController
      description: Create a Verified Business customer with an international (non US) controller
      type: object
      required:
        - firstName
        - lastName
        - email
        - address1
        - city
        - state
        - postalCode
        - type
        - businessType
        - controller
        - businessName
        - businessClassification
        - ein
      properties:
        firstName:
          type: string
          example: Jane
        lastName:
          type: string
          example: Business
        email:
          type: string
          example: jane.business@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        phone:
          type: string
          example: 5555555555
        correlationId:
          type: string
          example: fc451a7a-ae30-4404-aB95-e3553fcd733
        type:
          type: string
          const: business
        address1:
          type: string
          example: 99-99 33rd St
        address2:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        businessClassification:
          type: string
          example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        businessName:
          type: string
          example: Jane Corp
        doingBusinessAs:
          type: string
          example: Jane's Electronics
        ein:
          type: string
          example: 00-0000000
        website:
          type: string
          example: https://www.domain.com
        controller:
          type: object
          required:
            - firstName
            - lastName
            - title
            - dateOfBirth
            - address
            - passport
          properties:
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Controller
            title:
              type: string
              example: CEO
            dateOfBirth:
              type: string
              example: '1980-01-31'
            address:
              $ref: '#/components/schemas/InternationalAddress'
            passport:
              $ref: '#/components/schemas/Passport'
        businessType:
          type: string
          enum:
            - llc
            - corporation
            - partnership
          example: llc
    BadRequestError:
      title: BadRequestError
      description: Error response schema for 400 Bad Request
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: BadRequest
        message:
          type: string
          example: The request body contains bad syntax or is incomplete.
    DeactivateCustomer:
      title: DeactivateCustomer
      description: Deactivate a Customer
      type: object
      required:
        - status
      properties:
        status:
          type: string
          example: deactivated
    ReactivateCustomer:
      title: ReactivateCustomer
      description: Reactivate a Customer
      type: object
      required:
        - status
      properties:
        status:
          type: string
          example: reactivated
    SuspendCustomer:
      title: SuspendCustomer
      description: Suspend a Customer
      type: object
      required:
        - status
      properties:
        status:
          type: string
          example: suspended
    UpdateUnverifiedAndReceiveOnly:
      title: UpdateUnverifiedAndReceiveOnly
      description: Update Unverified Customer or Receive Only User Information
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: accountAdmin@email.com
        businessName:
          type: string
          example: Jane Corp
    UpdateVerifiedPersonal:
      title: UpdateVerifiedPersonal
      description: Update Verified Personal Customer Information
      properties:
        email:
          type: string
          example: accountAdmin@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        address1:
          type: string
          example: 123 Main Street
        address2:
          type: string
          example: XYZ Suite
        city:
          type: string
          example: Des Moines
        state:
          type: string
          example: IA
        postalCode:
          type: string
          example: '50309'
        phone:
          type: string
          example: 5555555555
    UpdateVerifiedBusiness:
      title: UpdateVerifiedBusiness
      description: Update Verified Business Customer Information (both Sole Proprietorship and Non-Sole Proprietorship)
      allOf:
        - $ref: '#/components/schemas/UpdateVerifiedPersonal'
        - type: object
          properties:
            doingBusinessAs:
              type: string
              example: Jane's Electronics
            website:
              type: string
              example: https://www.domain.com
    UpgradeToVerifiedPersonal:
      title: UpgradeToVerifiedPersonal
      description: Upgrade Unverified Customer to Verified Personal Customer
      type: object
      required:
        - firstName
        - lastName
        - email
        - address1
        - city
        - state
        - postalCode
        - dateOfBirth
        - type
        - ssn
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: johndoe@email.net
        ipAddress:
          type: string
          example: 10.10.10.10
        type:
          type: string
          example: personal
        address1:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        dateOfBirth:
          type: string
          example: '1970-01-01'
        ssn:
          type: string
          example: 1234
    UpgradeToVerifiedBusiness:
      title: UpgradeToVerifiedBusiness
      description: Upgrade Unverified Customer to Verified Business Customer
      type: object
      required:
        - firstName
        - lastName
        - email
        - type
        - address1
        - city
        - state
        - postalCode
        - controller
        - businessClassification
        - businessType
        - businessName
        - ein
      properties:
        firstName:
          type: string
          example: Account
        lastName:
          type: string
          example: Admin
        email:
          type: string
          example: accountAdmin@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        type:
          type: string
          example: business
        address1:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        controller:
          type: object
          required:
            - firstName
            - lastName
            - title
            - dateOfBirth
            - address
          properties:
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Controller
            title:
              type: string
              example: CEO
            ssn:
              type: string
              example: 6789
            dateOfBirth:
              type: string
              format: date
              example: '1980-01-31'
            address:
              type: object
              required:
                - address1
                - city
                - stateProvinceRegion
                - postalCode
                - country
              properties:
                address1:
                  type: string
                  example: 1749 18th st
                address2:
                  type: string
                  example: apt 12
                city:
                  type: string
                  example: Des Moines
                stateProvinceRegion:
                  type: string
                  example: IA
                postalCode:
                  type: string
                  example: 50266
                country:
                  type: string
                  example: US
        businessClassification:
          type: string
          example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        businessType:
          type: string
          example: llc
        businessName:
          type: string
          example: Jane Corp
        ein:
          type: string
          example: 00-0000000
    UpgradeToVerifiedSoleProp:
      title: UpgradeToVerifiedSoleProp
      description: Upgrade Unverified Customer to Verified Business Customer (Sole Proprietorship)
      type: object
      required:
        - firstName
        - lastName
        - email
        - type
        - dateOfBirth
        - ssn
        - address1
        - city
        - state
        - postalCode
        - businessClassification
        - businessType
        - businessName
        - ein
      properties:
        firstName:
          type: string
          example: Business
        lastName:
          type: string
          example: Owner
        email:
          type: string
          example: solePropBusiness@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        type:
          type: string
          example: business
        dateOfBirth:
          type: string
          format: date
          example: '1980-01-31'
        ssn:
          type: string
          example: 6789
        address1:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        businessClassification:
          type: string
          example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        businessType:
          type: string
          example: soleProprietorship
        businessName:
          type: string
          example: Jane Corp
        ein:
          type: string
          example: 00-0000000
    RetryVerifiedPersonal:
      title: RetryVerifiedPersonal
      description: Retry Verification for Verified Personal Customer
      type: object
      required:
        - firstName
        - lastName
        - email
        - address1
        - city
        - state
        - postalCode
        - dateOfBirth
        - type
        - ssn
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: johndoe@email.net
        ipAddress:
          type: string
          example: 10.10.10.10
        type:
          type: string
          example: personal
        address1:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        dateOfBirth:
          type: string
          example: '1970-01-01'
        ssn:
          type: string
          example: 1234
    RetryVerifiedBusiness:
      title: RetryVerifiedBusiness
      description: Retry Verification for Verified Business Customer
      type: object
      required:
        - firstName
        - lastName
        - email
        - type
        - address1
        - city
        - state
        - postalCode
        - controller
        - businessClassification
        - businessType
        - businessName
        - ein
      properties:
        firstName:
          type: string
          example: Account
        lastName:
          type: string
          example: Admin
        email:
          type: string
          example: accountAdmin@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        type:
          type: string
          example: business
        address1:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        controller:
          type: object
          required:
            - firstName
            - lastName
            - title
            - dateOfBirth
            - address
          properties:
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Controller
            title:
              type: string
              example: CEO
            ssn:
              type: string
              example: 6789
            dateOfBirth:
              type: string
              format: date
              example: '1980-01-31'
            address:
              type: object
              required:
                - address1
                - city
                - stateProvinceRegion
                - postalCode
                - country
              properties:
                address1:
                  type: string
                  example: 1749 18th st
                address2:
                  type: string
                  example: apt 12
                city:
                  type: string
                  example: Des Moines
                stateProvinceRegion:
                  type: string
                  example: IA
                postalCode:
                  type: string
                  example: 50266
                country:
                  type: string
                  example: US
        businessClassification:
          type: string
          example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        businessType:
          type: string
          example: llc
        businessName:
          type: string
          example: Jane Corp
        ein:
          type: string
          example: 00-0000000
    RetryVerifiedSoleProp:
      title: RetryVerifiedSoleProp
      description: Retry Verification for Verified Business Customer (Sole Proprietorship)
      type: object
      required:
        - firstName
        - lastName
        - email
        - type
        - dateOfBirth
        - ssn
        - address1
        - city
        - state
        - postalCode
        - businessClassification
        - businessType
        - businessName
        - ein
      properties:
        firstName:
          type: string
          example: Business
        lastName:
          type: string
          example: Owner
        email:
          type: string
          example: solePropBusiness@email.com
        ipAddress:
          type: string
          example: 143.156.7.8
        type:
          type: string
          example: business
        dateOfBirth:
          type: string
          format: date
          example: '1980-01-31'
        ssn:
          type: string
          example: 6789
        address1:
          type: string
          example: 99-99 33rd St
        city:
          type: string
          example: Some City
        state:
          type: string
          example: NY
        postalCode:
          type: string
          example: 11101
        businessClassification:
          type: string
          example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
        businessType:
          type: string
          example: soleProprietorship
        businessName:
          type: string
          example: Jane Corp
        ein:
          type: string
          example: 00-0000000
    BusinessClassification:
      title: BusinessClassification
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            industry-classifications:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: 9ed3f66b-7d6f-11e3-95ac-5404a6144203
                  name:
                    type: string
                    example: Wineries
        id:
          type: string
          example: 9ed3f669-7d6f-11e3-b545-5404a6144203
        name:
          type: string
          example: Food retail and service
    BusinessClassifications:
      title: BusinessClassifications
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            mass-payments:
              type: array
              items:
                $ref: '#/components/schemas/BusinessClassification'
    BeneficialOwner:
      title: BeneficialOwner
      description: Request body model for a Beneficial Owner
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: d3d6b41e-5567-4bc6-9c6e-0efd0a3e647e
        verificationStatus:
          type: string
          example: verified
        created:
          type: string
          format: date-time
          example: '2022-07-23T00:18:21.419Z'
    BeneficialOwners:
      title: BeneficialOwners
      description: Request model for list beneficial owners
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            beneficial-owners:
              type: array
              items:
                $ref: '#/components/schemas/BeneficialOwner'
    CreateUSBeneficialOwner:
      title: CreateUSBeneficialOwner
      description: Create a US Beneficial Owner (identified by SSN)
      required:
        - firstName
        - lastName
        - dateOfBirth
        - address
        - ssn
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
        address:
          $ref: '#/components/schemas/InternationalAddress'
        ssn:
          type: string
    CreateInternationalBeneficialOwner:
      title: CreateInternationalBeneficialOwner
      description: Create an International Beneficial Owner (identified by Passport)
      required:
        - firstName
        - lastName
        - dateOfBirth
        - address
        - passport
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
        address:
          $ref: '#/components/schemas/InternationalAddress'
        passport:
          $ref: '#/components/schemas/Passport'
    ValidationErrorSchema:
      title: ValidationErrorSchema
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            code:
              type: string
              example: ValidationError
            message:
              type: string
              example: Validation error(s) present. See embedded errors list for more details.
    BeneficialOwnership:
      title: BeneficialOwnership
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HalLink'
        status:
          type: string
          example: uncertified
    Document:
      title: Document
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: 56502f7a-fa59-4a2f-8579-0f8bc9d7b9cc
        status:
          type: string
          example: reviewed
        type:
          type: string
          example: passport
        created:
          type: string
          format: date-time
          example: '2015-09-29T21:42:16.000Z'
        documentVerificationStatus:
          type: string
          example: rejected
        failureReason:
          type: string
          example: ScanDobMismatch
        allFailureReasons:
          type: array
          items:
            type: object
            properties:
              reason:
                type: string
                example: ScanDobMismatch
              description:
                type: string
                example: Scan DOB does not match DOB on account
    Documents:
      title: Documents
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            documents:
              type: array
              items:
                $ref: '#/components/schemas/Document'
        total:
          type: integer
          example: 100
    MaximumNumberOfResourcesSchema:
      title: MaximumNumberOfResourcesSchema
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: maximumNumberOfResources
        message:
          type: string
          example: Max of four files upload allowed. Please wait for Dwolla to manually check the documents.
    InvalidFileTypeSchema:
      title: InvalidFileTypeSchema
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: invalidFileType
        message:
          type: string
          example: 'File types supported: Personal IDs - .jpg, .jpeg or .png. Business Documents - .jpg, .jpeg, .png, or .pdf.'
    InvalidResourceStateSchema:
      title: InvalidResourceStateSchema
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: invalidResourceState
        message:
          type: string
          example: Resource cannot be modified. Document creation not allowed for already verified Customers or non-verified Customer types.
    NotAuthorizedSchema:
      title: NotAuthorizedSchema
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: notAuthorized
        message:
          type: string
          example: Not authorized to create documents.
    InvalidKbaSessionError:
      title: InvalidKbaSessionError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: InvalidResourceState
        message:
          type: string
          example: The kba session is no longer valid.
    ExpiredKbaSessionError:
      title: ExpiredKbaSessionError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: InvalidResourceState
        message:
          type: string
          example: The kba session has expired.
    CreateCustomerBankFundingSource:
      title: CreateCustomerBankFundingSource
      type: object
      description: Schema for creating a basic bank funding source using routing and account numbers. This is the traditional method of adding a bank account.
      required:
        - routingNumber
        - accountNumber
        - bankAccountType
        - name
      properties:
        routingNumber:
          type: string
          description: A bank routing number that identifies a bank or credit union in the U.S.
          example: '222222226'
        accountNumber:
          type: string
          description: The bank account number
          example: '123456789'
        bankAccountType:
          type: string
          enum:
            - checking
            - savings
            - general-ledger
            - loan
          description: Type of bank account
          example: checking
        name:
          type: string
          description: Arbitrary nickname for the funding source. Must be 50 characters or less.
          example: Jane Doe's Checking
        verified:
          type: boolean
          description: Use when creating an unverified bank account.
          const: false
          example: false
        plaidToken:
          type: string
          description: A processor token obtained from Plaid for adding and verifying a bank
        channels:
          type: array
          items:
            type: string
            enum:
              - wire
          description: An array containing a list of processing channels. ACH is the default processing channel for bank transfers.
        _links:
          type: object
          properties:
            on-demand-authorization:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api-sandbox.dwolla.com/on-demand-authorizations/30e7c028-0bdf-e511-80de-0aa34a9b2388
    CreateCustomerExchangeFundingSource:
      title: CreateCustomerExchangeFundingSource
      type: object
      description: Schema for creating a funding source using an exchange resource. This method is used when the bank account information is obtained via Instant Account Verification (IAV) through an exchange partner (like Plaid, MX, or Finicity).
      required:
        - _links
        - bankAccountType
        - name
      properties:
        _links:
          type: object
          required:
            - exchange
          properties:
            exchange:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api-sandbox.dwolla.com/exchanges/6bc9109a-04fd-49b6-ace6-ca06fd282d65
            on-demand-authorization:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api-sandbox.dwolla.com/on-demand-authorizations/30e7c028-0bdf-e511-80de-0aa34a9b2388
        bankAccountType:
          type: string
          enum:
            - checking
            - savings
            - general-ledger
            - loan
          description: Type of bank account
          example: checking
        name:
          type: string
          description: Arbitrary nickname for the funding source. Must be 50 characters or less.
          example: Jane Doe's Checking
    CreateCustomerVirtualAccountFundingSource:
      title: CreateCustomerVirtualAccountFundingSource
      type: object
      description: Schema for creating a Virtual Account Number (VAN) . VANs are unique account numbers for receiving external transactions into a Dwolla Balance.
      required:
        - name
        - type
        - bankAccountType
      properties:
        name:
          type: string
          description: Arbitrary nickname for the funding source. Must be 50 characters or less.
          example: My First VAN
        type:
          type: string
          enum:
            - virtual
          description: Type of funding source. Must be set to "virtual" for VAN creation.
          example: virtual
        bankAccountType:
          type: string
          enum:
            - checking
          description: Type of bank account. Must be "checking" for Virtual Account Numbers.
          example: checking
    CreateCustomerFundingSource:
      title: Create Customer Funding Source
      description: |
        Parameters for creating customer funding sources using different methods:
        - Bank Account: Traditional method using routing/account numbers
        - Exchange: Using IAV through exchange partners (Plaid, MX, etc.)
        - Virtual Account: Creating Virtual Account Numbers (VANs)
      oneOf:
        - $ref: '#/components/schemas/CreateCustomerBankFundingSource'
        - $ref: '#/components/schemas/CreateCustomerExchangeFundingSource'
        - $ref: '#/components/schemas/CreateCustomerVirtualAccountFundingSource'
    InactiveExchangeError:
      title: InactiveExchangeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: InactiveExchange
        message:
          type: string
          example: The Exchange was removed or disabled.
    InvalidExchangeTokenError:
      title: InvalidExchangeTokenError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: InvalidExchangeToken
        message:
          type: string
          example: The exchange token is not valid to perform this operation.
    DuplicateFundingSourceError:
      title: DuplicateFundingSourceError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Duplicate funding source or validation error. Authorization already associated to a funding source.
    UpdateUnverifiedBank:
      title: UpdateUnverifiedBank
      description: Request body for updating information of an unverified bank funding source
      type: object
      required:
        - name
      properties:
        routingNumber:
          type: string
          example: 222222226
        accountNumber:
          type: string
          example: 123456789
        bankAccountType:
          type: string
          example: checking
        name:
          type: string
          example: Jane Doe’s Checking
    UpdateVerifiedBank:
      title: UpdateVerifiedBank
      description: Request body for updating information of a Verified bank funding source
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Jane Doe’s Checking
    RemoveBank:
      title: RemoveBank
      description: Request body for removing a bank funding source
      type: object
      required:
        - removed
      properties:
        removed:
          type: boolean
          example: true
    VerifyMicroDeposits:
      title: VerifyMicroDeposits
      description: Request body for verifying micro-deposits
      type: object
      required:
        - amount1
        - amount2
      properties:
        amount1:
          type: object
          required:
            - value
            - currency
          properties:
            value:
              type: string
              example: 0.02
            currency:
              type: string
              example: USD
        amount2:
          type: object
          required:
            - value
            - currency
          properties:
            value:
              type: string
              example: 0.03
            currency:
              type: string
              example: USD
    OnDemandAuthorization:
      title: OnDemandAuthorization
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/on-demand-authorizations/30e7c028-0bdf-e511-80de-0aa34a9b2388
        bodyText:
          type: string
          example: I agree that future payments to Company ABC inc. will be processed by the Dwolla payment system from the selected account above. In order to cancel this authorization, I will change my payment settings within my Company ABC inc. account.
        buttonText:
          type: string
          example: Agree & Continue
    SourceNotFoundError:
      title: SourceNotFoundError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Funding source not found.
                  path:
                    type: string
                    example: /_links/source/href
                  _links:
                    type: object
                    example: {}
    ReceiverNotFoundError:
      title: ReceiverNotFoundError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Receiver not found.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidSourceFundingSourceError:
      title: InvalidSourceFundingSourceError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid funding source.
                  path:
                    type: string
                    example: /_links/source/href
                  _links:
                    type: object
                    example: {}
    SenderRestrictedError:
      title: SenderRestrictedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Sender restricted.
                  path:
                    type: string
                    example: /_links/source/href
                  _links:
                    type: object
                    example: {}
    ReceiverRestrictedError:
      title: ReceiverRestrictedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Receiver restricted.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidMetadataError:
      title: InvalidMetadataError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid metadata.
                  path:
                    type: string
                    example: /metadata
                  _links:
                    type: object
                    example: {}
    OperationBlockedError:
      title: OperationBlockedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Receiver cannot receive from sender.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidAmountLimitError:
      title: InvalidAmountLimitError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid amount. The supplied amount is greater than your transaction limit.
                  path:
                    type: string
                    example: /amount/value
                  _links:
                    type: object
                    example: {}
    CannotParseAmountError:
      title: CannotParseAmountError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Invalid amount. The supplied amount must be a positive number.
                  path:
                    type: string
                    example: /amount/value
                  _links:
                    type: object
                    example: {}
    InsufficientFundsError:
      title: InsufficientFundsError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InsufficientFunds
                  message:
                    type: string
                    example: Insufficient funds.
                  path:
                    type: string
                    example: /_links/source/href
                  _links:
                    type: object
                    example: {}
    FacilitatorFeeAccountNotFoundError:
      title: FacilitatorFeeAccountNotFoundError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Facilitator fee account not found.
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    FacilitatorFeeSumTooLargeError:
      title: FacilitatorFeeSumTooLargeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Facilitator fee sum too large.
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    FacilitatorFeeBelowMinimumError:
      title: FacilitatorFeeBelowMinimumError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Facilitator fee below minimum.
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    HighRiskError:
      title: HighRiskError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Due to account restrictions, we are unable to process this transaction.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    IncompatibleHoldingsError:
      title: IncompatibleHoldingsError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Receiver cannot receive from sender.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    DirectAccountWithoutBankError:
      title: DirectAccountWithoutBankError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: RequiresFundingSource
                  message:
                    type: string
                    example: Receiver requires funding source.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    SourceSameAsDestinationError:
      title: SourceSameAsDestinationError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Receiver cannot be the owner of the source funding source.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidFacilitatorError:
      title: InvalidFacilitatorError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Account cannot facilitate this transaction.
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    InvalidFacilitatorFeeCollectFromError:
      title: InvalidFacilitatorFeeCollectFromError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Unable to charge fee to specified destination.
                  path:
                    type: string
                    example: /fees/_links/charge-to/href
                  _links:
                    type: object
                    example: {}
    InvalidFacilitatorFeeCollectFromCombinationError:
      title: InvalidFacilitatorFeeCollectFromCombinationError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Currently, all fees must be paid by same destination."
                  path:
                    type: string
                    example: /fees/_links/charge-to/href
                  _links:
                    type: object
                    example: {}
    InvalidDestinationFundingSourceError:
      title: InvalidDestinationFundingSourceError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid destination funding source.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidFacilitatorFeeAmountError:
      title: InvalidFacilitatorFeeAmountError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid facilitator fee amount.
                  path:
                    type: string
                    example: /fees/_links/charge-to/href
                  _links:
                    type: object
                    example: {}
    WeeklyReceiveLimitReachedError:
      title: WeeklyReceiveLimitReachedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Destination customer has reached its weekly receive limit.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidDestinationClearingTypeError:
      title: InvalidDestinationClearingTypeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Destination clearing type is currently not enabled.
                  path:
                    type: string
                    example: /clearing/destination
                  _links:
                    type: object
                    example: {}
    InvalidAmountForDestinationClearingTypeError:
      title: InvalidAmountForDestinationClearingTypeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Amount is above the allowed threshold for the specified destination clearing type.
                  path:
                    type: string
                    example: /amount/value
                  _links:
                    type: object
                    example: {}
    InvalidCorrelationIdError:
      title: InvalidCorrelationIdError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Correlation id must be at least one character and up to 255 characters when supplied.
                  path:
                    type: string
                    example: /correlationId
                  _links:
                    type: object
                    example: {}
    SourceAddendaMaxLengthError:
      title: SourceAddendaMaxLengthError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Ach addenda entries can be up to 80 characters when supplied.
                  path:
                    type: string
                    example: /achDetails/source/addenda/values
                  _links:
                    type: object
                    example: {}
    DestinationAddendaMaxLengthError:
      title: DestinationAddendaMaxLengthError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Ach addenda entries can be up to 80 characters when supplied.
                  path:
                    type: string
                    example: /achDetails/destination/addenda/values
                  _links:
                    type: object
                    example: {}
    AchAddendaEntriesNotEnabledForAccountError:
      title: AchAddendaEntriesNotEnabledForAccountError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Supplying ach addenda entries is currently not enabled.
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    PointOfSaleAddendaEntriesNotEnabledForAccountError:
      title: PointOfSaleAddendaEntriesNotEnabledForAccountError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Supplying point of sale addenda entries is currently not enabled.
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    IncompatibleAddendaEntriesError:
      title: IncompatibleAddendaEntriesError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Addenda must not include both 'values' and 'pointOfSale addenda
                  path:
                    type: string
                    example: /achDetails/source/addenda/pointOfSale
                  _links:
                    type: object
                    example: {}
    InvalidPointOfSaleAddendaIdentificationCodeError:
      title: InvalidPointOfSaleAddendaIdentificationCodeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Identification code on a Point of Sale addenda entry is required and can be up to 6 characters.
                  path:
                    type: string
                    example: /achDetails/source/addenda/pointOfSale/identificationCode
                  _links:
                    type: object
                    example: {}
    InvalidPointOfSaleAddendaSerialNumberError:
      title: InvalidPointOfSaleAddendaSerialNumberError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Serial number on a Point of Sale addenda entry is required and can be up to 6 characters.
                  path:
                    type: string
                    example: /achDetails/source/addenda/pointOfSale/serialNumber
                  _links:
                    type: object
                    example: {}
    InvalidPointOfSaleAddendaDateError:
      title: InvalidPointOfSaleAddendaDateError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: 'Date on a Point of Sale addenda entry is required and should be ISO-8601 format: YYYY-MM-DD.'
                  path:
                    type: string
                    example: /achDetails/source/addenda/pointOfSale/date
                  _links:
                    type: object
                    example: {}
    InvalidPointOfSaleAddendaAddressError:
      title: InvalidPointOfSaleAddendaAddressError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Address on a Point of Sale addenda entry is required and can be up to 27 characters.
                  path:
                    type: string
                    example: /achDetails/source/addenda/pointOfSale/address
                  _links:
                    type: object
                    example: {}
    InvalidPointOfSaleAddendaCityError:
      title: InvalidPointOfSaleAddendaCityError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: City on a Point of Sale addenda entry is required and can be up to 15 characters.
                  path:
                    type: string
                    example: /achDetails/source/addenda/pointOfSale/city
                  _links:
                    type: object
                    example: {}
    InvalidPointOfSaleAddendaStateError:
      title: InvalidPointOfSaleAddendaStateError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: State on a Point of Sale addenda entry is required and should be a valid 2-letter abbreviation.
                  path:
                    type: string
                    example: /achDetails/source/addenda/pointOfSale/state
                  _links:
                    type: object
                    example: {}
    TransferExpiredForFeeError:
      title: TransferExpiredForFeeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Return fees can only be charged within 45 days of the original transfer's settlement date.
                  path:
                    type: string
                    example: /_links/failed-transfer/href
                  _links:
                    type: object
                    example: {}
    InvalidFeeOdfiError:
      title: InvalidFeeOdfiError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Transfer ineligible.
                  path:
                    type: string
                    example: /_links/failed-transfer/href
                  _links:
                    type: object
                    example: {}
    InvalidSourceBankAccountTypeError:
      title: InvalidBankAccountTypeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid bank account type
                  path:
                    type: string
                    example: /_links/source/href
                  _links:
                    type: object
                    example: {}
    InvalidDestinationBankAccountTypeError:
      title: InvalidDestinationBankAccountTypeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid bank account type
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    IncompatibleSourceAndDestinationTypesError:
      title: IncompatibleSourceAndDestinationTypesError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Card type funding sources can only accept payments directly from a balance
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    IncompatibleSourceForRtpDestinationError:
      title: IncompatibleSourceForRtpDestinationError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Transfers using the Real Time Payments processing channel must be funded by a balance
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidAmountForDestinationProcessingChannelError:
      title: InvalidAmountForDestinationProcessingChannelError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Amount is greater than the allowed threshold for the specified destination processing channel.
                  path:
                    type: string
                    example: /amount/value
                  _links:
                    type: object
                    example: {}
    RtpFacilitatorFeeNotSupportedError:
      title: RtpFacilitatorFeeNotSupportedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Real Time Payments does not currently support facilitator fees
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    RtpUnverifiedSenderNotSupportedError:
      title: RtpUnverifiedSenderNotSupportedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Real Time Payments does not currently support unverified senders
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    RtpPersonalToPersonalNotSupportedError:
      title: RtpPersonalToPersonalNotSupportedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Real Time Payments does not currently support transfers between personal accounts
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    DestinationProcessingChannelNotSupportedError:
      title: DestinationProcessingChannelNotSupportedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Destination funding source does not support processing channel
                  path:
                    type: string
                    example: /processingChannel/destination
                  _links:
                    type: object
                    example: {}
    DestinationRemittanceDataMaxLengthError:
      title: DestinationRemittanceDataMaxLengthError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Remittance data entries can be up to 140 characters when supplied.
                  path:
                    type: string
                    example: /rtpDetails/destination/remittanceData
                  _links:
                    type: object
                    example: {}
    WithdrawInvalidAmountError:
      title: WithdrawInvalidAmountError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Invalid amount.
                  path:
                    type: string
                    example: /amount/value
                  _links:
                    type: object
                    example: {}
    WithdrawInvalidFundingSourceError:
      title: WithdrawInvalidFundingSourceError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Destination funding source is either removed or does not exist.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    WithdrawAccountRestrictedError:
      title: WithdrawAccountRestrictedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Account or customer restricted.
                  path:
                    type: string
                    example: /_links/source/href
                  _links:
                    type: object
                    example: {}
    WithdrawInvalidAmountForClearingTypeError:
      title: WithdrawInvalidAmountForClearingTypeError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Amount is above the allowed threshold for the specified clearing type.
                  path:
                    type: string
                    example: /amount/value
                  _links:
                    type: object
                    example: {}
    WithdrawInvalidWireBeneficiaryLocalityError:
      title: WithdrawInvalidWireBeneficiaryLocalityError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Beneficiary locality must not exceed 35 characters and contain only alphanumeric, white space, '.' or '#' characters.
                  path:
                    type: string
                    example: /wireInstructions/beneficiaryLocality
                  _links:
                    type: object
                    example: {}
    WithdrawInvalidWireBeneficiaryRegionError:
      title: WithdrawInvalidWireBeneficiaryRegionError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Beneficiary region must not exceed 35 characters and contain only alphanumeric, white space, '.' or '#' characters.
                  path:
                    type: string
                    example: /wireInstructions/beneficiaryRegion
                  _links:
                    type: object
                    example: {}
    WithdrawInvalidWireBeneficiaryCountryError:
      title: WithdrawInvalidWireBeneficiaryCountryError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Beneficiary country must not exceed 35 characters and contain only alphanumeric, white space, '.' or '#' characters.
                  path:
                    type: string
                    example: /wireInstructions/beneficiaryCountry
                  _links:
                    type: object
                    example: {}
    WithdrawInvalidWireOriginatorToBeneficiaryError:
      title: WithdrawInvalidWireOriginatorToBeneficiaryError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Originator to beneficiary items must not exceed 35 characters and contain only alphanumeric, white space, '.' or '#' characters.
                  path:
                    type: string
                    example: /wireInstructions/originatorToBeneficiary
                  _links:
                    type: object
                    example: {}
    WithdrawProcessingChannelNotSupportedError:
      title: WithdrawProcessingChannelNotSupportedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Unsupported processing channel.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    WithdrawRtpUnverifiedSenderNotSupportedError:
      title: WithdrawRtpUnverifiedSenderNotSupportedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Real Time Payments does not currently support unverified senders
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    WithdrawRtpPersonalWithdrawalNotSupportedError:
      title: WithdrawRtpPersonalWithdrawalNotSupportedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Real Time Payments withdrawal from a personal account is currently not supported
                  path:
                    type: string
                    example: ''
                  _links:
                    type: object
                    example: {}
    DepositAccountRestrictedError:
      title: DepositAccountRestrictedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Account is restricted.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    WireInvalidImadError:
      title: WireInvalidImadError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Missing or invalid IMAD.
                  path:
                    type: string
                    example: /imad
                  _links:
                    type: object
                    example: {}
    WireAccountRestrictedError:
      title: WireAccountRestrictedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Restricted
                  message:
                    type: string
                    example: Account or customer restricted.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    WireNotEnabledError:
      title: WireNotEnabledError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Wire transfers are currently not enabled.
                  path:
                    type: string
                    example: /_links/source/href
                  _links:
                    type: object
                    example: {}
    WireAccountNotFoundError:
      title: WireAccountNotFoundError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  message:
                    type: string
                    example: Account or customer invalid.
                  path:
                    type: string
                    example: /_links/destination/href
                  _links:
                    type: object
                    example: {}
    InvalidAttemptToFacilitateFundsError:
      title: InvalidAttemptToFacilitateFundsError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Forbidden
        message:
          type: string
          example: 'Invalid Funds Flow: this operation requires the funds flow ''Facilitate'' to be enabled'
    InvalidAttemptToPayInFundsError:
      title: InvalidAttemptToPayInFundsError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Forbidden
        message:
          type: string
          example: 'Invalid Funds Flow: this operation requires the funds flow ''Receive'' to be enabled'
    InvalidAttemptToPayOutFundsError:
      title: InvalidAttemptToPayOutFundsError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Forbidden
        message:
          type: string
          example: 'Invalid Funds Flow: this operation requires the funds flow ''Send'' to be enabled'
    RtpAccountSettingNotEnabledError:
      title: RtpAccountSettingNotEnabledError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: Forbidden
        message:
          type: string
          example: Real Time Payments not enabled for this account
    TooManyRequestsErrorError:
      title: TooManyRequestsErrorError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: TooManyRequests
        message:
          type: string
          example: Concurrent transfers with the given funding source are not supported. Please wait a short period of time before re-attempting the request.
    StatusInvalidError:
      title: StatusInvalidError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: Invalid
                  message:
                    type: string
                    example: Status invalid.
                  path:
                    type: string
                    example: /status
                  _links:
                    type: object
                    example: {}
    StatusNotAllowedError:
      title: StatusNotAllowedError
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: NotAllowed
                  message:
                    type: string
                    example: Status not allowed.
                  path:
                    type: string
                    example: /status
                  _links:
                    type: object
                    example: {}
    MassPaymentItem:
      title: MassPaymentItem
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/mass-payment-items/c1c7d293-63ec-e511-80df-0aa34a9b2388
            mass-payment:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/mass-payments/eb467252-808c-4bc0-b86f-a5cd01454563
            destination:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/funding-sources/b442c936-1f87-465d-a4e2-a982164b26bd
            transfer:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/transfers/fa3999db-41ed-e511-80df-0aa34a9b2388
        id:
          type: string
          example: 2f845bc9-41ed-e511-80df-0aa34a9b2388
        status:
          type: string
          example: success
        amount:
          type: object
          properties:
            value:
              type: string
              example: 1
            currency:
              type: string
              example: USD
        metadata:
          type: object
          properties:
            item1:
              type: string
              example: item1
        processingChannel:
          type: object
          properties:
            destination:
              type: string
              example: real-time-payments
    Label:
      title: Label
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: 7e042ffe-e25e-40d2-b86e-748b98845ecc
        created:
          type: string
          format: date-time
          example: '2022-05-15T22:19:09.635Z'
        amount:
          type: object
          properties:
            value:
              type: string
              example: 10
            currency:
              type: string
              example: USD
    Labels:
      title: Labels
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            labels:
              type: array
              items:
                $ref: '#/components/schemas/Label'
        total:
          type: integer
          example: 100
    LabelLedgerEntry:
      title: LabelLedgerEntry
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: 32d68709-62dd-43d6-a6df-562f4baec526
        amount:
          type: object
          properties:
            value:
              type: string
              example: -5
            currency:
              type: string
              example: USD
        created:
          type: string
          format: date-time
          example: '2019-05-16T01:54:58.062Z'
    LabelLedgerEntries:
      title: LabelLedgerEntries
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            ledger-entries:
              type: array
              items:
                $ref: '#/components/schemas/LabelLedgerEntry'
        total:
          type: integer
          example: 100
    Event:
      title: Event
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: 81f6e13c-557c-4449-9331-da5c65e61095
        created:
          type: string
          format: date-time
          example: '2015-10-16T15:37:02.000Z'
        topic:
          type: string
          example: customer_transfer_created
        resourceId:
          type: string
          example: 09A166BC-1B74-E511-80DB-0AA34A9B2388
    Events:
      title: Events
      type: object
      properties:
        _links:
          type: object
        additionalProperties:
          $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            events:
              type: array
              items:
                $ref: '#/components/schemas/Event'
        total:
          type: integer
          format: int32
          example: 3
    WebhookSubscription:
      title: WebhookSubscription
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/webhook-subscriptions/077dfffb-4852-412f-96b6-0fe668066589
            webhooks:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/webhook-subscriptions/077dfffb-4852-412f-96b6-0fe668066589/webhooks
        id:
          type: string
          example: 077dfffb-4852-412f-96b6-0fe668066589
        url:
          type: string
          example: http://myapplication.com/webhooks
        paused:
          type: boolean
          example: true
        created:
          type: string
          format: date-time
          example: '2022-10-28T16:20:47+00:00'
    InvalidUrlFormatError:
      title: InvalidUrlFormatError
      type: object
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Url must be a valid url.
                  path:
                    type: string
                    example: /url
                  _links:
                    type: object
                    example: {}
    SecretTooLongError:
      title: SecretTooLongError
      type: object
      properties:
        code:
          type: string
          example: ValidationError
        message:
          type: string
          example: Validation error(s) present. See embedded errors list for more details.
        _embedded:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    example: InvalidFormat
                  message:
                    type: string
                    example: Secret must be 128 or fewer characters.
                  path:
                    type: string
                    example: /secret
                  _links:
                    type: object
                    example: {}
    MaxSubscriptionsReachedError:
      title: MaxSubscriptionsReachedError
      type: object
      properties:
        code:
          type: string
          example: MaxNumberOfResources
        message:
          type: string
          example: The maximum number of subscriptions has been reached.
    TooManyRequestsError:
      title: TooManyRequestsError
      type: object
      properties:
        code:
          type: string
          example: Too Many Requests
        message:
          type: string
          example: Please wait a short period of time before re-attempting the request.
    Webhook:
      title: Webhook
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8
            subscription:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/webhook-subscriptions/a0943041-7a5c-4e8f-92de-b55711ef3a83
            retry:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8/retries
            event:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/events/03c7e14c-7f15-44a2-bcf7-83f2f7e95d50
        id:
          type: string
          example: 9ece9660-aa34-41eb-80d7-0125d53b45e8
        topic:
          type: string
          example: transfer_created
        accountId:
          type: string
          example: ca32853c-48fa-40be-ae75-77b37504581b
        eventId:
          type: string
          example: 03c7e14c-7f15-44a2-bcf7-83f2f7e95d50
        subscriptionId:
          type: string
          example: a0943041-7a5c-4e8f-92de-b55711ef3a83
        attempts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: d4d16621-c6b0-40cb-8dc3-0469fa9dc4e8
              request:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2022-10-27T17:07:34.304Z'
                  url:
                    type: string
                    example: https://myapp.runscope.net
                  headers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: X-Dwolla-Topic
                        value:
                          type: string
                          example: transfer_created
                  body:
                    type: string
                    example: id:03c7e14c-7f15-44a2-bcf7-83f2f7e95d50resourceId:81BA6F36-CD7C-E511-80DB-0AA34A9B2388topic:transfer_createdtimestamp:2022-10-27T17:07:34.207Z_links:self:href:https://api.dwolla.com/events/03c7e14c-7f15-44a2-bcf7-83f2f7e95d50account:href:https://api.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581bresource:href:https://api.dwolla.com/transfers/81BA6F36-CD7C-E511-80DB-0AA34A9B2388
              response:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2022-10-27T17:07:34.308Z'
                  headers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Date
                        value:
                          type: string
                          example: Tue 27 Oct 2022 17:07:34 GMT
                  statusCode:
                    type: integer
                    format: int32
                    example: 200
                  body:
                    type: string
                    example: body:id:03c7e14c-7f15-44a2-bcf7-83f2f7e95d50resourceId:81BA6F36-CD7C-E511-80DB-0AA34A9B2388topic:transfer_createdtimestamp:2022-10-27T17:07:34.207Z_links:self:href:https://api.dwolla.com/events/03c7e14c-7f15-44a2-bcf7-83f2f7e95d50account:href:https://api.dwolla.com/accounts/ca32853c-48fa-40be-ae75-77b37504581bresource:href:https://api.dwolla.com/transfers/81BA6F36-CD7C-E511-80DB-0AA34A9B2388files:[]form:fragment:headers:Connection:[close]Content-Length:[453]Content-Type:[application/json; charset=UTF-8]Host:[myapp.runscope.net]User-Agent:[dwolla-webhooks/1.0]X-Dwolla-Topic:[transfer_created]X-Request-Signature:[bd93780bd7e1ad77ab821094aaa0f9e3dece5ee3]host:myapp.runscope.netmethod:POSTparams:path:/region:us5runscope_host:prod078.runscope.inscheme:httpssource:capturesource_ip:52.24.10.184timestamp:1.4459656543078682e+09url:https://myapp.runscope.net/
    WebhookRetries:
      title: WebhookRetries
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8/retries
        _embedded:
          type: object
          properties:
            retries:
              type: array
              items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8/retries/5aa27a0f-cf99-418d-a3ee-67c0ff99a494
                      webhook:
                        type: object
                        properties:
                          href:
                            type: string
                            example: https://api.dwolla.com/webhooks/9ece9660-aa34-41eb-80d7-0125d53b45e8
                  id:
                    type: string
                    example: 5aa27a0f-cf99-418d-a3ee-67c0ff99a494
                  timestamp:
                    type: string
                    format: date-time
                    example: '2022-11-02T17:43:26.000Z'
        total:
          type: integer
          format: int32
          example: 1
    ExchangePartner:
      title: ExchangePartner
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: d3d6b41e-5567-4bc6-9c6e-0efd0a3e647e
        name:
          type: string
          example: MX
        status:
          type: string
          example: unverified
        created:
          type: string
          format: date-time
          example: '2022-07-23T00:18:21.419Z'
    ExchangePartners:
      title: ExchangePartners
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            exchange-partners:
              type: array
              items:
                $ref: '#/components/schemas/ExchangePartner'
        total:
          type: integer
          format: int32
          example: 3
    Exchange:
      title: Exchange
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        id:
          type: string
          example: d3d6b41e-5567-4bc6-9c6e-0efd0a3e647e
        status:
          type: string
          example: unverified
        created:
          type: string
          format: date-time
          example: '2022-07-23T00:18:21.419Z'
    Exchanges:
      title: Exchanges
      type: object
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/HalLink'
        _embedded:
          type: object
          properties:
            exchanges:
              type: array
              items:
                $ref: '#/components/schemas/Exchange'
        total:
          type: integer
          format: int32
          example: 3
    CreateFinicitySecureExchange:
      title: CreateFinicitySecureExchange
      type: object
      properties:
        _links:
          type: object
          properties:
            exchange-partner:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4
        finicity:
          type: object
          properties:
            profile:
              type: integer
              format: int32
              example: 3
            version:
              type: string
              example: 1
            receiptId:
              type: string
              example: cr_4N47ou7SlppuIxq0ZUtACh10vYcloY
            receiptVersion:
              type: string
              example: 1
            customerId:
              type: string
              example: 5454874858510164000
            partnerId:
              type: integer
              format: int64
              example: 2445583946651
            products:
              type: array
              items:
                type: object
                properties:
                  product:
                    type: string
                    example: moneyTransferDetails
                  accountId:
                    type: string
                    example: 1015199035827334900
                  accessPeriod:
                    type: object
                    properties:
                      type:
                        type: string
                        example: timeframe
                      startTime:
                        type: string
                        format: date
                        example: '2022-07-06'
                      endTime:
                        type: string
                        format: date-time
                        example: '2022-08-16T06:06:20Z'
            timestamp:
              type: string
              format: date-time
              example: '2022-07-11T06:06:23Z'
    CreateMXSecureExchange:
      title: CreateMXSecureExchange
      type: object
      properties:
        _links:
          type: object
          properties:
            exchange-partner:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4
        token:
          type: string
          example: someMXProcessorToken
    CreateFlinksSecureExchange:
      title: CreateFlinksSecureExchange
      type: object
      required:
        - _links
        - token
      properties:
        _links:
          type: object
          required:
            - exchange-partner
          properties:
            exchange-partner:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/exchange-partners/a0b22a57-68df-4450-b507-47c937e64e89
        token:
          type: string
          description: The Flinks connection token
          example: MTExYTFhMWEtMTExMS0xYWExLTExMTEtMTFhMTExYTExMTFhOjIyMmIyYjFiLTIyMjItMmJiMi0yMjIyLTIyYjIyMmIyMjIyYg==
    CreatePlaidSecureExchange:
      title: CreatePlaidSecureExchange
      type: object
      properties:
        _links:
          type: object
          properties:
            exchange-partner:
              type: object
              properties:
                href:
                  type: string
                  example: https://api.dwolla.com/exchange-partners/f53ffb32-c84f-496a-9d9d-acd100d396ef
        token:
          type: string
          example: somePlaidProcessorToken
    InvalidExchangeToken:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: InvalidExchangeToken
        message:
          type: string
          example: Exchange token is expired.
    InvalidExchange:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: InvalidExchange
        message:
          type: string
          example: The exchange is no longer active.
    CreateMXOpenBankingExchange:
      title: CreateMXOpenBankingExchange
      type: object
      required:
        - _links
        - mx
      properties:
        _links:
          type: object
          required:
            - exchange-partner
          properties:
            exchange-partner:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/exchange-partners/bca8d065-49a5-475b-a6b4-509bc8504d22
        mx:
          type: object
          required:
            - availableConnectionToken
          properties:
            availableConnectionToken:
              type: string
              description: The MX connection token for the available connection
              example: eyJhY2NvdW50SWQiOiJBQ1QtMjAxY2FkM2MtYzc2Yi00N2M1LWI3Y2QtMTkxY2FhNzdlZWM5IiwibWVtYmVySWQiOiJNQlItZGNjZWY0ZWMtOGM4MC00NTlmLTlhMGItMTc1ZTA0OTJmZWIzIn0=
    CreatePlaidOpenBankingExchange:
      title: CreatePlaidOpenBankingExchange
      type: object
      required:
        - _links
        - plaid
      properties:
        _links:
          type: object
          required:
            - exchange-partner
          properties:
            exchange-partner:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/exchange-partners/f53ffb32-c84f-496a-9d9d-acd100d396ef
        plaid:
          type: object
          required:
            - publicToken
          properties:
            publicToken:
              type: string
              description: The Plaid public token for the connection
              example: public-production-d5456acb-01d5-4932-9783-e4c883cf1c0c
    CreateCustomerExchangeSessionWithRedirect:
      title: CreateCustomerExchangeSessionWithRedirect
      description: Create exchange session with redirect URL (required for mobile sessions with Plaid)
      type: object
      required:
        - _links
      properties:
        _links:
          type: object
          required:
            - exchange-partner
            - redirect-url
          properties:
            exchange-partner:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4
            redirect-url:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  description: Required for Plaid mobile sessions
                  examples:
                    - description: Plaid Android example
                      value: com.example.app123
                    - description: Plaid iOS example
                      value: https://example.com/app123
    CreateCustomerExchangeSessionForWeb:
      title: CreateCustomerExchangeSessionForWeb
      description: Create exchange session for web (MX and Plaid web sessions where redirect-url is not required)
      type: object
      required:
        - _links
      properties:
        _links:
          type: object
          required:
            - exchange-partner
          properties:
            exchange-partner:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/exchange-partners/292317ec-e252-47d8-93c3-2d128e037aa4
    ExchangeSession:
      type: object
      required:
        - created
        - _links
      properties:
        created:
          type: string
          format: date-time
          example: '2024-03-25T17:13:38.430Z'
        _links:
          type: object
          required:
            - self
            - exchange-partner
          properties:
            self:
              type: object
              required:
                - href
                - type
                - resource-type
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/exchange-sessions/9b7fb629-0fad-44f4-8c5e-44c25a0bfa8e
                type:
                  type: string
                  example: application/vnd.dwolla.v1.hal+json
                resource-type:
                  type: string
                  example: exchange-sessions
            exchange-partner:
              type: object
              required:
                - href
                - type
                - resource-type
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/exchange-partners/bca8d065-49a5-475b-a6b4-509bc8504d22
                type:
                  type: string
                  example: application/vnd.dwolla.v1.hal+json
                resource-type:
                  type: string
                  example: exchange-partner
            external-provider-session:
              type: object
              required:
                - href
                - type
                - resource-type
              properties:
                href:
                  type: string
                  format: uri
                  description: |
                    Present for MX exchange sessions.
                    Contains the URL to redirect the user to complete the authorization process.
                  examples:
                    - description: MX example
                      value: https://www.mx.com/connect/lAfkc7m897s3t1ks9mmwyj4ry7Zq0xql4grzAg1kz77x7c9jrwls1t22w6xt8d2lsxx9zpqv30js3wswfdwcrpAsqgbAfkqwpksp7c2chsx167xy90Asfc67dkj9y48y8p142xw3yp4x5l9t9gkk6m3yk5vwsvyq2qq7w9trszxwdl14lmkg7l6949bn5n41chdkbnxycy40n9b6fkbdwl6qt5wl107k1x8srvlkpz325p412x9tkyA5clf39109lsfrgz2lkgsvntqf7l0zzwb5hl658gdjbxwhb52krwybnbdAqfq69cdy54l05jkvfwyf01q89x48jtgtx290lzjdfcty1lwb8d648wns/eyJ1aV9tZXNzYWdlX3ZlcnNpb24iOjQsInVpX21lc3NhZ2Vfd2Vidmlld191cmxfc2NoZW1lIjoibXgiLCJtb2RlIjoidmVyaWZpY2F0aW9uIn0%3D
                type:
                  type: string
                  example: application/vnd.dwolla.v1.hal+json
                resource-type:
                  type: string
                  example: text/html
        externalProviderSessionToken:
          type: string
          description: |
            Present for Plaid exchange sessions.
            Contains the token to initialize the Plaid Link flow.
          example: link-production-b41e8ed3-0874-4c64-b07d-a77088979d5f
    CreateReAuthExchangeSessionForWeb:
      title: CreateReAuthExchangeSessionForWeb
      description: Create re-auth exchange session for web (Plaid web sessions where request body is optional)
      type: object
      properties: {}
    CreateReAuthExchangeSessionWithRedirect:
      title: CreateReAuthExchangeSessionWithRedirect
      description: Create re-auth exchange session with redirect URL (required for mobile sessions with Plaid)
      type: object
      required:
        - _links
      properties:
        _links:
          type: object
          required:
            - redirect-url
          properties:
            redirect-url:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  description: Required for Plaid mobile sessions
                  examples:
                    - description: Plaid Android example
                      value: com.example.app123
                    - description: Plaid iOS example
                      value: https://example.com/app123
    AvailableExchangeConnections:
      type: object
      required:
        - _links
        - _embedded
      properties:
        _links:
          type: object
          required:
            - self
            - customers
          properties:
            self:
              type: object
              required:
                - href
                - type
                - resource-type
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/customers/1b54c81a-261f-4779-bb57-9405e6e00694/available-exchange-connections
                type:
                  type: string
                  example: application/vnd.dwolla.v1.hal+json
                resource-type:
                  type: string
                  example: customer
            customers:
              type: object
              required:
                - href
                - type
                - resource-type
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.dwolla.com/customers/1b54c81a-261f-4779-bb57-9405e6e00694
                type:
                  type: string
                  example: application/vnd.dwolla.v1.hal+json
                resource-type:
                  type: string
                  example: customer
        _embedded:
          type: object
          required:
            - available-exchange-connections
          properties:
            available-exchange-connections:
              type: array
              items:
                type: object
                required:
                  - availableConnectionToken
                  - name
                properties:
                  availableConnectionToken:
                    type: string
                    description: Token representing the external bank account that can be used to create a funding source
                    example: eyJhY2NvdW50SWQiOiJBQ1QtMjAxY2FkM2MtYzc2Yi00N2M1LWI3Y2QtMTkxY2FhNzdlZWM5IiwibWVtYmVySWQiOiJNQlItZGNjZWY0ZWMtOGM4MC00NTlmLTlhMGItMTc1ZTA0OTJmZWIzIn0=
                  name:
                    type: string
                    description: Name of the external bank account
                    example: XYZ Checking
  headers:
    Location:
      description: The location of the created resource
      schema:
        type: string
